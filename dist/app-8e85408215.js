!function(){"use strict";angular.module("ElCinaroAdmin",["ui.router","ngMaterial","uiGmapgoogle-maps","md.data.table","angularMoment","moment-picker"])}(),function(){"use strict";angular.module("ElCinaroAdmin").constant("_",window._).constant("jQuery",window.jQuery).constant("Dropzone",window.Dropzone).constant("braintree",window.braintree).constant("baseApi","https://elcinaro-backend.herokuapp.com")}(),function(){"use strict";function e(e){e.defaults.xsrfCookieName="csrftoken",e.defaults.xsrfHeaderName="X-CSRFToken",e.defaults.headers.post["Content-Type"]="application/json"}function n(e){e.configure({key:"AIzaSyAonFuCDb7HjXUz0uocKbEGUJz91IL9EVs",libraries:"places"})}function t(e){e.fontSet("farm","farm-icons").icon("compost","assets/images/icons/icon-compost.svg").icon("spade","assets/images/icons/icon-spade.svg")}function o(e,n){e.definePalette("primary",{50:"#3ea34c",100:"#379143",200:"#307e3b",300:"#296c32",400:"#22592a",500:"1B4721",600:"#143518",700:"#0d2210",800:"#061007",900:"#000000",A100:"#45b655",A200:"#56bf64",A400:"#68c675",A700:"#000000",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 A100 A200"}),e.definePalette("accent",{50:"#1c3216",100:"#25441d",200:"#2f5625",300:"#39682d",400:"#427935",500:"#4c8b3c",600:"#60af4c",700:"#6eb85c",800:"#7ec06d",900:"#8ec87f",A100:"#60af4c",A200:"569D44",A400:"#4c8b3c",A700:"#9ecf91",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.definePalette("warn",{50:"#fbcba3",100:"#fabd8b",200:"#f9af72",300:"#f8a15a",400:"#f79341",500:"F68529",600:"#f57711",700:"#e26b0a",800:"#ca5f09",900:"#b25407",A100:"#fcd9bc",A200:"#fde7d4",A400:"#fef5ed",A700:"#994806",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.theme("default").primaryPalette("primary").accentPalette("accent").warnPalette("warn")}o.$inject=["$mdThemingProvider","$locationProvider"],angular.module("ElCinaroAdmin").config(o).config(e).config(t).config(n),e.$inject=["$httpProvider"],n.$inject=["uiGmapGoogleMapApiProvider"],t.$inject=["$mdIconProvider"]}(),function(){"use strict";function e(e,n,t){e.$state=n}angular.module("ElCinaroAdmin").run(e),e.$inject=["$rootScope","$state","Auth"]}(),function(){"use strict";function e(e,n,t){e.state("home",{url:"/",views:{main:{controller:"HomeController",controllerAs:"vm",templateUrl:"assets/views/home.html"}},authenticate:!1}).state("dashboard",{url:"/dashboard",views:{main:{controller:"DashboardController",controllerAs:"vm",templateUrl:"assets/views/dashboard/index.html"}},authenticate:!0}).state("dashboard.profile",{url:"/profile",views:{dashboard:{controller:"ProfileController",controllerAs:"vm",templateUrl:"assets/views/dashboard/profile.html"}},authenticate:!0}).state("dashboard.home",{url:"/home/",views:{dashboard:{controller:"HomeDashboardController",controllerAs:"vm",templateUrl:"assets/views/dashboard/home.html"}},authenticate:!0}).state("dashboard.actividades",{url:"/actividades/",views:{dashboard:{controller:"ActividadController",controllerAs:"vm",templateUrl:"assets/views/seguimiento/actividad.tmpl.html"}},authenticate:!0}).state("dashboard.rubros",{url:"/rubros/:id",views:{dashboard:{controller:"SemillasController",controllerAs:"vm",templateUrl:"assets/views/dashboard/rubros.html"}},authenticate:!0}).state("dashboard.cultivos",{url:"/cultivos/:id",views:{dashboard:{controller:"CultivosController",controllerAs:"vm",templateUrl:"assets/views/dashboard/cultivos.html"}},authenticate:!0}).state("dashboard.semillas",{url:"/semillas/:id",views:{dashboard:{controller:"SemillasController",controllerAs:"vm",templateUrl:"assets/views/dashboard/semillas.html"}},authenticate:!0}).state("dashboard.lotes",{url:"/lotes/:id",views:{dashboard:{controller:"LotesController",controllerAs:"vm",templateUrl:"assets/views/dashboard/lotes.html"}},authenticate:!0}).state("dashboard.suelos",{url:"/suelos/:id",views:{dashboard:{controller:"SuelosController",controllerAs:"vm",templateUrl:"assets/views/dashboard/suelos.html"}},authenticate:!0}).state("orders",{url:"/orders",views:{main:{controller:"OrdersController",controllerAs:"vm",templateUrl:"assets/views/orders.html"}},authenticate:!1}).state("login",{url:"/login",views:{main:{controller:"LoginController",controllerAs:"vm",templateUrl:"assets/views/login.html"}},authenticate:!1}),n.otherwise("/")}angular.module("ElCinaroAdmin").config(e),e.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"]}(),function(){"use strict";function e(e,n,t,o){function i(){console.log("Actividad Controller"),a()}function a(){o.getRubros(r.query).then(function(e){r.categories=e.results}).catch(function(e){console.log(e)}).finally(function(){r.listReady=!0,console.log(r.categories)})}var r=this;r.listReady=!1,r.list=[],r.categories=[],r.query={page:1,limit:100,order:"",filter:""},r.data={cultivos:{},rubros:[]},r.map={name:"nombre",image:""},i(),r.cancel=function(){$mdDialog.$hide()},t.$watch("vm.categories",function(e,n){console.log(e)})}angular.module("ElCinaroAdmin").controller("ActividadController",e),e.$inject=["$http","$q","$scope","$siembras"]}(),function(){"use strict";function e(e,n,t,o,i,a,r){function l(){console.log("Cultivos Controller"),d.detail?s():u()}function s(){return d.item?void(d.item=e.filter(a.cultivos,function(e){return e.id===parseInt(r.id)})):void console.log("have to get item")}function c(e){console.log(e),d.data=e}function u(){d.promise=a.getCultivos(d.query).then(c)}var d=this;d.detail=!!r.id,d.getData=u,d.toggleSearch=!1,d.timeout=!1,d.selected=[],d.item=[],d.table={title:"Listado de Cultivos",search:{placeholder:"Rubro, Semilla"}},d.query={order:"lote__id",limit:10,page:1,filter:""},l(),d.resetTable=function(){d.detail=!1,d.toggleSearch=!1,d.query.filter="",u()},d.logItem=function(){console.log(d.item)},n.$watch("vm.query.filter",function(e,n){e&&(d.timeout&&i.cancel(d.timeout),d.timeout=i(function(){u()},500))}),n.$watchCollection("vm.item",function(e,n){e&&console.log(e)})}angular.module("ElCinaroAdmin").controller("CultivosController",e),e.$inject=["_","$scope","$http","$q","$timeout","$siembras","$stateParams"]}(),function(){"use strict";function e(e,n){function t(){console.log("DashboardController")}t()}e.$inject=["$http","$q"],angular.module("ElCinaroAdmin").controller("DashboardController",e)}(),function(){"use strict";function e(e,n,t,o,i,a,r,l,s){function c(){console.log("HomeController"),d(),f(),m()}function u(){console.log($.observations),console.log($.selectedCultivos)}function d(){l.getActividades($.query).then(function(e){console.log(e),$.data=e}).catch(function(e){console.log(e)})}function m(){r.getInsumos({}).then(function(n){$.insumos=e.map(n.results,function(n){return{name:n.nombre,id:n.id,_lowername:e.lowerCase(n.nombre)}})}).catch(function(e){console.log(e)}).finally(function(){})}function f(){a.getRubros({page:1,limit:10,order:"-nombre",filter:""}).then(function(n){$.rubros=e.map(n.results,function(n){return{name:n.nombre,id:n.id,_lowername:e.lowerCase(n.nombre)}})}).catch(function(e){}).finally(function(){})}function p(n){a.getCultivos(n).then(function(n){$.cultivos=e.map(n.results,function(n){return{name:n.codigo,description:n.lote.semilla_utilizada.descripcion,id:n.id,_lowername:e.lowerCase(n.nombre),selected:!1,fertilizacion:[],plaguicida:[],riego:[],observaciones:{text:"Observaciones"}}})}).catch(function(e){}).finally(function(){})}function g(n,t){$.cultivos[n].selected=!t.selected;var n=e.findIndex($.selectedCultivos,function(e){return e.id===t.id});!t.selected&&$.selectedCultivos[n]?$.selectedCultivos=$.selectedCultivos.splice(n,1):$.selectedCultivos.push(t)}function v(n,t){e.includes([3,4,6],t.type)&&(angular.copy(t,s.item),o.show({controller:"ActionController",controllerAs:"vm",templateUrl:"assets/views/seguimiento/"+t.template,clickOutsideToClose:!0,fullscreen:!0}).then(function(n){console.log(n),e.isArray(t.cultivo[t.selector])?t.cultivo[t.selector].push(n):e.isObject(t.cultivo[t.selector])?t.cultivo[t.selector]=n:console.log("undefined"),console.log(t)},function(){console.log("cancelled")}))}function h(e,n){return console.log(n),n--,n===-1?$.observations.shift():$.observations.splice(n,1)}function b(n){return n?void e.map($.cultivos,function(e,n){g(n,e)}):(e.map($.cultivos,function(e,n){e.selected=!1}),void($.selectedCultivos=[]))}function C(e,n){var t=n?e.filter(y(n)):[];return t}function y(e){var n=angular.lowercase(e);return function(e){return 0===e._lowername.indexOf(n)}}function A(){var n={riego:"Se aplico riego rutinario",desmalezamiento:"se aplicado desmalezamiento en el area",fertilizacion:"Se aplico fertilizacion en el cultivo",plaguicida:"Se aplico plaguicida en el cultivo",limpieza:"Se aplico limpieza en el area"},t=e.map($.selectedActions,function(t){return e.map($.selectedCultivos,function(e,o){return{id:new Date,text:e.description,content:n[angular.lowercase(t.name)],type:t.id,template:t.template,selector:angular.lowercase(t.name),cultivo:e}})});$.observations=[].concat.apply([],t)}var $=this;$.actions=s.getActions(),$.title="HomeDashboardController",$.data=[],$.all=!1,$.addActivity=!0,$.querySearch=C,$.selectedItem=null,$.searchText=null,$.selectedRubros=[],$.selectedActions=[],$.selectedCultivos=[],$.rubros=[],$.cultivos=[],$.insumos=[],$.observations=[],$.toggle=b,$.selectCultivo=g,$.detailItem=v,$.removeItem=h,$.submit=u,$.query={page:1,limit:5,order:"-fecha_realizacion",filter:""},c(),n.$watch("vm.data",function(n,t){if(n){var o=e.groupBy($.data.results,function(e){return moment(moment(e.fecha_realizacion).startOf("day")).format()});$.formattedData=o}}),n.$watchCollection("vm.selectedRubros",function(n,t){if(n.length){var o=e.map(n,function(e){return e.name}).join(",");p({page:1,limit:10,order:"fecha_siembra",filter:o})}}),n.$watchCollection("vm.selectedActions",function(e,n){A()}),n.$watchCollection("vm.selectedCultivos",function(e,n){e.length&&e.length!==n.length&&A()}),n.$watchCollection("vm.observations",function(e,n){console.log(e)},!0)}angular.module("ElCinaroAdmin").controller("HomeDashboardController",e),e.$inject=["_","$scope","$rootScope","$mdDialog","jQuery","$siembras","$insumos","$seguimiento","$util"]}(),function(){"use strict";function e(e,n,t,o,i,a,r){function l(){console.log("Cultivos Controller"),d.detail?s():u()}function s(){return d.item?void(d.item=e.filter(a.cultivos,function(e){return e.id===parseInt(r.id)})):void console.log("have to get item")}function c(e){console.log(e),d.data=e}function u(){d.promise=a.getLotes(d.query).then(c)}var d=this;d.detail=!!r.id,d.getData=u,d.toggleSearch=!1,d.timeout=!1,d.selected=[],d.item=[],d.table={title:"Listado",search:{placeholder:"Rubro, Semilla"}},d.query={order:"lote__id",limit:10,page:1,filter:""},l(),d.resetTable=function(){d.detail=!1,d.toggleSearch=!1,d.query.filter="",u()},d.logItem=function(){console.log(d.item)},n.$watch("vm.query.filter",function(e,n){e&&(d.timeout&&i.cancel(d.timeout),d.timeout=i(function(){u()},500))}),n.$watchCollection("vm.item",function(e,n){e&&console.log(e)})}angular.module("ElCinaroAdmin").controller("LotesController",e),e.$inject=["_","$scope","$http","$q","$timeout","$siembras","$stateParams"]}(),function(){"use strict";function e(e,n,t,o,i,a,r){function l(){console.log("Profile Controller")}function s(e){var n=e?u.countries.filter(c(e)):u.countries;return n}function c(n){var t=e.capitalize(n);return function(e){return 0===e.name.indexOf(t)}}var u=this,d=null;u.countries=r.getCountries(),u.data={country:"CA",username:"",birth:new Date},u.placesReady=!1,l(),u.autocompleteCountry=function(e){return s(e)},u.autocompleteAddress=function(n){var o=t.defer();return d.getQueryPredictions({input:n},function(n){o.resolve(n?e.filter(e.filter(n,"place_id"),function(n){return!e.includes(n.types,"establishment")&&!e.includes(n.types,"country")}):[])}),o.promise},u.updateProfile=function(){u.loading=!0,u.data.country=angular.isObject(u.data.country)?u.data.country.id:u.data.country,a.update(n.user.id,u.data).then(function(e){u.data=e,u.error=!1,u.data.birth=moment(u.data.birth).toDate()},function(e){u.error=!0}).finally(function(){u.loading=!1})}}angular.module("ElCinaroAdmin").controller("ProfileController",e),e.$inject=["_","$rootScope","$q","uiGmapGoogleMapApi","uiGmapIsReady","UserService","$util"]}(),function(){"use strict";function e(e,n,t,o,i){function a(){console.log("Semillas Controller"),l()}function r(e){console.log(e),s.data=e}function l(){s.promise=i.getSemillas(s.query).then(r)}var s=this;s.getData=l,s.toggleSearch=!1,s.timeout=!1,s.selected=[],s.table={title:"Inventario de Semillas",search:{placeholder:"Rubro, proovedor, descripcion"}},s.query={order:"nivel_germinacion",limit:10,page:1,filter:""},a(),s.resetTable=function(){s.toggleSearch=!1,s.query.filter="",l()},e.$watch("vm.query.filter",function(e,n){e&&(s.timeout&&o.cancel(s.timeout),s.timeout=o(function(){l()},500))})}angular.module("ElCinaroAdmin").controller("SemillasController",e),e.$inject=["$scope","$http","$q","$timeout","$siembras"]}(),function(){"use strict";function e(e,n){function t(){console.log("Suelos Controller")}t()}angular.module("ElCinaroAdmin").controller("SuelosController",e),e.$inject=["$http","$q"]}(),function(){"use strict";function e(){function e(e){var n={1:"Desmalezamiento",2:"Riego",3:"Fertilizacion",4:"Plaguicida",5:"Limpieza"};return n[e]}return e}angular.module("ElCinaroAdmin").filter("formatter",e)}(),function(){"use strict";function e(e,n){function t(){console.log("HomeController")}function o(e){n("html, body").animate({scrollTop:n(e).offset().top},1e3)}var i=this;i.title="Home Controller",i.scrollTo=o,i.actividades=[],t()}angular.module("ElCinaroAdmin").controller("HomeController",e),e.$inject=["$rootScope","jQuery"]}(),function(){"use strict";function e(e,n){var t=this;t.loading=!1,t.auth=function(){console.log("LOGIN",t.user),t.loading=!0,n.login(t.user).then(function(n){console.log(n),e.go("dashboard.campaigns")}).catch(function(e){console.log(e)}).finally(function(){t.loading=!1})}}angular.module("ElCinaroAdmin").controller("LoginController",e),e.$inject=["$state","Auth"]}(),function(){"use strict";function e(e,n,t,o,i){function a(){console.log("signup controller")}function r(e){var n=e?s.countries.filter(l(e)):s.countries;return n}function l(e){var n=_.capitalize(e);return function(e){return 0===e.name.indexOf(n)}}var s=this;s.data={country:null},s.loading=!1,s.isConfirm=!0,s.availability=!0,s.countries=i.getCountries(),a(),s.autocompleteCountry=function(e){return r(e)},s.signupAttempt=function(){s.loading=!0;var e=s.data.country;s.data.country=e.id,o.register(s.data).then(function(e){o.setCredentials(e),n.hide()},function(e){console.log(e),s.error=!0}).finally(function(){s.loading=!1})},s.checkCredentailsAvailability=function(e){var n={};s.availability=!0,s.data[e]&&(s.loading=!0,n[e]=s.data[e],o.credentialAvaliability(n).then(function(e){s.availability=e.availability,s.loading=!1},function(e){s.error=!0,s.loading=!1}))},s.compare=function(){s.isConfirm=s.data.confirmPassword==s.data.password},s.close=function(){n.cancel()},t.$watch("vm.data",function(e,n){console.log(e)},!0)}angular.module("ElCinaroAdmin").controller("SignupController",e),e.$inject=["$rootScope","$mdDialog","$scope","Auth","$util"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.campaign.html",scope:{options:"=",form:"=",total:"=",control:"="},controller:n,controllerAs:"vm",bindToController:!0};return e}function n(e,n,t,o){function i(){console.log("campaign directive"),o.then(function(e){console.log(e),l=new e.places.AutocompleteService,r.placesReady=!0})}function a(){r.loading=!0,t.getCategories("all",{all:!0,official:!0,country:r.form.country}).then(function(e){r.categories=e}).finally(function(){r.loading=!1})}var r=this,l=null;r.interests=[],r.categories=[],r.categoriesReady=!1,i(),r.autocompleteCities=function(e){var t=n.defer();return l.getQueryPredictions({input:e},function(e){t.resolve(e?_.filter(_.filter(e,"place_id"),function(e){return _.includes(e.types,"locality")||_.includes(e.types,"administrative_area_level_3")}):[])}),t.promise},r.autocompleteStates=function(e){var t=n.defer();return l.getQueryPredictions({input:e},function(e){t.resolve(e?_.filter(_.filter(e,"place_id"),function(e){return _.includes(e.types,"administrative_area_level_1")||_.includes(e.types,"administrative_area_level_2")}):[])}),t.promise},r.autocompleteCountries=function(e){var t=n.defer();return l.getQueryPredictions({input:e},function(e){t.resolve(e?_.filter(_.filter(e,"place_id"),function(e){return _.includes(e.types,"country")}):[])}),t.promise},e.$watch("vm.control.selectedTab",function(e,n){r.categoriesReady||2!==e||a()},!0)}angular.module("ElCinaroAdmin").directive("adbOrdersCampaign",e),n.$inject=["$scope","$q","CategoryService","uiGmapGoogleMapApi"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.checkout.html",scope:{options:"=",form:"=",total:"=",success:"=",control:"="},controller:n,controllerAs:"vm",bindToController:!0};return e}function n(e,n,t,o,i,a,r){function l(){r.getClientToken().then(function(e){console.log(e),s(e.clientToken)}).catch(function(e){console.log(e)})}function s(e){n.setup(e,"custom",{paypal:{container:"paypal-container",singleUse:!0,amount:"0",currency:"USD",locale:"en_us",enableShippingAddress:!1},onPaymentMethodReceived:function(e){c(e.nonce)},onReady:function(e){u.checkout=e}})}function c(e){console.log(e),t.$apply(function(){u.form.nonce=e,u.authorization=!0})}var u=this;u.checkout={},u.loading=!1,u.authorization=!1,u.launch=function(){u.loading=!0,u.form.amount=parseFloat(u.total).toFixed(2),r.createCampaign(u.form).then(function(e){console.log(e),u.success=!0,o.fill=!0}).catch(function(e){console.log(e),u.success=!1}).finally(function(){u.loading=!1})},t.$watch("vm.form",function(e,n){e&&console.log(e)}),t.$watch("vm.control.selectedTab",function(e,n){console.log("current tab ",e),3==e&&l()},!0),t.$watch("vm.checkout",function(e,n){e&&console.log(e)})}angular.module("ElCinaroAdmin").directive("adbOrdersCheckout",e),n.$inject=["_","braintree","$scope","$rootScope","$http","$q","DataService"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.customer.html",scope:{form:"=",control:"="},controller:n,controllerAs:"vm",bindToController:!0};return e}function n(e,n,t,o,i){function a(){r.control.tabs[0].valid=!1,r.control.tabs[1].valid=!0,r.control.selectedTab+=1}var r=this;r.nextTab=a,r.auth=function(){r.loading=!0,i.login(r.form.auth).then(function(e){console.log(e),a()}).catch(function(e){console.log(e)}).finally(function(){r.loading=!1})},r.signup=function(){o.show({fullscreen:!0,controllerAs:"vm",controller:"SignupController",templateUrl:"assets/views/modal/signup.html"}).then(function(){a()})}}angular.module("ElCinaroAdmin").directive("adbOrdersCustomer",e),n.$inject=["$http","$q","$rootScope","$mdDialog","Auth"]}(),function(){"use strict";function e(e,n,t,o,i,a,r){function l(){a.getOptions().then(function(e){console.log(e),v.options.target=s(e),console.log(v.form)}).catch(function(e){console.log(e)})}function s(n){var t=function(n,o){return e.isObject(n)?e.merge({},n,o,t):n||o},o=e.flatten([{},n,t]);return e.merge.apply(e,o)}function c(e,n){o.show({fullscreen:!0,targetEvent:e,clickOutsideToClose:!0,templateUrl:"app/shared/layout/imageModal.html",locals:{image:n},controller:["$scope","image",function(e,n){e.image=n}]})}function u(){o.show({templateUrl:"app/components/ad/advertisementModal.html",clickOutsideToClose:!0,fullscreen:!0})}function d(){i.show(i.simple().textContent("Awesome, you can now go to next step!").position("bottom right").hideDelay(3e3))}function m(n){var t=!1;return t="both"===n?!!e.isEmpty(e.pickBy(v.form.banner,e.isNull)):!!(v.form.banner.description&&v.form.banner.url&&v.form.banner[n])}function f(){return!e.isEmpty(v.form.marker)}function p(){var e=v.form.media.display,n=v.form.options.display.display;switch(n){case"banner":return m(e);case"map":return f()}return!1}function g(){switch(v.control.selectedTab){case 1:v.form.media.hasOwnProperty("id")&&v.form.options.display.hasOwnProperty("id")&&p()?(v.control.tabs[2].valid=!0,d()):v.control.tabs[2].valid=!1;break;case 2:v.form.options.impressions.hasOwnProperty("id")?(v.control.tabs[3].valid=!0,d()):v.control.tabs[3].valid=!1;break;default:console.log(v.control.selectedTab)}}var v=this;v.openImage=c,v.add=u,v.total=0,v.success=!1,v.control={selectedTab:t.user?1:0,tabs:[{valid:!t.user,show:!0},{valid:!1,show:!0},{valid:!1,show:!0},{valid:!1,show:!0}]},v.options={target:{display:[],media:[],impressionsUnits:[],impressionsTime:[],distance:[],age:[],gender:[]}},v.form={media:{},banner:{},marker:{},options:{display:{},impressions:{},distance:{},age:{},gender:{},interests:{},activities:[]},customer:{},country:t.user?e.find(r.getCountries(),function(e){return e.name===t.user.country||e.id===t.user.country})||"CA":"CA",state:null,city:null,categories:[]},l(),v.selectedTab=function(){return t.user?v.control.selectedTab:0},n.$watch(function(){return t.user},function(){t.user&&(v.form.country=e.find(r.getCountries(),function(e){return e.name===t.user.country||e.id===t.user.country}).id)},!0),n.$watch("vm.form",function(n,t){console.log(n),g(),v.total=n.media.hasOwnProperty("fee")?n.media.fee:0,e.map(n.options,function(e){e.hasOwnProperty("fee")&&(v.total+=v.total*e.fee),e.hasOwnProperty("discount")&&(v.total-=v.total*e.discount)})},!0)}angular.module("ElCinaroAdmin").controller("OrdersController",e),e.$inject=["_","$scope","$rootScope","$mdDialog","$mdToast","DataService","$util"]}(),function(){"use strict";function e(){function e(e,n,t,o){}var t={restrict:"EA",templateUrl:"assets/views/orders/orders.resume.html",scope:{options:"=",form:"=",total:"="},link:e,controller:n,controllerAs:"vm",bindToController:!0};return t}function n(e,n,t){function o(){}var i=this;o(),i.formatImpressions=function(){if(i.form.impressionType&&i.form.options.impressions.hasOwnProperty("id")){var n={impressionsUnits:e.join([i.form.options.impressions.quantity,i.form.options.impressions.type]," "),impressionsTime:e.join([i.form.options.impressions.time,i.form.options.impressions.period]," ")};return n[i.form.impressionType]}},i.formatTarget=function(){var n={distance:{value:i.form.options.distance,render:e.join(["Distance:",i.form.options.distance.distance||"","Km"]," ")},age:{value:i.form.options.age,render:e.join(["Age between:",e.join(i.form.options.age.range,"-")]," ")},gender:{value:i.form.options.gender,render:e.join(["Gender:",i.form.options.gender.gender]," ")},interests:{value:i.form.options.interests,render:e.join(["Interests:",i.form.options.interests.quantity]," ")}},t=e.pickBy(n,function(e){return e.value.hasOwnProperty("id")});return e.isEmpty(t)?"":e.join(["Target: ",e.map(Object.keys(t),function(e){return n[e].render})],"")},i.formatResume=function(){return resume}}angular.module("ElCinaroAdmin").directive("adbOrdersResume",e),n.$inject=["_","$http","$q"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.display.html",scope:{options:"=",form:"=",total:"="},controller:n,controllerAs:"vm",bindToController:!0};return e}function n(e,n,t,o,i,a){function r(){console.log("activate"),u()}function l(e,n,t,o){console.log(n),i(function(){e.panTo(new google.maps.LatLng(n.latitude,n.longitude)),t&&e.panBy(0,-200)},100)}function s(e,n,t){var i=t[0],a=i.latLng.lat(),r=i.latLng.lng();d.marker={id:Date.now(),location:{latitude:a,longitude:r},show:!1},o.$apply()}function c(){console.log("bounds changed"),console.log(d.placesReady),d.map.instance||u()}function u(){t.all([e,n.promise(1)]).then(function(e){var n=e[0],t=e[1][0].map;d.window={pixelOffset:new n.Size(0,(-40)),closeClick:function(){d.marker.show=!1}},g=new n.places.AutocompleteService,p=new n.DirectionsService,f=new n.DirectionsRenderer,d.map.instance=t,f.setMap(d.map.instance),m=new n.places.PlacesService(d.map.instance),d.placesReady=!0,console.log("ready")})}var d=this,m=null,f=null,p=null,g=null;d.markerConfirmed=!1,d.placesReady=!1,d.control={uploading:!1},d.map={center:{latitude:45.50174502816667,longitude:-73.5703881829977},zoom:14,options:{scrollwheel:!0},mapMarker:!0,disableDefaultUI:!0,control:{},events:{click:s,idle:c}},d.info={name:"",address:"",icon:""},d.marker={id:0,location:{latitude:45.50174502816667,longitude:-73.5703881829977},show:!1},d.desktopDropzone=a.create("desktop",function(e,n){o.$apply(function(){console.log(n.secure_url),d.form.banner.website=n.secure_url,d.control.uploading=!1})},function(){o.$apply(function(){d.control.uploading=!0})}),d.mobileDropzone=a.create("mobile",function(e,n){o.$apply(function(){console.log(n.secure_url),d.form.banner.app=n.secure_url,d.control.uploading=!1})},function(){o.$apply(function(){d.control.uploading=!0})}),r(),d.clickMarker=function(){console.log("click"),d.marker.show=!d.marker.show,o.$apply()},d.autocompleteAddress=function(e){d.markerConfirmed=!1;var n=t.defer();return g.getQueryPredictions({input:e},function(e){n.resolve(e?_.filter(e,"place_id"):[])}),n.promise},d.getPlace=function(){return console.log(d.info.place),d.info.place?void m.getDetails({placeId:d.info.place.place_id},function(e,n){console.log(e,n),d.marker={id:Date.now(),address:e.formatted_address,name:d.info.name,location:{latitude:parseFloat(e.geometry.location.lat()),longitude:parseFloat(e.geometry.location.lng())},show:!0,country:_.filter(e.address_components,function(e){return _.includes(e.types,"country")})[0].long_name,address_components:e.address_components},l(d.map.instance,d.marker.location,null,!0),o.$apply()}):void(d.markerConfirmed=!1)},d.confirmMarker=function(){d.info.name&&(d.form.marker={id:d.marker.id,address:d.marker.address,name:d.info.name,location:d.marker.location,show:!0,country:d.marker.country,address_components:d.marker.address_components},d.markerConfirmed=!0,console.log(d.form.marker))}}angular.module("ElCinaroAdmin").directive("adbDisplayChooser",e),n.$inject=["uiGmapGoogleMapApi","uiGmapIsReady","$q","$scope","$timeout","DropzoneService"]}(),function(){"use strict";function e(e,n,t){function o(o,a){var r=n.defer();return e.get(t+"/campaign/categories/",{params:{country:a.country}}).success(function(e){r.resolve(e),console.log(e.length),angular.copy(e,i.categories)}).error(function(e){r.reject(e)}),r.promise}var i={categories:[],getCategories:o};return i}angular.module("ElCinaroAdmin").service("CategoryService",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,n,t,o,i,a,r){function l(){return r.getObject("user",null)}function s(n){var i=o.defer();return t.post(e+"/auth/validate/"+n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function c(n){var i=o.defer();return t.post(e+"/auth/login",n).success(function(e,n,t,o){i.resolve(e),e.hasOwnProperty("token")&&(a.user=angular.copy(e.user),a.$emit("login",e.user),r.set("access_token",e.token),r.setObject("user",e.user))}).error(function(e){i.reject(e)}),i.promise}function u(n){var i=o.defer();return t.post(e+"/auth/register",n).success(function(e,n,t,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function d(n,i){var a=o.defer();return t.post(e+"/auth/resetpassword/"+n,i).success(function(e,n,t,o){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function m(n){var i=o.defer();return t.post(e+"/auth/resetPasswordRequest",n).success(function(e,n,t,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function f(){r.remove("user"),r.remove("access_token"),r.remove("original_user"),a.isAuthenticated=!1,a.user=null,a.view="auth",a.currentState="login",n.location.reload()}function p(e,n){e.hasOwnProperty("token")?(!n&&r.get("access_token")||r.set("access_token",e.token),a.user=e.user,r.setObject("user",e.user)):console.log("Bad Date",e)}function g(){return r.get("access_token")}function v(n){var i=o.defer();return t.get(e+"/user/availability/",{params:n}).success(function(e,n,t,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var h={getUser:l,validate:s,isAuthenticated:g,login:c,logout:f,register:u,forgot:m,reset:d,setCredentials:p,credentialAvaliability:v};return h}function n(e,n,t){function o(e){var t;return n.get("access_token")&&(t=n.get("access_token")),t&&(e.headers.Authorization="Bearer "+t),e}function i(o){return 401!==o.status&&403!==o.status||(n.remove("access_token"),t.get("$state").go("login")),e.reject(o)}var a={request:o,responseError:i};return a}n.$inject=["$q","$localstorage","$injector"],angular.module("ElCinaroAdmin").factory("Auth",e).factory("AuthInterceptor",n).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor"),e.defaults.withCredentials=!1}]),e.$inject=["baseApi","$window","$http","$q","$state","$rootScope","$localstorage"]}(),function(){"use strict";function e(e,n,t){function o(){var o=n.defer();return e({method:"GET",url:t+"/campaign/options/"}).success(function(e,n,t,i){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}function i(){var o=n.defer();return e({method:"GET",url:t+"/commerce/clientToken/"}).success(function(e,n,t,i){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}function a(o){var i=n.defer();return e.post(t+"/campaign/create/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=n.defer();return e.get(t+"/campaign/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getOptions:o,getClientToken:i,createCampaign:a,getCampaigns:r};return l}angular.module("ElCinaroAdmin").service("DataService",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(){function e(e,t,o,i){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",uploadMultiple:!1,maxFiles:1,acceptedFiles:"image/*",dictDefaultMessage:"Drop file or click here to upload",addRemoveLinks:!0,init:function(){this.on("thumbnail",function(t){t.width!==n[e].width||t.height!==n[e].height?t.rejectDimensions():t.acceptDimensions()})},accept:function(e,n){e.acceptDimensions=n,e.rejectDimensions=function(){n("Invalid dimension.")}}},eventHandlers:{sending:function(e,n,t){t.append("api_key",839988333153567),t.append("timestamp",Date.now()/1e3|0),t.append("upload_preset","sm2ev4nu"),o&&o()},success:t,removedfile:i}}}function t(e,n,t){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",maxFiles:e,acceptedFiles:"image/*",dictDefaultMessage:"Drop files or click here to upload"},eventHandlers:{sending:function(e,n,o){o.append("api_key",839988333153567),o.append("timestamp",Date.now()/1e3|0),o.append("upload_preset","sm2ev4nu"),t&&t()},success:n}}}var o={create:e,createMultiple:t};return o}angular.module("ElCinaroAdmin").service("DropzoneService",e);var n={mobile:{width:750,height:100},desktop:{width:880,height:1156}}}(),function(){"use strict";function e(e,n,t){function o(o){var a=t.defer();return n.get(e+"/insumos/",{params:{page:o.page||1,page_size:o.limit||50,format:"json",ordering:o.order||"id",search:o.filter||""}}).success(function(e){angular.copy(e.results,i.insumos),a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}var i={getInsumos:o,insumos:[]};return i}angular.module("ElCinaroAdmin").factory("$insumos",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e){function n(n,t){e.localStorage[n]=t}function t(n,t){return e.localStorage[n]||t}function o(n,t){e.localStorage[n]=JSON.stringify(t)}function i(n,t){return JSON.parse(e.localStorage[n]||(void 0!==t?t:"{}"))}function a(n){return e.localStorage.removeItem(n)}var r={set:n,get:t,setObject:o,getObject:i,remove:a};return r}angular.module("ElCinaroAdmin").factory("$localstorage",e),e.$inject=["$window"]}(),function(){"use strict";function e(e,n,t){function o(o){var a=t.defer();return n.get(e+"/actividades/",{params:{page:o.page,page_size:o.limit,format:"json",ordering:o.order,search:o.filter}}).success(function(e){angular.copy(e.results,i.semillas),a.resolve(e);
}).error(function(e){a.reject(e)}),a.promise}var i={getActividades:o,actividades:[]};return i}angular.module("ElCinaroAdmin").factory("$seguimiento",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e,n,t){function o(o){var i=n.defer();return e.get(t+"/semillas/",{params:{page:o.page,page_size:o.limit,format:"json",ordering:o.order,search:o.filter}}).success(function(e){angular.copy(e.results,l.semillas),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return e.get(t+"/cultivos/",{params:{page:o.page,page_size:o.limit,format:"json",ordering:o.order,search:o.filter}}).success(function(e){angular.copy(e.results,l.cultivos),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=n.defer();return e.get(t+"/lotes/",{params:{page:o.page,page_size:o.limit,format:"json",ordering:o.order,search:o.filter}}).success(function(e){angular.copy(e.results,l.lotes),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=n.defer();return e.get(t+"/rubros/",{params:{page:o.page,page_size:o.limit,format:"json",ordering:o.order,search:o.filter}}).success(function(e){angular.copy(e.results,l.lotes),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getSemillas:o,getCultivos:i,getRubros:r,getLotes:a,cultivos:[],semillas:[],lotes:[]};return l}angular.module("ElCinaroAdmin").factory("$siembras",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,t,o,i,a){function r(){var n=t.defer();return e({method:"GET",url:a+"/campaign/options/"}).success(function(e,t,o,i){n.resolve(e)}).error(function(e){n.reject(e)}),n.promise}function l(n,r){var l=t.defer(),s=a+"/user/"+n;return e.put(s,r).success(function(e,n,t,a){l.resolve(e),angular.copy(e,i.user),o.setObject("user",e)}).error(function(e){l.reject(e)}),l.promise}var s={getOptions:r,getClientToken:n,update:l};return s}function n(){return{}}angular.module("ElCinaroAdmin").service("UserService",e),e.$inject=["$http","$q","$localstorage","$rootScope","baseApi"]}(),function(){"use strict";function e(){function e(){return[{id:1,nombre:"L."},{id:2,nombre:"mL."},{id:3,nombre:"g."},{id:4,nombre:"Kg."}]}function n(){return[{name:"Desmalezamiento",_lowername:"desmalezamiento",id:1},{template:"riego.tmpl.html",name:"Riego",_lowername:"riego",id:2},{name:"Fertilizacion",_lowername:"fertilizacion",id:3,template:"fertilizacion.tmpl.html"},{name:"Plaguicida",_lowername:"plagicida",id:4,template:"plaguicida.tmpl.html"},{name:"Limpieza",_lowername:"limpieza",id:5},{name:"Observaciones",_lowername:"observaciones",id:6,template:"observaciones.tmpl.html"}]}function t(){return[{name:"Afghanistan",id:"AF"},{name:"Åland Islands",id:"AX"},{name:"Albania",id:"AL"},{name:"Algeria",id:"DZ"},{name:"American Samoa",id:"AS"},{name:"AndorrA",id:"AD"},{name:"Angola",id:"AO"},{name:"Anguilla",id:"AI"},{name:"Antarctica",id:"AQ"},{name:"Antigua and Barbuda",id:"AG"},{name:"Argentina",id:"AR"},{name:"Armenia",id:"AM"},{name:"Aruba",id:"AW"},{name:"Australia",id:"AU"},{name:"Austria",id:"AT"},{name:"Azerbaijan",id:"AZ"},{name:"Bahamas",id:"BS"},{name:"Bahrain",id:"BH"},{name:"Bangladesh",id:"BD"},{name:"Barbados",id:"BB"},{name:"Belarus",id:"BY"},{name:"Belgium",id:"BE"},{name:"Belize",id:"BZ"},{name:"Benin",id:"BJ"},{name:"Bermuda",id:"BM"},{name:"Bhutan",id:"BT"},{name:"Bolivia",id:"BO"},{name:"Bosnia and Herzegovina",id:"BA"},{name:"Botswana",id:"BW"},{name:"Bouvet Island",id:"BV"},{name:"Brazil",id:"BR"},{name:"British Indian Ocean Territory",id:"IO"},{name:"Brunei Darussalam",id:"BN"},{name:"Bulgaria",id:"BG"},{name:"Burkina Faso",id:"BF"},{name:"Burundi",id:"BI"},{name:"Cambodia",id:"KH"},{name:"Cameroon",id:"CM"},{name:"Canada",id:"CA"},{name:"Cape Verde",id:"CV"},{name:"Cayman Islands",id:"KY"},{name:"Central African Republic",id:"CF"},{name:"Chad",id:"TD"},{name:"Chile",id:"CL"},{name:"China",id:"CN"},{name:"Christmas Island",id:"CX"},{name:"Cocos (Keeling) Islands",id:"CC"},{name:"Colombia",id:"CO"},{name:"Comoros",id:"KM"},{name:"Congo",id:"CG"},{name:"Congo, The Democratic Republic of the",id:"CD"},{name:"Cook Islands",id:"CK"},{name:"Costa Rica",id:"CR"},{name:"Cote D'Ivoire",id:"CI"},{name:"Croatia",id:"HR"},{name:"Cuba",id:"CU"},{name:"Cyprus",id:"CY"},{name:"Czech Republic",id:"CZ"},{name:"Denmark",id:"DK"},{name:"Djibouti",id:"DJ"},{name:"Dominica",id:"DM"},{name:"Dominican Republic",id:"DO"},{name:"Ecuador",id:"EC"},{name:"Egypt",id:"EG"},{name:"El Salvador",id:"SV"},{name:"Equatorial Guinea",id:"GQ"},{name:"Eritrea",id:"ER"},{name:"Estonia",id:"EE"},{name:"Ethiopia",id:"ET"},{name:"Falkland Islands (Malvinas)",id:"FK"},{name:"Faroe Islands",id:"FO"},{name:"Fiji",id:"FJ"},{name:"Finland",id:"FI"},{name:"France",id:"FR"},{name:"French Guiana",id:"GF"},{name:"French Polynesia",id:"PF"},{name:"French Southern Territories",id:"TF"},{name:"Gabon",id:"GA"},{name:"Gambia",id:"GM"},{name:"Georgia",id:"GE"},{name:"Germany",id:"DE"},{name:"Ghana",id:"GH"},{name:"Gibraltar",id:"GI"},{name:"Greece",id:"GR"},{name:"Greenland",id:"GL"},{name:"Grenada",id:"GD"},{name:"Guadeloupe",id:"GP"},{name:"Guam",id:"GU"},{name:"Guatemala",id:"GT"},{name:"Guernsey",id:"GG"},{name:"Guinea",id:"GN"},{name:"Guinea-Bissau",id:"GW"},{name:"Guyana",id:"GY"},{name:"Haiti",id:"HT"},{name:"Heard Island and Mcdonald Islands",id:"HM"},{name:"Holy See (Vatican City State)",id:"VA"},{name:"Honduras",id:"HN"},{name:"Hong Kong",id:"HK"},{name:"Hungary",id:"HU"},{name:"Iceland",id:"IS"},{name:"India",id:"IN"},{name:"Indonesia",id:"ID"},{name:"Iran, Islamic Republic Of",id:"IR"},{name:"Iraq",id:"IQ"},{name:"Ireland",id:"IE"},{name:"Isle of Man",id:"IM"},{name:"Israel",id:"IL"},{name:"Italy",id:"IT"},{name:"Jamaica",id:"JM"},{name:"Japan",id:"JP"},{name:"Jersey",id:"JE"},{name:"Jordan",id:"JO"},{name:"Kazakhstan",id:"KZ"},{name:"Kenya",id:"KE"},{name:"Kiribati",id:"KI"},{name:"Korea, Democratic People'S Republic of",id:"KP"},{name:"Korea, Republic of",id:"KR"},{name:"Kuwait",id:"KW"},{name:"Kyrgyzstan",id:"KG"},{name:"Lao People'S Democratic Republic",id:"LA"},{name:"Latvia",id:"LV"},{name:"Lebanon",id:"LB"},{name:"Lesotho",id:"LS"},{name:"Liberia",id:"LR"},{name:"Libyan Arab Jamahiriya",id:"LY"},{name:"Liechtenstein",id:"LI"},{name:"Lithuania",id:"LT"},{name:"Luxembourg",id:"LU"},{name:"Macao",id:"MO"},{name:"Macedonia, The Former Yugoslav Republic of",id:"MK"},{name:"Madagascar",id:"MG"},{name:"Malawi",id:"MW"},{name:"Malaysia",id:"MY"},{name:"Maldives",id:"MV"},{name:"Mali",id:"ML"},{name:"Malta",id:"MT"},{name:"Marshall Islands",id:"MH"},{name:"Martinique",id:"MQ"},{name:"Mauritania",id:"MR"},{name:"Mauritius",id:"MU"},{name:"Mayotte",id:"YT"},{name:"Mexico",id:"MX"},{name:"Micronesia, Federated States of",id:"FM"},{name:"Moldova, Republic of",id:"MD"},{name:"Monaco",id:"MC"},{name:"Mongolia",id:"MN"},{name:"Montserrat",id:"MS"},{name:"Morocco",id:"MA"},{name:"Mozambique",id:"MZ"},{name:"Myanmar",id:"MM"},{name:"Namibia",id:"NA"},{name:"Nauru",id:"NR"},{name:"Nepal",id:"NP"},{name:"Netherlands",id:"NL"},{name:"Netherlands Antilles",id:"AN"},{name:"New Caledonia",id:"NC"},{name:"New Zealand",id:"NZ"},{name:"Nicaragua",id:"NI"},{name:"Niger",id:"NE"},{name:"Nigeria",id:"NG"},{name:"Niue",id:"NU"},{name:"Norfolk Island",id:"NF"},{name:"Northern Mariana Islands",id:"MP"},{name:"Norway",id:"NO"},{name:"Oman",id:"OM"},{name:"Pakistan",id:"PK"},{name:"Palau",id:"PW"},{name:"Palestinian Territory, Occupied",id:"PS"},{name:"Panama",id:"PA"},{name:"Papua New Guinea",id:"PG"},{name:"Paraguay",id:"PY"},{name:"Peru",id:"PE"},{name:"Philippines",id:"PH"},{name:"Pitcairn",id:"PN"},{name:"Poland",id:"PL"},{name:"Portugal",id:"PT"},{name:"Puerto Rico",id:"PR"},{name:"Qatar",id:"QA"},{name:"Reunion",id:"RE"},{name:"Romania",id:"RO"},{name:"Russian Federation",id:"RU"},{name:"RWANDA",id:"RW"},{name:"Saint Helena",id:"SH"},{name:"Saint Kitts and Nevis",id:"KN"},{name:"Saint Lucia",id:"LC"},{name:"Saint Pierre and Miquelon",id:"PM"},{name:"Saint Vincent and the Grenadines",id:"VC"},{name:"Samoa",id:"WS"},{name:"San Marino",id:"SM"},{name:"Sao Tome and Principe",id:"ST"},{name:"Saudi Arabia",id:"SA"},{name:"Senegal",id:"SN"},{name:"Serbia and Montenegro",id:"CS"},{name:"Seychelles",id:"SC"},{name:"Sierra Leone",id:"SL"},{name:"Singapore",id:"SG"},{name:"Slovakia",id:"SK"},{name:"Slovenia",id:"SI"},{name:"Solomon Islands",id:"SB"},{name:"Somalia",id:"SO"},{name:"South Africa",id:"ZA"},{name:"South Georgia and the South Sandwich Islands",id:"GS"},{name:"Spain",id:"ES"},{name:"Sri Lanka",id:"LK"},{name:"Sudan",id:"SD"},{name:"Suriname",id:"SR"},{name:"Svalbard and Jan Mayen",id:"SJ"},{name:"Swaziland",id:"SZ"},{name:"Sweden",id:"SE"},{name:"Switzerland",id:"CH"},{name:"Syrian Arab Republic",id:"SY"},{name:"Taiwan, Province of China",id:"TW"},{name:"Tajikistan",id:"TJ"},{name:"Tanzania, United Republic of",id:"TZ"},{name:"Thailand",id:"TH"},{name:"Timor-Leste",id:"TL"},{name:"Togo",id:"TG"},{name:"Tokelau",id:"TK"},{name:"Tonga",id:"TO"},{name:"Trinidad and Tobago",id:"TT"},{name:"Tunisia",id:"TN"},{name:"Turkey",id:"TR"},{name:"Turkmenistan",id:"TM"},{name:"Turks and Caicos Islands",id:"TC"},{name:"Tuvalu",id:"TV"},{name:"Uganda",id:"UG"},{name:"Ukraine",id:"UA"},{name:"United Arab Emirates",id:"AE"},{name:"United Kingdom",id:"GB"},{name:"United States",id:"US"},{name:"United States Minor Outlying Islands",id:"UM"},{name:"Uruguay",id:"UY"},{name:"Uzbekistan",id:"UZ"},{name:"Vanuatu",id:"VU"},{name:"Venezuela",id:"VE"},{name:"Viet Nam",id:"VN"},{name:"Virgin Islands, British",id:"VG"},{name:"Virgin Islands, U.S.",id:"VI"},{name:"Wallis and Futuna",id:"WF"},{name:"Western Sahara",id:"EH"},{name:"Yemen",id:"YE"},{name:"Zambia",id:"ZM"},{name:"Zimbabwe",id:"ZW"}]}var o={getCountries:t,getActions:n,getMedidas:e,item:{}};return o}angular.module("ElCinaroAdmin").factory("$util",e)}(),function(){"use strict";function e(e){function n(n,t,o){var i,a;i=n.dropzone,a=new e(t[0],i.options),n.reset&&a.on("complete",function(e){a.removeFile(e)}),angular.forEach(i.eventHandlers,function(e,n){a.on(n,e)})}var t={link:n,restrict:"EA",scope:{dropzone:"=dropzone",reset:"@reset"}};return t}angular.module("ElCinaroAdmin").directive("dropzone",e),e.$inject=["Dropzone"]}(),function(){"use strict";function e(){var e={restrict:"EA",controllerAs:"vm",controller:n,bindToController:!0,templateUrl:"assets/views/chips/adbChips.html",scope:{map:"=?",max:"@?",list:"=",label:"@?",click:"=?",create:"=?",filter:"=?",id:"@?adbId",disabled:"=",editable:"=",hideList:"=?",listClass:"@?",showCount:"=?",placeholder:"@?",model:"=?ngModel"}};return e}function n(e,n,t,o,i,a){function r(){u.map||(u.map={name:"name",image:"image",type:"chip"}),u.placeholder||(u.placeholder="Type here to filter"),void 0===u.listClass&&(u.listClass="fixed-rows"),void 0===u.showCount&&(u.showCount=!0),u.create&&n(document).keydown(c),void 0===u.filter&&(u.filter={}),e.isUndefined(u.model)&&(u.model=[])}function l(e){return function(n){return!u.exists(n)&&n[u.map.name].toLowerCase().indexOf(e.toLowerCase())!=-1}}function s(e,t){if(!e.length&&t.indexOf(",")!=-1){var o=u.create(t.split(",").filter(function(e){return e&&e.length}));console.log(o),angular.forEach(o,function(e){u.selectItem(e)}),n(u.input).val("")}}function c(e){e.stopPropagation(),n(u.input).is(":focus")&&13==e.which&&t.$apply(function(){var e=u.queryGiven&&u.list.length?u.list.filter(l(u.queryGiven)):[];s(e,u.queryGiven+",")})}var u=this;u.queryGiven="",u.input="#chips-"+(u.id||Date.now())+" md-autocomplete-wrap input",r(),u.querySearch=function(e){u.queryGiven=e;var n=e&&u.list.length?u.list.filter(l(e)):[];return u.create&&s(n,e),n},u.selectItem=function(n){console.log(u.model),u.editable&&u.model.push(n),e.isFunction(u.click)&&u.click(n)},u.exists=function(n){return e.findIndex(u.model,function(e){return e[u.map.name]==n[u.map.name]})>=0},u.stopPropagation=function(e){e.stopPropagation()},t.$watch("vm.list",function(e,n){console.log(e)})}angular.module("ElCinaroAdmin").directive("adbChips",e),n.$inject=["_","jQuery","$scope","$timeout","$mdConstant","$mdDialog"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/footer/footer.html",controller:n,controllerAs:"vm",bindToController:!0};return e}function n(){function e(){console.log("footer Activated")}e()}angular.module("ElCinaroAdmin").directive("footerDirective",e),n.$inject=[]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/header/header.html",controller:n,controllerAs:"vm",bindToController:!0,scope:{}};return e}function n(e,n,t){var o=this;o.logout=function(){console.log("LOGOUT"),e.logout()},t.$on("login",function(e,n){t.user||angular.copy(n,t.user),console.log("login",t.user)})}angular.module("ElCinaroAdmin").directive("headerDirective",e),n.$inject=["Auth","$scope","$rootScope"]}(),function(){"use strict";function e(e,n,t,o,i,a,r){function l(){console.log("action controller"),angular.copy(a.item,s.item)}var s=this;s.item={},s.data={},s.insumos=r.insumos,s.medidas=a.getMedidas(),l(),s.close=function(){s.item.touched=!0,i.hide(s.data)},s.response=function(){s.item.touched=!0,i.hide(s.data)},s.title=function(){return e.join([e.capitalize(s.item.selector),s.item.cultivo.description],": ")}}angular.module("ElCinaroAdmin").controller("ActionController",e),e.$inject=["_","$scope","$http","$q","$mdDialog","$util","$insumos"]}(),function(){"use strict";function e(e,n){function t(){}t()}angular.module("ElCinaroAdmin").controller("ActividadController",e),e.$inject=["$http","$q"]}();
//# sourceMappingURL=data:application/json;base64,
