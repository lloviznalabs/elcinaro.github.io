!function(){"use strict";angular.module("ElCinaroAdmin",["ui.router","ngMaterial","uiGmapgoogle-maps","md.data.table","angularMoment","moment-picker","angular-loading-bar"])}(),function(){"use strict";angular.module("ElCinaroAdmin").constant("_",window._).constant("jQuery",window.jQuery).constant("Dropzone",window.Dropzone).constant("braintree",window.braintree).constant("moment",window.moment).constant("baseApi","https://elcinaro-backend.herokuapp.com")}(),function(){"use strict";function e(e){e.defaults.xsrfCookieName="csrftoken",e.defaults.xsrfHeaderName="X-CSRFToken",e.defaults.headers.post["Content-Type"]="application/json"}function t(e){e.configure({key:"AIzaSyAonFuCDb7HjXUz0uocKbEGUJz91IL9EVs",libraries:"places"})}function n(e){e.fontSet("farm","farm-icons").icon("compost","assets/images/icons/icon-compost.svg").icon("spade","assets/images/icons/icon-spade.svg")}function o(e){e.formatDate=function(e){return moment(e).format("YYYY-MM-DD")},e.parseDate=function(e){var t=moment(e,"DD-MM-YYYY",!0);return t.isValid()?t.toDate():new Date(NaN)}}function i(e,t){e.definePalette("primary",{50:"#3ea34c",100:"#379143",200:"#307e3b",300:"#296c32",400:"#22592a",500:"1B4721",600:"#143518",700:"#0d2210",800:"#061007",900:"#000000",A100:"#45b655",A200:"#56bf64",A400:"#68c675",A700:"#000000",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 A100 A200"}),e.definePalette("accent",{50:"#1c3216",100:"#25441d",200:"#2f5625",300:"#39682d",400:"#427935",500:"#4c8b3c",600:"#60af4c",700:"#6eb85c",800:"#7ec06d",900:"#8ec87f",A100:"#60af4c",A200:"569D44",A400:"#4c8b3c",A700:"#9ecf91",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.definePalette("warn",{50:"#fbcba3",100:"#fabd8b",200:"#f9af72",300:"#f8a15a",400:"#f79341",500:"F68529",600:"#f57711",700:"#e26b0a",800:"#ca5f09",900:"#b25407",A100:"#fcd9bc",A200:"#fde7d4",A400:"#fef5ed",A700:"#994806",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.theme("default").primaryPalette("primary").accentPalette("accent").warnPalette("warn")}function a(e){function t(e){if("object"!=typeof e)return e;var n=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;for(var o in e)if(e.hasOwnProperty(o)){var i,a=e[o];if("string"==typeof a&&(i=a.match(n))){var r=Date.parse(i[0]);isNaN(r)||(e[o]=new Date(r))}else"object"==typeof a&&t(a)}}e.defaults.transformResponse.push(function(e){return t(e),e})}i.$inject=["$mdThemingProvider","$locationProvider"],a.$inject=["$httpProvider"],angular.module("ElCinaroAdmin").config(i).config(e).config(n).config(t).config(o).config(a),e.$inject=["$httpProvider"],t.$inject=["uiGmapGoogleMapApiProvider"],n.$inject=["$mdIconProvider"],o.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,t,n){e.$state=t,console.log("is authenticated",n.isAuthenticated()),n.isAuthenticated()&&(e.user=n.getUser()),e.$on("$stateChangeStart",function(o,i){e.fill=["login"].indexOf(i.name)!==-1,e.fixed=["dashboard","dashboard.profile"].indexOf(i.name)!==-1,i.authenticate&&!n.isAuthenticated()&&(o.preventDefault(),t.transitionTo("login")),!i.authenticate&&n.isAuthenticated()&&(o.preventDefault(),t.transitionTo("dashboard"))})}angular.module("ElCinaroAdmin").run(e),e.$inject=["$rootScope","$state","Auth"]}(),function(){"use strict";function e(e,t,n){e.state("home",{url:"/",views:{main:{controller:"HomeController",controllerAs:"vm",templateUrl:"home.html"}},authenticate:!1}).state("dashboard",{url:"/dashboard",views:{main:{controller:"DashboardController",controllerAs:"vm",templateUrl:"dashboard.html"}},authenticate:!0}).state("dashboard.profile",{url:"/profile",views:{dashboard:{controller:"ProfileController",controllerAs:"vm",templateUrl:"profile.html"}},authenticate:!1}).state("dashboard.home",{url:"/home/",views:{dashboard:{controller:"HomeDashboardController",controllerAs:"vm",templateUrl:"home.html"}},authenticate:!0}).state("dashboard.actividades",{url:"/actividades/",views:{dashboard:{controller:"ActividadController",controllerAs:"vm",templateUrl:"actividad.tmpl.html"}},authenticate:!0}).state("dashboard.cultivos",{url:"/cultivos/:id",views:{dashboard:{controller:"CultivosController",controllerAs:"vm",templateUrl:"cultivos.html"}},authenticate:!0}).state("dashboard.semillas",{url:"/semillas/:id",views:{dashboard:{controller:"SemillasController",controllerAs:"vm",templateUrl:"semillas.html"}},authenticate:!0}).state("dashboard.lotes",{url:"/lotes/:id",views:{dashboard:{controller:"LotesController",controllerAs:"vm",templateUrl:"lotes.html"}},authenticate:!0}).state("dashboard.suelos",{url:"/suelos/:id",views:{dashboard:{controller:"SuelosController",controllerAs:"vm",templateUrl:"suelos.html"}},authenticate:!0}).state("dashboard.clientes",{url:"/clientes/:id",views:{dashboard:{controller:"ClientesController",controllerAs:"vm",templateUrl:"clientes.html"}},authenticate:!0}).state("dashboard.users",{url:"/users/:id",views:{dashboard:{controller:"AdminController",controllerAs:"vm",templateUrl:"admin.html"}},authenticate:!0}).state("dashboard.proovedores",{url:"/proovedores/:id",views:{dashboard:{controller:"ProovedoresController",controllerAs:"vm",templateUrl:"proovedores.html"}},authenticate:!0}).state("dashboard.insumos",{url:"/insumos/:id",views:{dashboard:{controller:"InsumosController",controllerAs:"vm",templateUrl:"insumos.html"}},authenticate:!0}).state("dashboard.plagas",{url:"/plagas/:id",views:{dashboard:{controller:"PlagasController",controllerAs:"vm",templateUrl:"plagas.html"}},authenticate:!0}).state("dashboard.cosechas",{url:"/cosechas/:id",views:{dashboard:{controller:"CosechasController",controllerAs:"vm",templateUrl:"cosechas.html"}},authenticate:!0}).state("dashboard.rubros",{url:"/rubros/:id",views:{dashboard:{controller:"RubrosController",controllerAs:"vm",templateUrl:"rubros.html"}},authenticate:!0}).state("login",{url:"/login",views:{main:{controller:"LoginController",controllerAs:"vm",templateUrl:"login.html"}},authenticate:!1}),t.otherwise("/login")}angular.module("ElCinaroAdmin").config(e),e.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"]}(),function(){"use strict";function e(e,t,n,o){function i(){console.log("Actividad Controller"),a()}function a(){o.getRubros(r.query).then(function(e){r.categories=e.results}).catch(function(e){console.log(e)}).finally(function(){r.listReady=!0,console.log(r.categories)})}var r=this;r.listReady=!1,r.list=[],r.categories=[],r.query={page:1,limit:100,order:"",filter:""},r.data={cultivos:{},rubros:[]},r.map={name:"nombre",image:""},i(),r.cancel=function(){$mdDialog.$hide()},n.$watch("vm.categories",function(e,t){console.log(e)})}angular.module("ElCinaroAdmin").controller("ActividadController",e),e.$inject=["$http","$q","$scope","$siembras"]}(),function(){"use strict";function e(e,t,n,o,i,a,r,l){function c(){console.log("Admin  Controller"),u()}function s(e){console.log(e),d.data=e}function u(){d.item=[],d.promise=r.getUsers(d.query).then(s)}var d=this;d.getData=u,d.toggleSearch=!1,d.timeout=!1,d.item=[],d.table={title:"Usuarios",search:{placeholder:"nombre, apellido"},detail:{title:function(e){return"Usuario: "+e.join(" ")}}},d.query={order:"id",limit:10,page:1,filter:""};var m=[{name:"first_name",type:"text",icon:"info"},{name:"last_name",type:"text",icon:"info"},{name:"username",type:"text",icon:"info"},{name:"email",type:"email",icon:"email"},{name:"password",type:"password",icon:"info"},{name:"confirm_password",type:"password",icon:"info"}],f={username:"",first_name:"",last_name:"",password:"",is_staff:!0,email:""};c(),d.resetTable=function(){d.toggleSearch=!1,d.query.filter="",u()},d.spawnModal=function(e,t){a.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"admin",handler:t?"createUser":"updateUser",title:t?"Registrar Usuario":"Actualizar Datos Usuario",data:_.isEmpty(d.item)?f:_.mapValues(_.head(d.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:m,options:{}}}}).then(function(e){e&&(d.query.order=t?"-created":"-updated",u())},function(){console.log("cancelled")})},d.spawnDeleteModal=function(e,t){var n=a.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");a.show(n).then(function(){return r.deleteUsers(t).then(function(e){u()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},t.$watch("vm.query.filter",function(e,t){e&&(d.timeout&&i.cancel(d.timeout),d.timeout=i(function(){u()},500))}),t.$watchCollection("vm.item",function(e,t){_.isEmpty(e)})}angular.module("ElCinaroAdmin").controller("AdminController",e),e.$inject=["moment","$scope","$http","$q","$timeout","$mdDialog","$admin","$pedidos"]}(),function(){"use strict";function e(e,t,n){function o(){console.log("ClientesController"),i()}function i(){a.item=[],a.promise=t.getClientes(a.query).then(function(e){a.data=e})}var a=this;a.getData=i,a.toggleSearch=!1,a.timeout=!1,a.selected=[],a.item=[],a.table={title:"Listado de Clientes",search:{placeholder:"Nombre, Apellido, etc.."}},a.query={order:"",limit:10,page:1,filter:""};var r=[{name:"nombre",type:"text",icon:"perm_identity"},{name:"apellido",type:"text",icon:"perm_identity"},{name:"email",type:"text",icon:"email"},{name:"identification",type:"text",icon:"perm_identity"},{name:"telefono",type:"text",icon:"phone"},{name:"direccion",type:"text",icon:"place"}],l={nombre:"",apellido:"",email:"",identification:"",direccion:"",telefono:""};o(),a.logItem=function(){console.log(a.item)},a.spawnModal=function(t,o){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"clientes",handler:o?"createCliente":"updateCliente",title:o?"Registrar Cliente":"Actualizar Datos Cliente",data:e.isEmpty(a.item)?l:e.head(a.item),fields:r}}}).then(function(e){console.log(e),e&&(a.query.order=o?"-created":"-updated",i())},function(){console.log("cancelled")})},a.spawnDeleteModal=function(e,o){var a=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");n.show(a).then(function(){return t.deleteCliente(o).then(function(e){i()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})}}angular.module("ElCinaroAdmin").controller("ClientesController",e),e.$inject=["_","$pedidos","$mdDialog"]}(),function(){"use strict";function e(e,t,n,o,i){function a(){console.log("CosechasController"),l()}function r(e){_.mapValues(e.results,function(e){e.cultivo={id:e.cultivo_cosecha.id,nombre:e.cultivo_cosecha.cultivo_lote.nombre},e.medida=_.find(o.getUnidades(),function(t){return t.id===e.medida})}),console.log(e),c.data=e}function l(){c.item=[],c.promise=i.getCosechas(c.query).then(r)}var c=this;c.title="Cosechas",c.getData=l,c.toggleSearch=!1,c.timeout=!1,c.item=[],c.table={title:"Inventario de Cosechas",search:{placeholder:"Nombre"},detail:{title:function(e){return"Cosecha: "+e.join(" ")}}},c.query={order:"-updated",limit:10,page:1,filter:""};var s={fecha_cosecha:new Date,cantidad:"",cultivo:"",medida:""},u=[{placeholder:"Fecha Cosecha",name:"fecha_cosecha",type:"date",icon:"perm_identity"},{name:"cantidad",type:"number",icon:"perm_identity"},{name:"medida",type:"select",icon:"perm_identity",placeholder:"Medida",handler:"getMedidas"},{name:"cultivo",type:"select",icon:"perm_identity",handler:"getCultivos",placeholder:"Cultivo"}];a(),c.resetTable=function(){c.toggleSearch=!1,c.query.filter="",l()},c.spawnModal=function(e,t){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"cosechas",handler:t?"createCosecha":"updateCosecha",title:t?"Registrar Cosecha":"Actualizar Datos Cosecha",data:_.isEmpty(c.item)?s:_.mapValues(_.head(c.item),function(e){return(moment(e,"YYYY-MM-DD",!0).isValid()?new Date(e):e)||(e.hasOwnProperty("id")?e.id:e)}),fields:u,options:{}}}}).then(function(e){e&&(c.query.order=t?"-created":"-updated",l())},function(){console.log("cancelled")})},c.spawnDeleteModal=function(e,t){var o=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");n.show(o).then(function(){return i.deleteCosecha(c.item[0]).then(function(e){l()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},e.$watch("vm.query.filter",function(e,t){e&&(c.timeout&&$timeout.cancel(c.timeout),c.timeout=$timeout(function(){l()},500))}),e.$watchCollection("vm.item",function(e,t){_.isEmpty(e)||console.log(e)})}angular.module("ElCinaroAdmin").controller("CosechasController",e),e.$inject=["$scope","$http","$mdDialog","$util","$siembras"]}(),function(){"use strict";function e(e,t,n,o,i,a,r,l,c,s){function u(){console.log("Cultivos Controller"),p.detail?d():f(),p.detailTab=p.detail?p.tabOptions[1]:p.tabOptions[0]}function d(){return p.item?void(p.item=e.filter(c.cultivos,function(e){return e.id===parseInt(s.id)})):void console.log("have to get item")}function m(e){console.log(e),p.data=e}function f(){p.promise=c.getCultivos(p.query).then(m)}var p=this;p.detail=!!s.id,p.getData=f,p.toggleSearch=!1,p.timeout=!1,p.selected=[],p.item=[],p.currentTab=0,p.table={title:"Listado de Cultivos",search:{placeholder:"Rubro, Semilla"},detail:{title:function(e){return"Cultivo: "+e.join(" ")}}},p.query={order:"lote__id",limit:10,page:1,filter:""},p.data={},p.meta={searchForm:{},fields:[{name:"lote",type:"select",icon:"perm_identity",handler:"getLotesSiembra",placeholder:"Lote de Siembra"},{name:"area_siembra",type:"select",icon:"perm_identity",handler:"getAreasSiembra",placeholder:"Area de Siembra",mapper:function(e){return{id:e.id,nombre:e.nombre,type:e.hasOwnProperty("capacidad")?"invernadero":"parcela"}},checkings:[{type:"required",message:"Debes seleccionar un Area de Siembra"}]}]},p.tabOptions=[{title:"Agregar",submitButton:"Registrar",handler:"createCultivo"},{title:"Detalle",submitButton:"Actualizar",handler:"updateCultivo"}],u(),p.resetTable=function(){p.detail=!1,p.toggleSearch=!1,p.query.filter="",f()},p.logItem=function(){console.log(p.item)},p.formIsValid=function(){return!0},p.switchTab=function(){var t=e.head(p.item);p.detailTab=p.tabOptions[1],t.lote={id:t.cultivo_lote.id,nombre:t.cultivo_lote.nombre},angular.copy(t,p.form)},p.showGridBottomSheet=function(){r.show({templateUrl:"assets/views/bottom-action-bar/bottom-action-bar.html",controller:"ListBottomSheetController",clickOutsideToClose:!1,locals:{items:[{id:"add",name:"agregar"},{id:"edit",name:"editar"},{id:"view",name:"ver detalle"}]}}).then(function(e){l.show(l.simple().textContent("clicked!").position("top right").hideDelay(1500))})},p.handleForm=function(t){if(!e.isEmpty(p.form)){"parcela"===p.form.area_siembra.type?(p.form.parcela=p.form.area_siembra.id,delete p.form.invernadero):(p.form.invernadero=p.form.area_siembra.id,delete p.form.parcela),p.form.fecha_siembra&&(p.form.fecha_siembra=moment(p.form.fecha_siembra).format("YYYY-MM-DD"));var n=e.mapValues(p.form,function(t){return e.isObject(t)?t.id:t});c[t](n).then(function(e){console.log(e)}).catch(function(e){console.log(e)})}},p.spawnDeleteModal=function(t){function n(e){var t=a.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");a.show(t).then(function(){return c.deleteCultivo(p.item[0]).then(function(e){f()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})}function o(e){a.show(a.alert().clickOutsideToClose(!0).title("Este elemento no puede ser eliminado").textContent("Este Lote de siembra posee "+p.item[0].cosecha_cultivo.length+" cosechas asociadas.").ariaLabel("Alert Dialog").ok("Ok").targetEvent(e))}e.isEmpty(p.item)||(p.item[0].cosecha_cultivo.length?o(t):n(t))},t.$watch("vm.query.filter",function(e,t){e&&(p.timeout&&i.cancel(p.timeout),p.timeout=i(function(){f()},500))}),t.$watchCollection("vm.item",function(e,t){e&&console.log(e)}),t.$watch("vm.form.fecha_siembra",function(t,n){t&&(e.isObject(t)||(p.form.fecha_siembra=new Date(t)))}),t.$watch("vm.currentTab",function(e,t){if(!e&&!p.detail)return p.form={},void(p.item=[])})}angular.module("ElCinaroAdmin").controller("CultivosController",e),e.$inject=["_","$scope","$http","$q","$timeout","$mdDialog","$mdBottomSheet","$mdToast","$siembras","$stateParams"]}(),function(){"use strict";function e(e,t,n){function o(){console.log("DashboardController")}function i(){return e.orderBy([{link:"dashboard.home",icon:"grade",title:"Home"},{link:"dashboard.cultivos",icon:"grade",title:"Cultivos"},{link:"dashboard.semillas",title:"Semillas",icon:"grade"},{link:"dashboard.lotes",title:"Lotes de Siembra",icon:"grade"},{link:"dashboard.plagas",title:"Plagas",icon:"grade"},{link:"dashboard.clientes",title:"Clientes",icon:"person_pin"},{link:"dashboard.insumos",title:"Insumos",icon:"grade"},{link:"dashboard.proovedores",title:"Proovedores",icon:"grade"},{link:"dashboard.users",title:"Usuarios",icon:"grade"},{link:"dashboard.suelos",title:"Areas de Siembra",icon:"grade"},{link:"dashboard.rubros",title:"Rubros",icon:"grade"},{link:"dashboard.cosechas",title:"Cosechas",icon:"grade"}],["title"],["asc"])}var a=this;a.routes=i(),o()}e.$inject=["_","$http","$q"],angular.module("ElCinaroAdmin").controller("DashboardController",e)}(),function(){"use strict";function e(e,t,n,o,i,a,r,l,c){function s(){console.log("HomeController"),d(),f(),m()}function u(){var t=e.map(A.observations,function(e){var t=e;return t.cultivo=e.cultivo.id,t.hasOwnProperty("fecha_aplicacion")&&(t.fecha_aplicacion=moment(e.fecha_aplicacion,"DD-MM-YYYY HH:mm A",!0)),t});l.createActividades(e.groupBy(t,"selector")).then(function(e){console.log(e)}).catch(function(e){console.log(e)})}function d(){l.getActividades(A.query).then(function(e){console.log(e),A.data=e}).catch(function(e){console.log(e)})}function m(){r.getInsumos({}).then(function(t){A.insumos=e.map(t.results,function(t){return{name:t.nombre,id:t.id,_lowername:e.lowerCase(t.nombre)}})}).catch(function(e){console.log(e)}).finally(function(){})}function f(){a.getRubros({page:1,limit:10,order:"-nombre",filter:""}).then(function(t){A.rubros=e.map(t.results,function(t){return{name:t.nombre,id:t.id,_lowername:e.lowerCase(t.nombre)}})}).catch(function(e){}).finally(function(){})}function p(t){a.getCultivos(t).then(function(t){A.cultivos=e.map(t.results,function(t){return{name:t.codigo,description:t.nombre,id:t.id,_lowername:e.lowerCase(t.nombre),selected:!1,plaguicida:{},fertilizacion:{},riego:{},observaciones:{text:"Observaciones"}}})}).catch(function(e){}).finally(function(){})}function g(t,n){A.cultivos[t].selected=!n.selected;var t=e.findIndex(A.selectedCultivos,function(e){return e.id===n.id});!n.selected&&A.selectedCultivos[t]?A.selectedCultivos=A.selectedCultivos.splice(t,1):A.selectedCultivos.push(n)}function h(t,n){e.includes([3,4,6],n.type)&&(angular.copy(n,c.item),o.show({controller:"ActionController",controllerAs:"vm",templateUrl:"assets/views/seguimiento/"+n.template,clickOutsideToClose:!0,fullscreen:!0}).then(function(t){console.log(t),e.merge(n,t),console.log(n)},function(){console.log("cancelled")}))}function v(e,t){return console.log(t),t--,t===-1?A.observations.shift():A.observations.splice(t,1)}function b(t){return t?void e.map(A.cultivos,function(e,t){g(t,e)}):(e.map(A.cultivos,function(e,t){e.selected=!1}),void(A.selectedCultivos=[]))}function C(e,t){var n=t?e.filter(y(t)):[];return n}function y(e){var t=angular.lowercase(e);return function(e){return 0===e._lowername.indexOf(t)}}function $(){var t={riego:"Se aplico riego rutinario",desmalezamiento:"se aplicado desmalezamiento en el area",fertilizacion:"Se aplico fertilizacion en el cultivo",plaguicida:"Se aplico plaguicida en el cultivo",limpieza:"Se aplico limpieza en el area"},n=e.map(A.selectedActions,function(n){return e.map(A.selectedCultivos,function(e,o){return{id:new Date,text:e.description,content:t[angular.lowercase(n.name)],type:n.id,template:n.template,selector:angular.lowercase(n.name),cultivo:e,action:n.name}})});A.observations=[].concat.apply([],n)}var A=this;A.actions=c.getActions(),A.title="HomeDashboardController",A.data=[],A.all=!1,A.addActivity=!0,A.querySearch=C,A.selectedItem=null,A.searchText=null,A.selectedRubros=[],A.selectedActions=[],A.selectedCultivos=[],A.rubros=[],A.cultivos=[],A.insumos=[],A.observations=[],A.toggle=b,A.selectCultivo=g,A.detailItem=h,A.removeItem=v,A.submit=u,A.query={page:1,limit:10,order:"-fecha_realizacion",filter:""},s(),t.$watch("vm.data",function(t,n){if(t){var o=e.groupBy(A.data.results,function(e){return moment(moment(e.fecha_realizacion).startOf("day")).format()});A.formattedData=o}}),t.$watchCollection("vm.selectedRubros",function(t,n){if(t.length){var o=e.map(t,function(e){return e.name}).join(",");p({page:1,limit:10,order:"fecha_siembra",filter:o})}}),t.$watchCollection("vm.selectedActions",function(e,t){$()}),t.$watchCollection("vm.selectedCultivos",function(e,t){e.length&&e.length!==t.length&&$()}),t.$watchCollection("vm.observations",function(e,t){console.log("observations",e)},!0),t.$watchCollection("vm.info",function(e,t){console.log(e)},!0)}angular.module("ElCinaroAdmin").controller("HomeDashboardController",e),e.$inject=["_","$scope","$rootScope","$mdDialog","jQuery","$siembras","$insumos","$seguimiento","$util"]}(),function(){"use strict";function e(e,t,n,o){function i(){console.log("InsumosController"),r()}function a(e){console.log(e),l.data=e}function r(){l.item=[],l.promise=o.getInsumos(l.query).then(a)}var l=this;l.title="Insumos",l.getData=r,l.toggleSearch=!1,l.timeout=!1,l.item=[],l.table={title:"Inventario de Insumos",search:{placeholder:"Nombre"},detail:{title:function(e){return"Insumo: "+e.join(" ")}}},l.query={order:"-updated",limit:10,page:1,filter:""};var c={nombre:"",codigo:"",cantidad:"",proovedor:"",medida:""},s=[{name:"nombre",type:"text",icon:"perm_identity"},{name:"codigo",type:"text",icon:"perm_identity"},{name:"cantidad",type:"number",icon:"perm_identity"},{name:"medida",type:"select",icon:"perm_identity",placeholder:"Medida",handler:"getMedidas"},{name:"proovedor",type:"select",icon:"perm_identity",handler:"getProovedores",placeholder:"Proovedor"}];i(),l.resetTable=function(){l.toggleSearch=!1,l.query.filter="",r()},l.spawnModal=function(e,t){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"insumos",handler:t?"createInsumos":"updateInsumos",title:t?"Registrar Insumo":"Actualizar Datos Insumo",data:_.isEmpty(l.item)?c:_.mapValues(_.head(l.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:s,options:{}}}}).then(function(e){e&&(l.query.order=t?"-created":"-updated",r())},function(){console.log("cancelled")})},l.spawnDeleteModal=function(e,t){var i=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");n.show(i).then(function(){return o.deleteInsumos(t).then(function(e){r()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},e.$watch("vm.query.filter",function(e,t){e&&(l.timeout&&$timeout.cancel(l.timeout),l.timeout=$timeout(function(){r()},500))}),e.$watchCollection("vm.item",function(e,t){_.isEmpty(e)})}angular.module("ElCinaroAdmin").controller("InsumosController",e),e.$inject=["$scope","$http","$mdDialog","$insumos"]}(),function(){"use strict";function e(e,t,n,o,i,a,r,l){function c(){console.log("Cultivos Controller"),p.detail?f():d(),p.detailTab=p.detail?p.tabOptions[1]:p.tabOptions[0]}function s(t,n){n.fecha_enviado=moment(n.fecha_enviado).format("YYYY-MM-DD"),n.fecha_recibido=moment(n.fecha_enviado).format("YYYY-MM-DD");var o=e.mapValues(n,function(t){return e.isObject(t)&&!moment(t,"YYYY-MM-DD").isValid()?t.id:t});a[t.handler](o).then(function(e){console.log(e)}).catch(function(e){console.log(e)})}function u(e){console.log(e),p.data=e}function d(){p.promise=a.getLotes(p.query).then(u)}function m(){return!0}function f(){return p.item?void(p.item=e.filter(a.cultivos,function(e){return e.id===parseInt(r.id)})):void console.log("have to get item")}var p=this;p.detail=!!r.id,p.getData=d,p.toggleSearch=!1,p.timeout=!1,p.selected=[],p.item=[],p.table={title:"Listado",search:{placeholder:"Rubro, Semilla"},detail:{title:function(e){return"Lote Siembra: "+e.join(" ")}}},p.query={order:"-fecha_enviado",limit:10,page:1,filter:""};var g=({fecha_enviado:new Date,fecha_recibido:new Date,cantidad_semillas_enviadas:0,cantidad_semillas_recibidas:0,semilla_utilizada:null,germinado:!0},[{placeholder:"Fecha Enviado",name:"fecha_enviado",type:"date"},{placeholder:"Fecha Recibido",name:"fecha_recibido",type:"date"},{name:"cantidad_semillas_enviadas",type:"number",icon:"perm_identity",placeholder:"Cantidad Semillas Enviadas"},{name:"cantidad_semillas_recibidas",type:"number",icon:"perm_identity",placeholder:"Cantidad Semillas Recibidas"},{name:"semilla_utilizada",type:"select",icon:"perm_identity",handler:"getSemillas",placeholder:"Semilla"},{name:"proovedor",type:"select",icon:"perm_identity",handler:"getProovedores",placeholder:"Proovedor"},{name:"germinado",type:"switch",placeholder:"Germinado"}]);p.meta={fields:g,title:"Lotes de Siembra",subtitle:"Datos de Lote Siembra",handlers:[{title:"Agregar",submitButton:"Registrar",handler:"createLoteSiembra"},{title:"Detalle",submitButton:"Actualizar",handler:"updateLoteSiembra"}],validate:m,handler:s},p.currentTab=0,p.tabOptions=[{title:"Agregar",submitButton:"Registrar",handler:"createLoteSiembra"},{title:"Detalle",submitButton:"Actualizar",handler:"updateLoteSiembra"}],p.form={fecha_enviado:new Date,fecha_recibido:new Date,germinado:!0,cantidad_semillas_recibidas:0,cantidad_semillas_enviadas:0},c(),p.resetTable=function(){p.detail=!1,p.toggleSearch=!1,p.query.filter="",d()},p.logItem=function(){console.log(p.item)},p.switchTab=function(){console.log("switching tab",p.item),p.currentTab=1;var t=e.head(p.item);p.detailTab=p.tabOptions[1],t.semilla_utilizada={id:t.lote_semilla.id,nombre:t.lote_semilla.nombre},angular.copy(t,p.form)},p.spawnModal=function(e,t){console.log(t)},p.spawnDeleteModal=function(t){function n(e){var t=l.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");l.show(t).then(function(){return a.deleteLoteSiembra(p.item[0]).then(function(e){d()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})}function o(e){l.show(l.alert().clickOutsideToClose(!0).title("Este elemento no puede ser eliminado").textContent("Este Lote de siembra posee "+p.item[0].cultivos_count+" cultivos asociados.").ariaLabel("Alert Dialog").ok("Ok").targetEvent(e))}e.isEmpty(p.item)||(p.item[0].cultivos_count?o(t):n(t))},t.$watch("vm.query.filter",function(e,t){e&&(p.timeout&&i.cancel(p.timeout),p.timeout=i(function(){d()},500))}),t.$watchCollection("vm.item",function(e,t){}),t.$watch("vm.currentTab",function(e,t){p.detailTab=p.form.hasOwnProperty("id")?p.tabOptions[1]:p.tabOptions[0],e||(p.form={fecha_enviado:new Date,fecha_recibido:new Date,germinado:!0,cantidad_semillas_recibidas:0,cantidad_semillas_enviadas:0})})}angular.module("ElCinaroAdmin").controller("LotesController",e),e.$inject=["_","$scope","$http","$q","$timeout","$siembras","$stateParams","$mdDialog"]}(),function(){"use strict";function e(e,t,n,o){function i(){console.log("PlagasController"),r()}function a(e){console.log(e),l.data=e}function r(){l.item=[],l.promise=o.getPlagas(l.query).then(a)}var l=this;l.title="Plagas",l.getData=r,l.toggleSearch=!1,l.timeout=!1,l.item=[],l.table={title:"Inventario de Plagas",search:{placeholder:"Nombre"},detail:{title:function(e){return"Plaga: "+e.join(" ")}}},l.query={order:"-updated",limit:10,page:1,filter:""};var c={nombre:"",codigo:"",cantidad:"",proovedor:"",medida:""},s=[{name:"nombre",type:"text",icon:"perm_identity"},{name:"descripcion",type:"text",icon:"perm_identity"}];i(),l.resetTable=function(){l.toggleSearch=!1,l.query.filter="",r()},l.spawnModal=function(e,t){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"plagas",handler:t?"createPlagas":"updatePlagas",title:t?"Registrar Plaga":"Actualizar Datos Plaga",data:_.isEmpty(l.item)?c:_.mapValues(_.head(l.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:s,options:{}}}}).then(function(e){e&&(l.query.order=t?"-created":"-updated",r())},function(){console.log("cancelled")})},l.spawnDeleteModal=function(e,t){var i=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");n.show(i).then(function(){return o.deletePlagas(t).then(function(e){r()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},e.$watch("vm.query.filter",function(e,t){e&&(l.timeout&&$timeout.cancel(l.timeout),l.timeout=$timeout(function(){r()},500))}),e.$watchCollection("vm.item",function(e,t){_.isEmpty(e)})}angular.module("ElCinaroAdmin").controller("PlagasController",e),e.$inject=["$scope","$http","$mdDialog","$plagas"]}(),function(){"use strict";function e(e,t,n,o,i){function a(){console.log("ProovedoresController"),l()}function r(e){console.log(e),c.data=e}function l(){c.item=[],c.promise=o.getProovedores(c.query).then(r)}var c=this;c.title="Proovedores",c.getData=l,c.toggleSearch=!1,c.timeout=!1,c.item=[],c.table={title:"Inventario de Proovedores",search:{placeholder:"Nombre"},detail:{title:function(e){return"Proovedor: "+e.join(" ")}}},c.query={order:"-updated",limit:10,page:1,filter:""};var s={nombre:"",descripcion:"",categoria:"",direccion:"",telefono:""},u=[{name:"nombre",type:"text",icon:"perm_identity"},{name:"descripcion",type:"text",icon:"perm_identity"},{name:"categoria",type:"select",icon:"perm_identity",handler:"getProovedorCategoria",placeholder:"Categoria"},{name:"telefono",type:"text",icon:"phone"},{name:"direccion",type:"text",icon:"place"}];a(),c.resetTable=function(){c.toggleSearch=!1,c.query.filter="",l()},c.spawnModal=function(e,t){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"proovedores",handler:t?"createProovedor":"updateProovedor",title:t?"Registrar Proovedor":"Actualizar Datos Proovedor",data:_.isEmpty(c.item)?s:_.mapValues(_.head(c.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:u,options:{}}}}).then(function(e){e&&(c.query.order=t?"-created":"-updated",l())},function(){console.log("cancelled")})},c.spawnDeleteModal=function(e,t){var o=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");
n.show(o).then(function(){return i.deleteProovedor(t).then(function(e){l()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},e.$watch("vm.query.filter",function(e,t){e&&(c.timeout&&$timeout.cancel(c.timeout),c.timeout=$timeout(function(){l()},500))}),e.$watchCollection("vm.item",function(e,t){_.isEmpty(e)})}angular.module("ElCinaroAdmin").controller("ProovedoresController",e),e.$inject=["$scope","$http","$mdDialog","$siembras","$proovedores"]}(),function(){"use strict";function e(e,t,n,o){function i(){console.log("RubrosController"),r()}function a(e){console.log(e),l.data=e}function r(){l.item=[],l.promise=o.getRubros(l.query).then(a)}var l=this;l.title="Rubros",l.getData=r,l.toggleSearch=!1,l.timeout=!1,l.item=[],l.table={title:"Rubros",search:{placeholder:"Nombre"},detail:{title:function(e){return"Rubros: "+e.join(" ")}}},l.query={order:"-updated",limit:10,page:1,filter:""};var c={nombre:""},s=[{name:"nombre",type:"text",icon:"perm_identity"}];i(),l.resetTable=function(){l.toggleSearch=!1,l.query.filter="",r()},l.spawnModal=function(e,t){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"rubros",handler:t?"createRubro":"updateRubro",title:t?"Registrar Rubro":"Actualizar Datos Rubro",data:_.isEmpty(l.item)?c:_.mapValues(_.head(l.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:s,options:{}}}}).then(function(e){e&&(l.query.order=t?"-created":"-updated",r())},function(){console.log("cancelled")})},l.spawnDeleteModal=function(e,t){function i(e,t){var i=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");n.show(i).then(function(){return o.deleteRubro(l.item[0]).then(function(e){r()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})}function a(e){n.show(n.alert().clickOutsideToClose(!0).title("Este elemento no puede ser eliminado").textContent("Esta area de siembra posee "+l.item[0].cultivos_count+" cultivos asociados.").ariaLabel("Alert Dialog").ok("Ok").targetEvent(e))}_.isEmpty(l.item)||(l.item[0].cultivos_count?a(e,t):i(e))}}angular.module("ElCinaroAdmin").controller("RubrosController",e),e.$inject=["$scope","$http","$mdDialog","$siembras"]}(),function(){"use strict";function e(e,t,n,o,i,a,r){function l(){console.log("Semillas Controller"),s()}function c(e){console.log(e),u.data=e}function s(){u.promise=r.getSemillas(u.query).then(c)}var u=this;u.getData=s,u.toggleSearch=!1,u.timeout=!1,u.item=[],u.table={title:"Inventario de Semillas",search:{placeholder:"Rubro, proovedor, descripcion"},detail:{title:function(e){return"Semilla: "+e.join(" ")}}},u.query={order:"nivel_germinacion",limit:10,page:1,filter:""};var d=[{name:"descripcion",type:"text",icon:"description"},{name:"fecha_compra",type:"date",icon:"today",placeholder:"Fecha Compra"},{name:"precio_compra",type:"number",icon:"attach_money"},{name:"cantidad",type:"number",icon:"info"},{name:"unidad",type:"select",icon:"info",handler:"getUnidades",placeholder:"Unidad"},{name:"familia",type:"select",icon:"text_fields",handler:"getRubros",placeholder:"Rubro",map:{id:"id",name:"nombre"}},{name:"proovedor",type:"select",icon:"perm_identity",handler:"getProovedores",placeholder:"Proovedor"},{name:"nivel_germinacion",type:"text",icon:"info"}],m={proovedor:"",nivel_germinacion:"",familia:"",unidad:"",cantidad:"",precio_compra:"",fecha_compra:new Date};l(),u.resetTable=function(){u.toggleSearch=!1,u.query.filter="",s()},u.spawnModal=function(e,t){a.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"semillas",handler:t?"createSemilla":"updateSemilla",title:t?"Registrar Semilla":"Actualizar Datos Semilla",data:_.isEmpty(u.item)?m:_.mapValues(_.head(u.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:d,options:{}}}}).then(function(e){e&&(u.query.order=t?"-created":"-updated",s())},function(){console.log("cancelled")})},u.spawnDeleteModal=function(e,t){var n=a.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");a.show(n).then(function(){return $pedidos.deleteCliente(t).then(function(e){s()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},t.$watch("vm.query.filter",function(e,t){e&&(u.timeout&&i.cancel(u.timeout),u.timeout=i(function(){s()},500))}),t.$watchCollection("vm.item",function(e,t){_.isEmpty(e)||(u.item[0].fecha_compra=new Date(u.item[0].fecha_compra))})}angular.module("ElCinaroAdmin").controller("SemillasController",e),e.$inject=["moment","$scope","$http","$q","$timeout","$mdDialog","$siembras"]}(),function(){"use strict";function e(e,t,n,o,i){function a(){console.log("Suelos Controller"),r()}function r(){l.item=null,n.all([i.getParcelas(l.query),i.getInvernaderos(l.query)]).then(function(e){l.data.suelos=e[0],l.data.invernaderos=e[1]})}var l=this;l.query={order:"-id",limit:10,page:1,filter:""},l.item=null,l.data={suelos:[],invernaderos:[]},l.toolbar={title:function(t){return e.join(t," ")}};var c=[{name:"codigo",type:"text",icon:"description"},{name:"ubicacion",type:"text",icon:"info"},{name:"ancho_medida",type:"number",icon:"info"},{name:"largo_medida",type:"number",icon:"info"}],s=[{name:"nombre",type:"text",icon:"description"},{name:"codigo",type:"text",icon:"description"},{name:"ubicacion",type:"text",icon:"info"},{name:"capacidad",type:"number",icon:"info"}],u={codigo:"",tipo:3,ubicacion:"El Cinaro",largo_medida:1,ancho_medida:2,capacidad:0},d={nombre:"",codigo:"",ubicacion:"El Cinaro",capacidad:0};a(),l.detail=function(e,t){l.item=e,l.item.handler=t},l.spawnModal=function(t,n,i){var a=c,m=u,f={handler:n?"createParcela":"updateParcela",title:n?"Registrar Parcela":"Actualizar Datos Parcela"};(l.item&&"invernaderos"===l.item.handler||"invernaderos"===i)&&(f={handler:n?"createInvernadero":"updateInvernadero",title:n?"Registrar Invernadero / Terraza":"Actualizar Datos Invernadero / Terraza"},a=s,m=d),o.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:e.merge({type:"suelos"},f,{data:e.isEmpty(l.item)?m:e.mapValues(l.item,function(e){return e.hasOwnProperty("id")?e.id:e}),fields:a,options:{}})}}).then(function(e){e&&(l.query.order=n?"-created":"-updated",r())},function(){console.log("cancelled")})},l.spawnDeleteModal=function(e){function t(e){var t=o.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar"),n="parcelas"===l.item.handler?"deleteParcela":"deleteInvernadero";o.show(t).then(function(){return i[n](l.item.id).then(function(e){r()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})}function n(e){o.show(o.alert().clickOutsideToClose(!0).title("Este elemento no puede ser eliminado").textContent("Esta area de siembra posee "+l.item.cultivos_count+" cultivos asociados.").ariaLabel("Alert Dialog").ok("Ok").targetEvent(e))}l.item&&(l.item.cultivos_count?n(e):t(e))}}angular.module("ElCinaroAdmin").controller("SuelosController",e),e.$inject=["_","$http","$q","$mdDialog","$suelos"]}(),function(){"use strict";function e(){function e(e){var t={1:"Desmalezamiento",2:"Riego",3:"Fertilizacion",4:"Plaguicida",5:"Limpieza",crecimientocultivo:"Crecimiento",insumocultivo:"Insumo"};return t[e]}return e}angular.module("ElCinaroAdmin").filter("formatter",e)}(),function(){"use strict";function e(e,t){function n(){console.log("HomeController")}function o(e){t("html, body").animate({scrollTop:t(e).offset().top},1e3)}var i=this;i.title="Home Controller",i.scrollTo=o,i.actividades=[],n()}angular.module("ElCinaroAdmin").controller("HomeController",e),e.$inject=["$rootScope","jQuery"]}(),function(){"use strict";function e(e,t){var n=this;n.loading=!1,n.auth=function(){console.log("LOGIN",n.user),n.loading=!0,t.login(n.user).then(function(t){console.log(t),e.go("dashboard")}).catch(function(e){console.log(e)}).finally(function(){n.loading=!1})}}angular.module("ElCinaroAdmin").controller("LoginController",e),e.$inject=["$state","Auth"]}(),function(){"use strict";function e(e,t,n,o,i){function a(){console.log("signup controller")}function r(e){var t=e?c.countries.filter(l(e)):c.countries;return t}function l(e){var t=_.capitalize(e);return function(e){return 0===e.name.indexOf(t)}}var c=this;c.data={country:null},c.loading=!1,c.isConfirm=!0,c.availability=!0,c.countries=i.getCountries(),a(),c.autocompleteCountry=function(e){return r(e)},c.signupAttempt=function(){c.loading=!0;var e=c.data.country;c.data.country=e.id,o.register(c.data).then(function(e){o.setCredentials(e),t.hide()},function(e){console.log(e),c.error=!0}).finally(function(){c.loading=!1})},c.checkCredentailsAvailability=function(e){var t={};c.availability=!0,c.data[e]&&(c.loading=!0,t[e]=c.data[e],o.credentialAvaliability(t).then(function(e){c.availability=e.availability,c.loading=!1},function(e){c.error=!0,c.loading=!1}))},c.compare=function(){c.isConfirm=c.data.confirmPassword==c.data.password},c.close=function(){t.cancel()},n.$watch("vm.data",function(e,t){console.log(e)},!0)}angular.module("ElCinaroAdmin").controller("SignupController",e),e.$inject=["$rootScope","$mdDialog","$scope","Auth","$util"]}(),function(){"use strict";function e(e,t,n){function o(o,a){var r=t.defer();return e.get(n+"/campaign/categories/",{params:{country:a.country}}).success(function(e){r.resolve(e),console.log(e.length),angular.copy(e,i.categories)}).error(function(e){r.reject(e)}),r.promise}var i={categories:[],getCategories:o};return i}angular.module("ElCinaroAdmin").service("CategoryService",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=n.defer();return t.get(e+"/users/",{params:{page:o.page||1,page_size:o.limit||100,format:"json",ordering:o.order||"-id",search:o.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return t.put(e+"/users/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=n.defer();return t.post(e+"/users/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=n.defer();return t.delete(e+"/users/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getUsers:o,createUser:a,updateUser:i,deleteUsers:r};return l}angular.module("ElCinaroAdmin").factory("$admin",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e,t,n,o,i,a,r){function l(){return r.getObject("user",null)||r.get("access_token",null)}function c(t){var i=o.defer();return n.post(e+"/auth/validate/"+t).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function s(t){var i=o.defer();return n.post(e+"/rest-auth/login/",t).success(function(e,t,n,o){i.resolve(e),e.hasOwnProperty("token")&&(a.user=angular.copy(e.user),a.$emit("login",e.user),r.set("access_token",e.token),r.setObject("user",e.user)),e.hasOwnProperty("key")&&r.set("access_token",e.key)}).error(function(e){i.reject(e)}),i.promise}function u(t){var i=o.defer();return n.post(e+"/auth/register",t).success(function(e,t,n,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function d(t,i){var a=o.defer();return n.post(e+"/auth/resetpassword/"+t,i).success(function(e,t,n,o){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function m(t){var i=o.defer();return n.post(e+"/auth/resetPasswordRequest",t).success(function(e,t,n,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function f(){r.remove("user"),r.remove("access_token"),r.remove("original_user"),a.isAuthenticated=!1,a.user=null,a.view="auth",a.currentState="login",t.location.reload()}function p(e,t){e.hasOwnProperty("token")?(!t&&r.get("access_token")||r.set("access_token",e.token),a.user=e.user,r.setObject("user",e.user)):console.log("Bad Date",e)}function g(){return r.get("access_token")}function h(t){var i=o.defer();return n.get(e+"/user/availability/",{params:t}).success(function(e,t,n,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var v={getUser:l,validate:c,isAuthenticated:g,login:s,logout:f,register:u,forgot:m,reset:d,setCredentials:p,credentialAvaliability:h};return v}function t(e,t,n){function o(e){var n;return t.get("access_token")&&(n=t.get("access_token")),n&&(e.headers.Authorization="Bearer "+n),e}function i(o){return 401!==o.status&&403!==o.status||(t.remove("access_token"),n.get("$state").go("login")),e.reject(o)}var a={request:o,responseError:i};return a}t.$inject=["$q","$localstorage","$injector"],angular.module("ElCinaroAdmin").factory("Auth",e).factory("AuthInterceptor",t).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor"),e.defaults.withCredentials=!1}]),e.$inject=["baseApi","$window","$http","$q","$state","$rootScope","$localstorage"]}(),function(){"use strict";function e(){function e(e,n,o,i){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",uploadMultiple:!1,maxFiles:1,acceptedFiles:"image/*",dictDefaultMessage:"Drop file or click here to upload",addRemoveLinks:!0,init:function(){this.on("thumbnail",function(n){n.width!==t[e].width||n.height!==t[e].height?n.rejectDimensions():n.acceptDimensions()})},accept:function(e,t){e.acceptDimensions=t,e.rejectDimensions=function(){t("Invalid dimension.")}}},eventHandlers:{sending:function(e,t,n){n.append("api_key",839988333153567),n.append("timestamp",Date.now()/1e3|0),n.append("upload_preset","sm2ev4nu"),o&&o()},success:n,removedfile:i}}}function n(e,t,n){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",maxFiles:e,acceptedFiles:"image/*",dictDefaultMessage:"Drop files or click here to upload"},eventHandlers:{sending:function(e,t,o){o.append("api_key",839988333153567),o.append("timestamp",Date.now()/1e3|0),o.append("upload_preset","sm2ev4nu"),n&&n()},success:t}}}var o={create:e,createMultiple:n};return o}angular.module("ElCinaroAdmin").service("DropzoneService",e);var t={mobile:{width:750,height:100},desktop:{width:880,height:1156}}}(),function(){"use strict";function e(e,t,n){function o(o){var i=n.defer();return t.get(e+"/insumos/",{params:{page:o.page||1,page_size:o.limit||50,format:"json",ordering:o.order||"id",search:o.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return t.put(e+"/insumos/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=n.defer(),a=_.mapValues(o,function(e){return _.isObject(e)?e.id:e});return t.post(e+"/insumos/",a).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=n.defer();return t.delete(e+"/insumos/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getInsumos:o,deleteInsumos:r,updateInsumos:i,createInsumos:a,insumos:[]};return l}angular.module("ElCinaroAdmin").factory("$insumos",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e){function t(t,n){e.localStorage[t]=n}function n(t,n){return e.localStorage[t]||n}function o(t,n){e.localStorage[t]=JSON.stringify(n)}function i(t,n){return JSON.parse(e.localStorage[t]||(void 0!==n?n:"{}"))}function a(t){return e.localStorage.removeItem(t)}var r={set:t,get:n,setObject:o,getObject:i,remove:a};return r}angular.module("ElCinaroAdmin").factory("$localstorage",e),e.$inject=["$window"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=n.defer();return t.get(e+"/clientes/",{params:{page:o.page||1,page_size:o.limit||10,format:"json",ordering:o.order||"",search:o.filter||""}}).success(function(e){angular.copy(e.results,l.clientes),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return t.put(e+"/clientes/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=n.defer();return t.post(e+"/clientes/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=n.defer();return t.delete(e+"/clientes/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getClientes:o,deleteCliente:r,updateCliente:i,createCliente:a,deleteCliente:r,clientes:[]};return l}angular.module("ElCinaroAdmin").factory("$pedidos",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=t.defer();return e.get(n+"/plagas/",{params:{page:o.page||1,page_size:o.limit||50,format:"json",ordering:o.order||"id",search:o.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=t.defer();return e.put(n+"/plagas/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=t.defer(),a=_.mapValues(o,function(e){return _.isObject(e)?e.id:e});return e.post(n+"/plagas/",a).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=t.defer();return e.delete(n+"/plagas/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getPlagas:o,createPlagas:a,updatePlagas:i,deletePlagas:r};return l}angular.module("ElCinaroAdmin").factory("$plagas",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=t.defer();return e.put(n+"/proovedores/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=t.defer();return e.post(n+"/proovedores/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=t.defer();return e.delete(n+"/proovedores/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var r={createProovedor:i,updateProovedor:o,deleteProovedor:a};return r}angular.module("ElCinaroAdmin").factory("$proovedores",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=n.defer();return t.get(e+"/actividades/",{params:{page:o.page,page_size:o.limit,format:"json",ordering:o.order,search:o.filter}}).success(function(e){angular.copy(e.results,a.semillas),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return t.post(e+"/actividades/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var a={getActividades:o,createActividades:i,actividades:[]};return a}angular.module("ElCinaroAdmin").factory("$seguimiento",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e,t,n,o,i){function a(n){var i=t.defer();return e.get(o+"/semillas/",{params:{page:n.page||1,page_size:n.limit||100,format:"json",ordering:n.order||"-id",search:n.filter||""}}).success(function(e){angular.copy(e.results,M.semillas),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(n){var a=t.defer();n.fecha_compra=i(n.fecha_compra).format("YYYY-MM-DD");var r=_.mapValues(n,function(e){return _.isObject(e)?e.id:e});return console.log(r),e.post(o+"/semillas/",r).success(function(e){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function l(n){var a=t.defer();return n.fecha_compra=i(n.fecha_compra).format("YYYY-MM-DD"),e.put(o+"/semillas/"+n.id+"/",n).success(function(e){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function c(n){var i=t.defer();return e.post(o+"/cultivos/",n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function s(n){var i=t.defer();return e.put(o+"/cultivos/"+n.id+"/",n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function u(n){var i=t.defer();return e.get(o+"/cultivos/",{params:{page:n.page,page_size:n.limit,format:"json",ordering:n.order,search:n.filter}}).success(function(e){angular.copy(e.results,M.cultivos),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function d(n){var i=t.defer();return e.delete(o+"/cultivos/"+n.id+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function m(n){var i=t.defer();return e.get(o+"/lotes/",{params:{page:n.page||1,page_size:n.limit||100,format:"json",ordering:n.order||"-id",search:n.filter||""}}).success(function(e){angular.copy(e.results,M.lotes),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function f(n){var i=t.defer();return e.post(o+"/lotes/",n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function p(n){var i=t.defer();return e.put(o+"/lotes/"+n.id+"/",n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function g(n){var i=t.defer();return e.get(o+"/rubros/",{params:{page:n.page||1,page_size:n.limit||100,format:"json",ordering:n.order||"-id",search:n.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function h(){var e=t.defer();return n(function(){e.resolve({results:[{id:1,nombre:"gramos"},{id:2,nombre:"unidades"}]})},1e3*Math.random(),!1),e.promise}function v(){var e=t.defer();return n(function(){e.resolve({results:[{id:1,nombre:"Centimetros(cm)"},{id:2,nombre:"Milimetros (mm)"},{id:3,nombre:"Mililitros(cm)"},{id:4,nombre:"Litro (l)"},{id:5,nombre:"Kilogramo(kg)"},{id:6,nombre:"Miligramos (mg)"}]})},1e3*Math.random(),!1),e.promise}function b(n){var i=t.defer();return e.get(o+"/categorias/",{params:{page:n.page,page_size:n.limit,format:"json",ordering:n.order,search:n.filter}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function C(n){var i=t.defer();return e.get(o+"/proovedores/",{params:{page:n.page,page_size:n.limit,format:"json",ordering:n.order,search:n.filter}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function y(n){var i=t.defer();return e.get(o+"/cosechas/",{params:{page:n.page,page_size:n.limit,format:"json",ordering:n.order,search:n.filter}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function $(n){var a=t.defer();n.fecha_cosecha=i(n.fecha_compra).format("YYYY-MM-DD");var r=_.mapValues(n,function(e){return _.isObject(e)&&!i(e,"YYYY-MM-DD",!0).isValid()?e.id:e});return e.post(o+"/cosechas/",r).success(function(e){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function A(n){var a=t.defer();n.fecha_cosecha=i(n.fecha_cosecha).format("YYYY-MM-DD");var r=_.mapValues(n,function(e){return _.isObject(e)&&!i(e,"YYYY-MM-DD").isValid()?e.id:e});return e.put(o+"/cosechas/"+n.id+"/",r).success(function(e){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function w(n){var i=t.defer();return e.delete(o+"/cosechas/"+n.id+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function D(n){var i=t.defer();return e.post(o+"/rubros/",n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function S(n){var i=t.defer();return e.put(o+"/rubros/"+n.id+"/",n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function j(n){var i=t.defer();return e.delete(o+"/rubros/"+n.id+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function E(n){var i=t.defer();return e.delete(o+"/lotes/"+n.id+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var M={getSemillas:a,getCultivos:u,createCultivo:c,updateCultivo:s,deleteCultivo:d,getRubros:g,getLotes:m,createLoteSiembra:f,updateLoteSiembra:p,deleteLoteSiembra:E,getProovedores:C,getProovedorCategoria:b,getUnidades:h,getMedidas:v,createSemilla:r,updateSemilla:l,createRubro:D,updateRubro:S,deleteRubro:j,getCosechas:y,createCosecha:$,updateCosecha:A,deleteCosecha:w,cultivos:[],semillas:[],lotes:[]};return M}angular.module("ElCinaroAdmin").factory("$siembras",e),e.$inject=["$http","$q","$timeout","baseApi","moment"]}(),function(){"use strict";function e(e,t,n,o){function i(e){var i=n.defer();return t.get(o+"/invernaderos/",{params:{page:e.page||1,page_size:e.limit||100,format:"json",ordering:e.order||"-id",search:e.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(e){var i=n.defer();return t.get(o+"/parcelas/",{params:{page:e.page||1,page_size:e.limit||100,format:"json",ordering:e.order||"-id",search:e.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(e){var i=n.defer();return t.get(o+"/tipo-parcelas/",{params:{page:e.page||1,page_size:e.limit||100,format:"json",ordering:e.order||"-id",search:e.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function l(i){var a=n.defer(),r=e.mapValues(i,function(t){return e.isObject(t)?t.id:t});return t.post(o+"/invernaderos/",r).success(function(e){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function c(i){var a=n.defer();e.mapValues(i,function(t){return e.isObject(t)?t.id:t});return t.put(o+"/parcelas/"+i.id+"/",i).success(function(e){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function s(i){var a=n.defer();e.mapValues(i,function(t){return e.isObject(t)?t.id:t});return t.put(o+"/invernaderos/"+i.id+"/",i).success(function(e){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function u(i){var a=n.defer(),r=e.mapValues(i,function(t){return e.isObject(t)?t.id:t});return t.post(o+"/parcelas/",r).success(function(e){a.resolve(e)}).error(function(e){a.reject(e)}),a.promise}function d(e){var i=n.defer();return t.delete(o+"/parcelas/"+e+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function m(e){var i=n.defer();return t.delete(o+"/invernaderos/"+e+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function f(t){var o=n.defer();return n.all([i(t),a(t)]).then(function(t){o.resolve({results:e.merge(t[0].results,t[1].results)})}).catch(function(e){o.reject(e)}),o.promise}var p={getInvernaderos:i,getParcelas:a,createParcela:u,updateParcela:c,createInvernadero:l,updateInvernadero:s,getTipoParcela:r,deleteParcela:d,deleteInvernadero:m,getAreasSiembra:f};return p}angular.module("ElCinaroAdmin").factory("$suelos",e),e.$inject=["_","$http","$q","baseApi"]}(),function(){"use strict";function e(e,n,o,i,a){function r(){var t=n.defer();return e({method:"GET",url:a+"/campaign/options/"}).success(function(e,n,o,i){t.resolve(e)}).error(function(e){t.reject(e)}),t.promise}function l(t,r){var l=n.defer(),c=a+"/user/"+t;return e.put(c,r).success(function(e,t,n,a){l.resolve(e),angular.copy(e,i.user),o.setObject("user",e)}).error(function(e){l.reject(e)}),l.promise}var c={getOptions:r,getClientToken:t,update:l};return c}function t(){return{}}angular.module("ElCinaroAdmin").service("UserService",e),e.$inject=["$http","$q","$localstorage","$rootScope","baseApi"]}(),function(){"use strict";function e(){function e(t){if("object"!=typeof t)return t;var n=/^([\+-]?\d{4}(?!\d{2}\b))((-?)((0[1-9]|1[0-2])(\3([12]\d|0[1-9]|3[01]))?|W([0-4]\d|5[0-2])(-?[1-7])?|(00[1-9]|0[1-9]\d|[12]\d{2}|3([0-5]\d|6[1-6])))([T\s]((([01]\d|2[0-3])((:?)[0-5]\d)?|24\:?00)([\.,]\d+(?!:))?)?(\17[0-5]\d([\.,]\d+)?)?([zZ]|([\+-])([01]\d|2[0-3]):?([0-5]\d)?)?)?)?$/;for(var o in t)if(t.hasOwnProperty(o)){var i,a=t[o];if("string"==typeof a&&(i=a.match(n))){var r=Date.parse(i[0]);isNaN(r)||(t[o]=new Date(r))}else"object"==typeof a&&e(a)}}function t(){return[{id:1,nombre:"Centimetros(cm)"},{id:2,nombre:"Milimetros (mm)"},{id:3,nombre:"Mililitros(cm)"},{id:4,nombre:"Litro (l)"},{id:5,nombre:"Kilogramo(kg)"},{id:6,nombre:"Miligramos (mg)"}]}function n(){return[{id:1,nombre:"L."},{id:2,nombre:"mL."},{id:3,nombre:"g."},{id:4,nombre:"Kg."}]}function o(){return[{name:"Desmalezamiento",_lowername:"desmalezamiento",id:1},{template:"riego.tmpl.html",name:"Riego",_lowername:"riego",id:2},{name:"Fertilizacion",_lowername:"fertilizacion",id:3,template:"fertilizacion.tmpl.html"},{name:"Plaguicida",_lowername:"plagicida",id:4,template:"plaguicida.tmpl.html"},{name:"Limpieza",_lowername:"limpieza",id:5},{name:"Observaciones",_lowername:"observaciones",id:6,template:"observaciones.tmpl.html"}]}function i(){return[{name:"Afghanistan",id:"AF"},{name:"Åland Islands",id:"AX"},{name:"Albania",id:"AL"},{name:"Algeria",id:"DZ"},{name:"American Samoa",id:"AS"},{name:"AndorrA",id:"AD"},{name:"Angola",id:"AO"},{name:"Anguilla",id:"AI"},{name:"Antarctica",id:"AQ"},{name:"Antigua and Barbuda",id:"AG"},{name:"Argentina",id:"AR"},{name:"Armenia",id:"AM"},{name:"Aruba",id:"AW"},{name:"Australia",id:"AU"},{name:"Austria",id:"AT"},{name:"Azerbaijan",id:"AZ"},{name:"Bahamas",id:"BS"},{name:"Bahrain",id:"BH"},{name:"Bangladesh",id:"BD"},{name:"Barbados",id:"BB"},{name:"Belarus",id:"BY"},{name:"Belgium",id:"BE"},{name:"Belize",id:"BZ"},{name:"Benin",id:"BJ"},{name:"Bermuda",id:"BM"},{name:"Bhutan",id:"BT"},{name:"Bolivia",id:"BO"},{name:"Bosnia and Herzegovina",id:"BA"},{name:"Botswana",id:"BW"},{name:"Bouvet Island",id:"BV"},{name:"Brazil",id:"BR"},{name:"British Indian Ocean Territory",id:"IO"},{name:"Brunei Darussalam",id:"BN"},{name:"Bulgaria",id:"BG"},{name:"Burkina Faso",id:"BF"},{name:"Burundi",id:"BI"},{name:"Cambodia",id:"KH"},{name:"Cameroon",id:"CM"},{name:"Canada",id:"CA"},{name:"Cape Verde",id:"CV"},{name:"Cayman Islands",id:"KY"},{name:"Central African Republic",id:"CF"},{name:"Chad",id:"TD"},{name:"Chile",id:"CL"},{name:"China",id:"CN"},{name:"Christmas Island",id:"CX"},{name:"Cocos (Keeling) Islands",id:"CC"},{name:"Colombia",id:"CO"},{name:"Comoros",id:"KM"},{name:"Congo",id:"CG"},{name:"Congo, The Democratic Republic of the",id:"CD"},{name:"Cook Islands",id:"CK"},{name:"Costa Rica",id:"CR"},{name:"Cote D'Ivoire",id:"CI"},{name:"Croatia",id:"HR"},{name:"Cuba",id:"CU"},{name:"Cyprus",id:"CY"},{name:"Czech Republic",id:"CZ"},{name:"Denmark",id:"DK"},{name:"Djibouti",id:"DJ"},{name:"Dominica",id:"DM"},{name:"Dominican Republic",id:"DO"},{name:"Ecuador",id:"EC"},{name:"Egypt",id:"EG"},{name:"El Salvador",id:"SV"},{name:"Equatorial Guinea",id:"GQ"},{name:"Eritrea",id:"ER"},{name:"Estonia",id:"EE"},{name:"Ethiopia",id:"ET"},{name:"Falkland Islands (Malvinas)",id:"FK"},{name:"Faroe Islands",id:"FO"},{name:"Fiji",id:"FJ"},{name:"Finland",id:"FI"},{name:"France",id:"FR"},{name:"French Guiana",id:"GF"},{name:"French Polynesia",id:"PF"},{name:"French Southern Territories",id:"TF"},{name:"Gabon",id:"GA"},{name:"Gambia",id:"GM"},{name:"Georgia",id:"GE"},{name:"Germany",id:"DE"},{name:"Ghana",id:"GH"},{name:"Gibraltar",id:"GI"},{name:"Greece",id:"GR"},{name:"Greenland",id:"GL"},{name:"Grenada",id:"GD"},{name:"Guadeloupe",id:"GP"},{name:"Guam",id:"GU"},{name:"Guatemala",id:"GT"},{name:"Guernsey",id:"GG"},{name:"Guinea",id:"GN"},{name:"Guinea-Bissau",id:"GW"},{name:"Guyana",id:"GY"},{name:"Haiti",id:"HT"},{name:"Heard Island and Mcdonald Islands",id:"HM"},{name:"Holy See (Vatican City State)",id:"VA"},{name:"Honduras",id:"HN"},{name:"Hong Kong",id:"HK"},{name:"Hungary",id:"HU"},{name:"Iceland",id:"IS"},{name:"India",id:"IN"},{name:"Indonesia",id:"ID"},{name:"Iran, Islamic Republic Of",id:"IR"},{name:"Iraq",id:"IQ"},{name:"Ireland",id:"IE"},{name:"Isle of Man",id:"IM"},{name:"Israel",id:"IL"},{name:"Italy",id:"IT"},{name:"Jamaica",id:"JM"},{name:"Japan",id:"JP"},{name:"Jersey",id:"JE"},{name:"Jordan",id:"JO"},{name:"Kazakhstan",id:"KZ"},{name:"Kenya",id:"KE"},{name:"Kiribati",id:"KI"},{name:"Korea, Democratic People'S Republic of",
id:"KP"},{name:"Korea, Republic of",id:"KR"},{name:"Kuwait",id:"KW"},{name:"Kyrgyzstan",id:"KG"},{name:"Lao People'S Democratic Republic",id:"LA"},{name:"Latvia",id:"LV"},{name:"Lebanon",id:"LB"},{name:"Lesotho",id:"LS"},{name:"Liberia",id:"LR"},{name:"Libyan Arab Jamahiriya",id:"LY"},{name:"Liechtenstein",id:"LI"},{name:"Lithuania",id:"LT"},{name:"Luxembourg",id:"LU"},{name:"Macao",id:"MO"},{name:"Macedonia, The Former Yugoslav Republic of",id:"MK"},{name:"Madagascar",id:"MG"},{name:"Malawi",id:"MW"},{name:"Malaysia",id:"MY"},{name:"Maldives",id:"MV"},{name:"Mali",id:"ML"},{name:"Malta",id:"MT"},{name:"Marshall Islands",id:"MH"},{name:"Martinique",id:"MQ"},{name:"Mauritania",id:"MR"},{name:"Mauritius",id:"MU"},{name:"Mayotte",id:"YT"},{name:"Mexico",id:"MX"},{name:"Micronesia, Federated States of",id:"FM"},{name:"Moldova, Republic of",id:"MD"},{name:"Monaco",id:"MC"},{name:"Mongolia",id:"MN"},{name:"Montserrat",id:"MS"},{name:"Morocco",id:"MA"},{name:"Mozambique",id:"MZ"},{name:"Myanmar",id:"MM"},{name:"Namibia",id:"NA"},{name:"Nauru",id:"NR"},{name:"Nepal",id:"NP"},{name:"Netherlands",id:"NL"},{name:"Netherlands Antilles",id:"AN"},{name:"New Caledonia",id:"NC"},{name:"New Zealand",id:"NZ"},{name:"Nicaragua",id:"NI"},{name:"Niger",id:"NE"},{name:"Nigeria",id:"NG"},{name:"Niue",id:"NU"},{name:"Norfolk Island",id:"NF"},{name:"Northern Mariana Islands",id:"MP"},{name:"Norway",id:"NO"},{name:"Oman",id:"OM"},{name:"Pakistan",id:"PK"},{name:"Palau",id:"PW"},{name:"Palestinian Territory, Occupied",id:"PS"},{name:"Panama",id:"PA"},{name:"Papua New Guinea",id:"PG"},{name:"Paraguay",id:"PY"},{name:"Peru",id:"PE"},{name:"Philippines",id:"PH"},{name:"Pitcairn",id:"PN"},{name:"Poland",id:"PL"},{name:"Portugal",id:"PT"},{name:"Puerto Rico",id:"PR"},{name:"Qatar",id:"QA"},{name:"Reunion",id:"RE"},{name:"Romania",id:"RO"},{name:"Russian Federation",id:"RU"},{name:"RWANDA",id:"RW"},{name:"Saint Helena",id:"SH"},{name:"Saint Kitts and Nevis",id:"KN"},{name:"Saint Lucia",id:"LC"},{name:"Saint Pierre and Miquelon",id:"PM"},{name:"Saint Vincent and the Grenadines",id:"VC"},{name:"Samoa",id:"WS"},{name:"San Marino",id:"SM"},{name:"Sao Tome and Principe",id:"ST"},{name:"Saudi Arabia",id:"SA"},{name:"Senegal",id:"SN"},{name:"Serbia and Montenegro",id:"CS"},{name:"Seychelles",id:"SC"},{name:"Sierra Leone",id:"SL"},{name:"Singapore",id:"SG"},{name:"Slovakia",id:"SK"},{name:"Slovenia",id:"SI"},{name:"Solomon Islands",id:"SB"},{name:"Somalia",id:"SO"},{name:"South Africa",id:"ZA"},{name:"South Georgia and the South Sandwich Islands",id:"GS"},{name:"Spain",id:"ES"},{name:"Sri Lanka",id:"LK"},{name:"Sudan",id:"SD"},{name:"Suriname",id:"SR"},{name:"Svalbard and Jan Mayen",id:"SJ"},{name:"Swaziland",id:"SZ"},{name:"Sweden",id:"SE"},{name:"Switzerland",id:"CH"},{name:"Syrian Arab Republic",id:"SY"},{name:"Taiwan, Province of China",id:"TW"},{name:"Tajikistan",id:"TJ"},{name:"Tanzania, United Republic of",id:"TZ"},{name:"Thailand",id:"TH"},{name:"Timor-Leste",id:"TL"},{name:"Togo",id:"TG"},{name:"Tokelau",id:"TK"},{name:"Tonga",id:"TO"},{name:"Trinidad and Tobago",id:"TT"},{name:"Tunisia",id:"TN"},{name:"Turkey",id:"TR"},{name:"Turkmenistan",id:"TM"},{name:"Turks and Caicos Islands",id:"TC"},{name:"Tuvalu",id:"TV"},{name:"Uganda",id:"UG"},{name:"Ukraine",id:"UA"},{name:"United Arab Emirates",id:"AE"},{name:"United Kingdom",id:"GB"},{name:"United States",id:"US"},{name:"United States Minor Outlying Islands",id:"UM"},{name:"Uruguay",id:"UY"},{name:"Uzbekistan",id:"UZ"},{name:"Vanuatu",id:"VU"},{name:"Venezuela",id:"VE"},{name:"Viet Nam",id:"VN"},{name:"Virgin Islands, British",id:"VG"},{name:"Virgin Islands, U.S.",id:"VI"},{name:"Wallis and Futuna",id:"WF"},{name:"Western Sahara",id:"EH"},{name:"Yemen",id:"YE"},{name:"Zambia",id:"ZM"},{name:"Zimbabwe",id:"ZW"}]}var a={getCountries:i,getActions:o,getMedidas:n,getUnidades:t,convertDateStringsToDates:e,item:{}};return a}angular.module("ElCinaroAdmin").factory("$util",e)}(),function(){"use strict";function e(e){function t(t,n,o){var i,a;i=t.dropzone,a=new e(n[0],i.options),t.reset&&a.on("complete",function(e){a.removeFile(e)}),angular.forEach(i.eventHandlers,function(e,t){a.on(t,e)})}var n={link:t,restrict:"EA",scope:{dropzone:"=dropzone",reset:"@reset"}};return n}angular.module("ElCinaroAdmin").directive("dropzone",e),e.$inject=["Dropzone"]}(),function(){"use strict";function e(){function e(e,t,n,o){}var n={restrict:"EA",templateUrl:"assets/views/autocomplete/autocomplete.html",scope:{meta:"=",item:"=?ngModel"},link:e,controller:t,controllerAs:"vm",bindToController:!0};return n}function t(e,t,n,o,i){function a(){console.log("autocomplete directive"),console.log(l.meta),console.log(l.item)}function r(t){console.log("doing query with",t);var n={page:1,limit:100,filter:"",order:"-id",filter:t},a={getRubros:function(){return o.getRubros(n)},getCultivos:function(){return o.getCultivos(n)},getProovedores:function(){return o.getProovedores(n)},getUnidades:function(){return o.getUnidades(n)},getMedidas:function(){return o.getMedidas(n)},getProovedorCategoria:function(){return o.getProovedorCategoria(n)},getTipoParcela:function(){return i.getTipoParcela(n)},getSemillas:function(){return o.getSemillas(n)},getAreasSiembra:function(){return i.getAreasSiembra(n)},getLotesSiembra:function(){return o.getLotes(n)}},r=function(e){return{id:e.id,nombre:e.nombre}};return a[l.meta.handler]().then(function(t){return console.log(t),e.map(t.results,l.meta.mapper||r)})}var l=this;l.simulateQuery=!1,l.isDisabled=!1,l.querySearch=r,a()}angular.module("ElCinaroAdmin").directive("autoComplete",e),t.$inject=["_","$scope","$log","$siembras","$suelos"]}(),function(){"use strict";function e(e,t){function n(){angular.copy(t,e.items),console.log("bottom action bar")}n(),e.listItemClick=function(t){var n=e.items[t];$mdBottomSheet.hide(n)}}angular.module("ElCinaroAdmin").controller("ListBottomSheetController",e),e.$inject=["$scope","items"]}(),function(){"use strict";function e(){var e={restrict:"EA",controllerAs:"vm",controller:t,bindToController:!0,templateUrl:"assets/views/chips/adbChips.html",scope:{map:"=?",max:"@?",list:"=",label:"@?",click:"=?",create:"=?",filter:"=?",id:"@?adbId",disabled:"=",editable:"=",hideList:"=?",listClass:"@?",showCount:"=?",placeholder:"@?",model:"=?ngModel"}};return e}function t(e,t,n,o,i,a){function r(){u.map||(u.map={name:"name",image:"image",type:"chip"}),u.placeholder||(u.placeholder="Type here to filter"),void 0===u.listClass&&(u.listClass="fixed-rows"),void 0===u.showCount&&(u.showCount=!0),u.create&&t(document).keydown(s),void 0===u.filter&&(u.filter={}),e.isUndefined(u.model)&&(u.model=[])}function l(e){return function(t){return!u.exists(t)&&t[u.map.name].toLowerCase().indexOf(e.toLowerCase())!=-1}}function c(e,n){if(!e.length&&n.indexOf(",")!=-1){var o=u.create(n.split(",").filter(function(e){return e&&e.length}));console.log(o),angular.forEach(o,function(e){u.selectItem(e)}),t(u.input).val("")}}function s(e){e.stopPropagation(),t(u.input).is(":focus")&&13==e.which&&n.$apply(function(){var e=u.queryGiven&&u.list.length?u.list.filter(l(u.queryGiven)):[];c(e,u.queryGiven+",")})}var u=this;u.queryGiven="",u.input="#chips-"+(u.id||Date.now())+" md-autocomplete-wrap input",r(),u.querySearch=function(e){u.queryGiven=e;var t=e&&u.list.length?u.list.filter(l(e)):[];return u.create&&c(t,e),t},u.selectItem=function(t){console.log(u.model),u.editable&&u.model.push(t),e.isFunction(u.click)&&u.click(t)},u.exists=function(t){return e.findIndex(u.model,function(e){return e[u.map.name]==t[u.map.name]})>=0},u.stopPropagation=function(e){e.stopPropagation()},n.$watch("vm.list",function(e,t){console.log(e)})}angular.module("ElCinaroAdmin").directive("adbChips",e),t.$inject=["_","jQuery","$scope","$timeout","$mdConstant","$mdDialog"]}(),function(){"use strict";function e(){function e(e,t,n,o){}var n={restrict:"EA",templateUrl:"assets/views/eca-action/eca-action.html",scope:{meta:"=",data:"="},link:e,controller:t,controllerAs:"vm",bindToController:!0};return n}function t(e,t,n,o){function i(){console.log("eca-action"),console.log(r.meta),a()}function a(){n.getInsumos(r.query).then(function(e){r.insumos=e.results})}var r=this;r._=e,r.insumos=[],r.medidas=o.getUnidades(),r.query={order:"-id",limit:100,page:1,filter:""},i()}angular.module("ElCinaroAdmin").directive("ecaAction",e),t.$inject=["_","$http","$insumos","$util"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/footer/footer.html",controller:t,controllerAs:"vm",bindToController:!0};return e}function t(){function e(){console.log("footer Activated")}e()}angular.module("ElCinaroAdmin").directive("footerDirective",e),t.$inject=[]}(),function(){"use strict";function e(){function e(e,t,n,o){}var n={restrict:"EA",templateUrl:"assets/views/form/form.html",scope:{meta:"=",form:"=?ngModel",options:"=?"},link:e,controller:t,controllerAs:"vm",bindToController:!0};return n}function t(e,t){function n(){o.action=o.form.hasOwnProperty("id")?o.meta.handlers[1]:o.meta.handlers[0]}var o=this;n(),e.$watch("vm.options",function(e,t){o.action=o.form.hasOwnProperty("id")?o.meta.handlers[1]:o.meta.handlers[0]},!0)}angular.module("ElCinaroAdmin").directive("ecaForm",e),t.$inject=["$scope","_"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/header/header.html",controller:t,controllerAs:"vm",bindToController:!0,scope:{}};return e}function t(e,t,n){var o=this;o.logout=function(){console.log("LOGOUT"),e.logout()},n.$on("login",function(e,t){n.user||angular.copy(t,n.user),console.log("login",n.user)})}angular.module("ElCinaroAdmin").directive("headerDirective",e),t.$inject=["Auth","$scope","$rootScope"]}(),function(){"use strict";function e(e,t,n,o,i,a,r,l,c,s,u,d,m,f){function p(){console.log("modal controller"),t.meta=angular.copy(f)}function g(e,t,n){switch(e){case"clientes":return s[t](n);case"semillas":return u[t](n);case"proovedores":return d[t](n);case"admin":return r[t](n);case"insumos":return l[t](n);case"rubros":return u[t](n);case"plagas":return c[t](n);case"suelos":return m[t](n);case"cosechas":return u[t](n);default:return h(n)}}function h(e){var t=n.defer();return i(function(){t.resolve(e)},1e3*Math.random(),!1),t.results}t.meta={options:{}},p(),t.close=function(){a.hide()},t.handle=function(e){console.log(e),e&&a.cancel(),g(f.type,f.handler,t.meta.data).then(function(e){a.hide(e)}).catch(function(e){console.log(e)})},t.selectHandler=function(n,o,i){console.log(n,o);var a={page:1,limit:100,filter:"",order:"-id"};if(!t.meta.options[n]){var r={getRubros:function(){return u.getRubros(a)},getCultivos:function(){return u.getCultivos(a)},getProovedores:function(){return u.getProovedores(a)},getUnidades:function(){return u.getUnidades(a)},getProovedorCategoria:function(){return u.getProovedorCategoria(a)},getTipoParcela:function(){return m.getTipoParcela(a)},getSemillas:function(){return u.getSemillas(a)}};if(r.hasOwnProperty(o))return r[o]().then(function(o){t.meta.options[n]=e.map(o.results,function(e){return{id:e.id,name:e.nombre}})}).catch(function(e){console.log(e)})}},t.isInput=function(t){return e.includes(["email","text","password"],t.type)},t.$watch("meta",function(e,t){console.log(e,t)})}angular.module("ElCinaroAdmin").controller("ModalController",e),e.$inject=["_","$scope","$q","$http","$timeout","$mdDialog","$admin","$insumos","$plagas","$pedidos","$siembras","$proovedores","$suelos","payload"]}(),function(){"use strict";function e(e,t,n,o,i,a,r){function l(){console.log("action controller"),angular.copy(a.item,c.item)}var c=this;c.item={},c.data={},c.insumos=r.insumos,c.medidas=a.getMedidas(),l(),c.close=function(){c.item.touched=!0,i.hide(c.data)},c.response=function(){c.item.touched=!0,i.hide(c.data)},c.title=function(){return e.join([e.capitalize(c.item.selector),c.item.cultivo.description],": ")}}angular.module("ElCinaroAdmin").controller("ActionController",e),e.$inject=["_","$scope","$http","$q","$mdDialog","$util","$insumos"]}(),function(){"use strict";function e(e,t){function n(){}n()}angular.module("ElCinaroAdmin").controller("ActividadController",e),e.$inject=["$http","$q"]}();
//# sourceMappingURL=data:application/json;base64,
