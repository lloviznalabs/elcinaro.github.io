!function(){"use strict";angular.module("ElCinaroAdmin",["ui.router","ngMaterial","uiGmapgoogle-maps","md.data.table","angularMoment","moment-picker"])}(),function(){"use strict";angular.module("ElCinaroAdmin").constant("_",window._).constant("jQuery",window.jQuery).constant("Dropzone",window.Dropzone).constant("braintree",window.braintree).constant("moment",window.moment).constant("baseApi","http://localhost:8000")}(),function(){"use strict";function e(e){e.defaults.xsrfCookieName="csrftoken",e.defaults.xsrfHeaderName="X-CSRFToken",e.defaults.headers.post["Content-Type"]="application/json"}function n(e){e.configure({key:"AIzaSyAonFuCDb7HjXUz0uocKbEGUJz91IL9EVs",libraries:"places"})}function t(e){e.fontSet("farm","farm-icons").icon("compost","assets/images/icons/icon-compost.svg").icon("spade","assets/images/icons/icon-spade.svg")}function o(e){e.formatDate=function(e){return console.log(e),moment(e).format("YYYY-MM-DD")},e.parseDate=function(e){var n=moment(e,"DD-MM-YYYY",!0);return console.log(n),n.isValid()?n.toDate():new Date(NaN)}}function i(e,n){e.definePalette("primary",{50:"#3ea34c",100:"#379143",200:"#307e3b",300:"#296c32",400:"#22592a",500:"1B4721",600:"#143518",700:"#0d2210",800:"#061007",900:"#000000",A100:"#45b655",A200:"#56bf64",A400:"#68c675",A700:"#000000",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 A100 A200"}),e.definePalette("accent",{50:"#1c3216",100:"#25441d",200:"#2f5625",300:"#39682d",400:"#427935",500:"#4c8b3c",600:"#60af4c",700:"#6eb85c",800:"#7ec06d",900:"#8ec87f",A100:"#60af4c",A200:"569D44",A400:"#4c8b3c",A700:"#9ecf91",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.definePalette("warn",{50:"#fbcba3",100:"#fabd8b",200:"#f9af72",300:"#f8a15a",400:"#f79341",500:"F68529",600:"#f57711",700:"#e26b0a",800:"#ca5f09",900:"#b25407",A100:"#fcd9bc",A200:"#fde7d4",A400:"#fef5ed",A700:"#994806",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.theme("default").primaryPalette("primary").accentPalette("accent").warnPalette("warn")}i.$inject=["$mdThemingProvider","$locationProvider"],angular.module("ElCinaroAdmin").config(i).config(e).config(t).config(n).config(o),e.$inject=["$httpProvider"],n.$inject=["uiGmapGoogleMapApiProvider"],t.$inject=["$mdIconProvider"],o.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,n,t){e.$state=n,console.log("is authenticated",t.isAuthenticated()),t.isAuthenticated()&&(e.user=t.getUser()),e.$on("$stateChangeStart",function(o,i){e.fill=["login"].indexOf(i.name)!==-1,e.fixed=["dashboard","dashboard.profile"].indexOf(i.name)!==-1,i.authenticate&&!t.isAuthenticated()&&(o.preventDefault(),n.transitionTo("login")),!i.authenticate&&t.isAuthenticated()&&(o.preventDefault(),n.transitionTo("dashboard"))})}angular.module("ElCinaroAdmin").run(e),e.$inject=["$rootScope","$state","Auth"]}(),function(){"use strict";function e(e,n,t){e.state("home",{url:"/",views:{main:{controller:"HomeController",controllerAs:"vm",templateUrl:"assets/views/home.html"}},authenticate:!1}).state("dashboard",{url:"/dashboard",views:{main:{controller:"DashboardController",controllerAs:"vm",templateUrl:"assets/views/dashboard/index.html"}},authenticate:!0}).state("dashboard.profile",{url:"/profile",views:{dashboard:{controller:"ProfileController",controllerAs:"vm",templateUrl:"assets/views/dashboard/profile.html"}},authenticate:!1}).state("dashboard.home",{url:"/home/",views:{dashboard:{controller:"HomeDashboardController",controllerAs:"vm",templateUrl:"assets/views/dashboard/home.html"}},authenticate:!0}).state("dashboard.actividades",{url:"/actividades/",views:{dashboard:{controller:"ActividadController",controllerAs:"vm",templateUrl:"assets/views/seguimiento/actividad.tmpl.html"}},authenticate:!0}).state("dashboard.rubros",{url:"/rubros/:id",views:{dashboard:{controller:"SemillasController",controllerAs:"vm",templateUrl:"assets/views/dashboard/rubros.html"}},authenticate:!0}).state("dashboard.cultivos",{url:"/cultivos/:id",views:{dashboard:{controller:"CultivosController",controllerAs:"vm",templateUrl:"assets/views/dashboard/cultivos.html"}},authenticate:!0}).state("dashboard.semillas",{url:"/semillas/:id",views:{dashboard:{controller:"SemillasController",controllerAs:"vm",templateUrl:"assets/views/dashboard/semillas.html"}},authenticate:!0}).state("dashboard.lotes",{url:"/lotes/:id",views:{dashboard:{controller:"LotesController",controllerAs:"vm",templateUrl:"assets/views/dashboard/lotes.html"}},authenticate:!0}).state("dashboard.suelos",{url:"/suelos/:id",views:{dashboard:{controller:"SuelosController",controllerAs:"vm",templateUrl:"assets/views/dashboard/suelos.html"}},authenticate:!0}).state("dashboard.clientes",{url:"/clientes/:id",views:{dashboard:{controller:"ClientesController",controllerAs:"vm",templateUrl:"assets/views/dashboard/clientes.html"}},authenticate:!0}).state("dashboard.proovedores",{url:"/proovedores/:id",views:{dashboard:{controller:"ProovedoresController",controllerAs:"vm",templateUrl:"assets/views/dashboard/proovedores.html"}},authenticate:!0}).state("login",{url:"/login",views:{main:{controller:"LoginController",controllerAs:"vm",templateUrl:"assets/views/login.html"}},authenticate:!1}),n.otherwise("/login")}angular.module("ElCinaroAdmin").config(e),e.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"]}(),function(){"use strict";function e(e,n,t,o){function i(){console.log("Actividad Controller"),r()}function r(){o.getRubros(a.query).then(function(e){a.categories=e.results}).catch(function(e){console.log(e)}).finally(function(){a.listReady=!0,console.log(a.categories)})}var a=this;a.listReady=!1,a.list=[],a.categories=[],a.query={page:1,limit:100,order:"",filter:""},a.data={cultivos:{},rubros:[]},a.map={name:"nombre",image:""},i(),a.cancel=function(){$mdDialog.$hide()},t.$watch("vm.categories",function(e,n){console.log(e)})}angular.module("ElCinaroAdmin").controller("ActividadController",e),e.$inject=["$http","$q","$scope","$siembras"]}(),function(){"use strict";function e(e,n,t){function o(){console.log("ClientesController"),i()}function i(){r.item=[],r.promise=n.getClientes(r.query).then(function(e){r.data=e})}var r=this;r.getData=i,r.toggleSearch=!1,r.timeout=!1,r.selected=[],r.item=[],r.table={title:"Listado de Clientes",search:{placeholder:"Nombre, Apellido, etc.."}},r.query={order:"",limit:10,page:1,filter:""};var a=[{name:"nombre",type:"text",icon:"perm_identity"},{name:"apellido",type:"text",icon:"perm_identity"},{name:"email",type:"text",icon:"email"},{name:"identification",type:"text",icon:"perm_identity"},{name:"telefono",type:"text",icon:"phone"},{name:"direccion",type:"text",icon:"place"}],l={nombre:"",apellido:"",email:"",identification:"",direccion:"",telefono:""};o(),r.logItem=function(){console.log(r.item)},r.spawnModal=function(n,o){t.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:n,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"clientes",handler:o?"createCliente":"updateCliente",title:o?"Registrar Cliente":"Actualizar Datos Cliente",data:e.isEmpty(r.item)?l:e.head(r.item),fields:a}}}).then(function(e){console.log(e),e&&(r.query.order=o?"-created":"-updated",i())},function(){console.log("cancelled")})},r.spawnDeleteModal=function(e,o){var r=t.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");t.show(r).then(function(){return n.deleteCliente(o).then(function(e){i()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})}}angular.module("ElCinaroAdmin").controller("ClientesController",e),e.$inject=["_","$pedidos","$mdDialog"]}(),function(){"use strict";function e(e,n,t,o,i,r,a){function l(){console.log("Cultivos Controller"),p.detail?c():u(),f()}function c(){return p.item?void(p.item=e.filter(r.cultivos,function(e){return e.id===parseInt(a.id)})):void console.log("have to get item")}function s(e){console.log(e),p.data=e}function u(){p.promise=r.getCultivos(p.query).then(s)}function d(e,n){var t=n?e.filter(m(n)):[];return t}function m(e){var n=angular.lowercase(e);return function(e){return 0===e._lowername.indexOf(n)}}function f(){r.getLotes({page:1,limit:100,order:"-nombre",filter:""}).then(function(n){p.form.lotes=e.map(n.results,function(n){return{name:n.semilla_utilizada.descripcion,codigo:n.semilla_utilizada.codigo,id:n.id,_lowername:e.lowerCase(n.semilla_utilizada.descripcion)}})}).catch(function(e){console.log(e)}).finally(function(){p.form.loading=!1})}var p=this;p.detail=!!a.id,p.querySearch=d,p.selectedItem=null,p.searchText=null,p.getData=u,p.toggleSearch=!1,p.timeout=!1,p.selected=[],p.item=[],p.table={title:"Listado de Cultivos",search:{placeholder:"Rubro, Semilla"}},p.query={order:"lote__id",limit:10,page:1,filter:""},p.form={lotes:[],selectedLotes:[],areasSiembra:[]},l(),p.resetTable=function(){p.detail=!1,p.toggleSearch=!1,p.query.filter="",u()},p.logItem=function(){console.log(p.item)},n.$watch("vm.query.filter",function(e,n){e&&(p.timeout&&i.cancel(p.timeout),p.timeout=i(function(){u()},500))}),n.$watchCollection("vm.item",function(e,n){e&&console.log(e)})}angular.module("ElCinaroAdmin").controller("CultivosController",e),e.$inject=["_","$scope","$http","$q","$timeout","$siembras","$stateParams"]}(),function(){"use strict";function e(e,n){function t(){console.log("DashboardController")}t()}e.$inject=["$http","$q"],angular.module("ElCinaroAdmin").controller("DashboardController",e)}(),function(){"use strict";function e(e,n,t,o,i,r,a,l,c){function s(){console.log("HomeController"),d(),f(),m()}function u(){var n=e.map(A.observations,function(e){var n=e;return n.cultivo=e.cultivo.id,n.hasOwnProperty("fecha_aplicacion")&&(n.fecha_aplicacion=moment(e.fecha_aplicacion,"DD-MM-YYYY HH:mm A",!0)),n});l.createActividades(e.groupBy(n,"selector")).then(function(e){console.log(e)}).catch(function(e){console.log(e)})}function d(){l.getActividades(A.query).then(function(e){console.log(e),A.data=e}).catch(function(e){console.log(e)})}function m(){a.getInsumos({}).then(function(n){A.insumos=e.map(n.results,function(n){return{name:n.nombre,id:n.id,_lowername:e.lowerCase(n.nombre)}})}).catch(function(e){console.log(e)}).finally(function(){})}function f(){r.getRubros({page:1,limit:10,order:"-nombre",filter:""}).then(function(n){A.rubros=e.map(n.results,function(n){return{name:n.nombre,id:n.id,_lowername:e.lowerCase(n.nombre)}})}).catch(function(e){}).finally(function(){})}function p(n){r.getCultivos(n).then(function(n){A.cultivos=e.map(n.results,function(n){return{name:n.codigo,description:n.lote.semilla_utilizada.descripcion,id:n.id,_lowername:e.lowerCase(n.nombre),selected:!1,plaguicida:{},fertilizacion:{},riego:{},observaciones:{text:"Observaciones"}}})}).catch(function(e){}).finally(function(){})}function g(n,t){A.cultivos[n].selected=!t.selected;var n=e.findIndex(A.selectedCultivos,function(e){return e.id===t.id});!t.selected&&A.selectedCultivos[n]?A.selectedCultivos=A.selectedCultivos.splice(n,1):A.selectedCultivos.push(t)}function v(n,t){e.includes([3,4,6],t.type)&&(angular.copy(t,c.item),o.show({controller:"ActionController",controllerAs:"vm",templateUrl:"assets/views/seguimiento/"+t.template,clickOutsideToClose:!0,fullscreen:!0}).then(function(n){console.log(n),e.merge(t,n),console.log(t)},function(){console.log("cancelled")}))}function h(e,n){return console.log(n),n--,n===-1?A.observations.shift():A.observations.splice(n,1)}function y(n){return n?void e.map(A.cultivos,function(e,n){g(n,e)}):(e.map(A.cultivos,function(e,n){e.selected=!1}),void(A.selectedCultivos=[]))}function C(e,n){var t=n?e.filter(b(n)):[];return t}function b(e){var n=angular.lowercase(e);return function(e){return 0===e._lowername.indexOf(n)}}function $(){var n={riego:"Se aplico riego rutinario",desmalezamiento:"se aplicado desmalezamiento en el area",fertilizacion:"Se aplico fertilizacion en el cultivo",plaguicida:"Se aplico plaguicida en el cultivo",limpieza:"Se aplico limpieza en el area"},t=e.map(A.selectedActions,function(t){return e.map(A.selectedCultivos,function(e,o){return{id:new Date,text:e.description,content:n[angular.lowercase(t.name)],type:t.id,template:t.template,selector:angular.lowercase(t.name),cultivo:e}})});A.observations=[].concat.apply([],t)}var A=this;A.actions=c.getActions(),A.title="HomeDashboardController",A.data=[],A.all=!1,A.addActivity=!0,A.querySearch=C,A.selectedItem=null,A.searchText=null,A.selectedRubros=[],A.selectedActions=[],A.selectedCultivos=[],A.rubros=[],A.cultivos=[],A.insumos=[],A.observations=[],A.toggle=y,A.selectCultivo=g,A.detailItem=v,A.removeItem=h,A.submit=u,A.query={page:1,limit:5,order:"-fecha_realizacion",filter:""},s(),n.$watch("vm.data",function(n,t){if(n){var o=e.groupBy(A.data.results,function(e){return moment(moment(e.fecha_realizacion).startOf("day")).format()});A.formattedData=o}}),n.$watchCollection("vm.selectedRubros",function(n,t){if(n.length){var o=e.map(n,function(e){return e.name}).join(",");p({page:1,limit:10,order:"fecha_siembra",filter:o})}}),n.$watchCollection("vm.selectedActions",function(e,n){$()}),n.$watchCollection("vm.selectedCultivos",function(e,n){e.length&&e.length!==n.length&&$()}),n.$watchCollection("vm.observations",function(e,n){console.log(e)},!0)}angular.module("ElCinaroAdmin").controller("HomeDashboardController",e),e.$inject=["_","$scope","$rootScope","$mdDialog","jQuery","$siembras","$insumos","$seguimiento","$util"]}(),function(){"use strict";function e(e,n,t,o,i,r,a){function l(){console.log("Cultivos Controller"),d.detail?c():u()}function c(){return d.item?void(d.item=e.filter(r.cultivos,function(e){return e.id===parseInt(a.id)})):void console.log("have to get item")}function s(e){console.log(e),d.data=e}function u(){d.promise=r.getLotes(d.query).then(s)}var d=this;d.detail=!!a.id,d.getData=u,d.toggleSearch=!1,d.timeout=!1,d.selected=[],d.item=[],d.table={title:"Listado",search:{placeholder:"Rubro, Semilla"}},d.query={order:"lote__id",limit:10,page:1,filter:""},l(),d.resetTable=function(){d.detail=!1,d.toggleSearch=!1,d.query.filter="",u()},d.logItem=function(){console.log(d.item)},n.$watch("vm.query.filter",function(e,n){e&&(d.timeout&&i.cancel(d.timeout),d.timeout=i(function(){u()},500))}),n.$watchCollection("vm.item",function(e,n){e&&console.log(e)})}angular.module("ElCinaroAdmin").controller("LotesController",e),e.$inject=["_","$scope","$http","$q","$timeout","$siembras","$stateParams"]}(),function(){"use strict";function e(e,n,t,o,i,r,a){function l(){console.log("Profile Controller")}function c(e){var n=e?u.countries.filter(s(e)):u.countries;return n}function s(n){var t=e.capitalize(n);return function(e){return 0===e.name.indexOf(t)}}var u=this,d=null;u.countries=a.getCountries(),u.data={country:"CA",username:"",birth:new Date},u.placesReady=!1,l(),u.autocompleteCountry=function(e){return c(e)},u.autocompleteAddress=function(n){var o=t.defer();return d.getQueryPredictions({input:n},function(n){o.resolve(n?e.filter(e.filter(n,"place_id"),function(n){return!e.includes(n.types,"establishment")&&!e.includes(n.types,"country")}):[])}),o.promise},u.updateProfile=function(){u.loading=!0,u.data.country=angular.isObject(u.data.country)?u.data.country.id:u.data.country,r.update(n.user.id,u.data).then(function(e){u.data=e,u.error=!1,u.data.birth=moment(u.data.birth).toDate()},function(e){u.error=!0}).finally(function(){u.loading=!1})}}angular.module("ElCinaroAdmin").controller("ProfileController",e),e.$inject=["_","$rootScope","$q","uiGmapGoogleMapApi","uiGmapIsReady","UserService","$util"]}(),function(){"use strict";function e(e,n,t,o,i){function r(){console.log("ProovedoresController"),l()}function a(e){console.log(e),c.data=e}function l(){c.item=[],c.promise=o.getProovedores(c.query).then(a)}var c=this;c.title="Proovedores",c.getData=l,c.toggleSearch=!1,c.timeout=!1,c.item=[],c.table={title:"Inventario de Proovedores",search:{placeholder:"Nombre"},detail:{title:function(e){return"Proovedor: "+e.join(" ")}}},c.query={order:"-updated",limit:10,page:1,filter:""};var s={nombre:"",descripcion:"",categoria:"",direccion:"",telefono:""},u=[{name:"nombre",type:"text",icon:"perm_identity"},{name:"descripcion",type:"text",icon:"perm_identity"},{name:"categoria",type:"select",icon:"perm_identity",handler:"getProovedorCategoria",placeholder:"Categoria"},{name:"telefono",type:"text",icon:"phone"},{name:"direccion",type:"text",icon:"place"}];r(),c.resetTable=function(){c.toggleSearch=!1,c.query.filter="",l()},c.spawnModal=function(e,n){t.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"proovedores",handler:n?"createProovedor":"updateProovedor",title:n?"Registrar Proovedor":"Actualizar Datos Proovedor",data:_.isEmpty(c.item)?s:_.mapValues(_.head(c.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:u,options:{}}}}).then(function(e){e&&(c.query.order=n?"-created":"-updated",l())},function(){console.log("cancelled")})},c.spawnDeleteModal=function(e,n){var o=t.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");t.show(o).then(function(){return i.deleteProovedor(n).then(function(e){l()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},e.$watch("vm.query.filter",function(e,n){e&&(c.timeout&&$timeout.cancel(c.timeout),c.timeout=$timeout(function(){l()},500))}),e.$watchCollection("vm.item",function(e,n){_.isEmpty(e)})}angular.module("ElCinaroAdmin").controller("ProovedoresController",e),e.$inject=["$scope","$http","$mdDialog","$siembras","$proovedores"]}(),function(){"use strict";function e(e,n,t,o,i,r,a){function l(){console.log("Semillas Controller"),s()}function c(e){console.log(e),u.data=e}function s(){u.promise=a.getSemillas(u.query).then(c)}var u=this;u.getData=s,u.toggleSearch=!1,u.timeout=!1,u.item=[],u.table={title:"Inventario de Semillas",search:{placeholder:"Rubro, proovedor, descripcion"},detail:{title:function(e){return"Semilla: "+e.join(" ")}}},u.query={order:"nivel_germinacion",limit:10,page:1,filter:""};var d=[{name:"descripcion",type:"text",icon:"description"},{name:"fecha_compra",type:"date",icon:"today",placeholder:"Fecha Compra"},{name:"precio_compra",type:"number",icon:"attach_money"},{name:"cantidad",type:"number",icon:"info"},{name:"unidad",type:"select",icon:"info",handler:"getUnidades",placeholder:"Unidad"},{name:"familia",type:"select",icon:"text_fields",handler:"getRubros",placeholder:"Rubro",map:{id:"id",name:"nombre"}},{name:"proovedor",type:"select",icon:"perm_identity",handler:"getProovedores",placeholder:"Proovedor"},{name:"nivel_germinacion",type:"text",icon:"info"}],m={proovedor:"",nivel_germinacion:"",familia:"",unidad:"",cantidad:"",precio_compra:"",fecha_compra:new Date};l(),u.resetTable=function(){u.toggleSearch=!1,u.query.filter="",s()},u.spawnModal=function(e,n){r.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"semillas",handler:n?"createSemilla":"updateSemilla",title:n?"Registrar Semilla":"Actualizar Datos Semilla",data:_.isEmpty(u.item)?m:_.mapValues(_.head(u.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:d,options:{}}}}).then(function(e){e&&(u.query.order=n?"-created":"-updated",s())},function(){console.log("cancelled")})},u.spawnDeleteModal=function(e,n){var t=r.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");r.show(t).then(function(){return $pedidos.deleteCliente(n).then(function(e){s()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},n.$watch("vm.query.filter",function(e,n){e&&(u.timeout&&i.cancel(u.timeout),u.timeout=i(function(){s()},500))}),n.$watchCollection("vm.item",function(e,n){_.isEmpty(e)||(u.item[0].fecha_compra=new Date(u.item[0].fecha_compra))})}angular.module("ElCinaroAdmin").controller("SemillasController",e),e.$inject=["moment","$scope","$http","$q","$timeout","$mdDialog","$siembras"]}(),function(){"use strict";function e(e,n){function t(){console.log("Suelos Controller")}t()}angular.module("ElCinaroAdmin").controller("SuelosController",e),e.$inject=["$http","$q"]}(),function(){"use strict";function e(){function e(e){var n={1:"Desmalezamiento",2:"Riego",3:"Fertilizacion",4:"Plaguicida",5:"Limpieza"};return n[e]}return e}angular.module("ElCinaroAdmin").filter("formatter",e)}(),function(){"use strict";function e(e,n){function t(){console.log("HomeController")}function o(e){n("html, body").animate({scrollTop:n(e).offset().top},1e3)}var i=this;i.title="Home Controller",i.scrollTo=o,i.actividades=[],t()}angular.module("ElCinaroAdmin").controller("HomeController",e),e.$inject=["$rootScope","jQuery"]}(),function(){"use strict";function e(e,n){var t=this;t.loading=!1,t.auth=function(){console.log("LOGIN",t.user),t.loading=!0,n.login(t.user).then(function(n){console.log(n),e.go("dashboard")}).catch(function(e){console.log(e)}).finally(function(){t.loading=!1})}}angular.module("ElCinaroAdmin").controller("LoginController",e),e.$inject=["$state","Auth"]}(),function(){"use strict";function e(e,n,t,o,i){function r(){console.log("signup controller")}function a(e){var n=e?c.countries.filter(l(e)):c.countries;return n}function l(e){var n=_.capitalize(e);return function(e){return 0===e.name.indexOf(n)}}var c=this;c.data={country:null},c.loading=!1,c.isConfirm=!0,c.availability=!0,c.countries=i.getCountries(),r(),c.autocompleteCountry=function(e){return a(e)},c.signupAttempt=function(){c.loading=!0;var e=c.data.country;c.data.country=e.id,o.register(c.data).then(function(e){o.setCredentials(e),n.hide()},function(e){console.log(e),c.error=!0}).finally(function(){c.loading=!1})},c.checkCredentailsAvailability=function(e){var n={};c.availability=!0,c.data[e]&&(c.loading=!0,n[e]=c.data[e],o.credentialAvaliability(n).then(function(e){c.availability=e.availability,c.loading=!1},function(e){c.error=!0,c.loading=!1}))},c.compare=function(){c.isConfirm=c.data.confirmPassword==c.data.password},c.close=function(){n.cancel()},t.$watch("vm.data",function(e,n){console.log(e)},!0)}angular.module("ElCinaroAdmin").controller("SignupController",e),e.$inject=["$rootScope","$mdDialog","$scope","Auth","$util"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.campaign.html",scope:{options:"=",form:"=",total:"=",control:"="},controller:n,controllerAs:"vm",bindToController:!0};return e}function n(e,n,t,o){function i(){console.log("campaign directive"),o.then(function(e){console.log(e),l=new e.places.AutocompleteService,a.placesReady=!0})}function r(){a.loading=!0,t.getCategories("all",{all:!0,official:!0,country:a.form.country}).then(function(e){a.categories=e}).finally(function(){a.loading=!1})}var a=this,l=null;a.interests=[],a.categories=[],a.categoriesReady=!1,i(),a.autocompleteCities=function(e){var t=n.defer();return l.getQueryPredictions({input:e},function(e){t.resolve(e?_.filter(_.filter(e,"place_id"),function(e){return _.includes(e.types,"locality")||_.includes(e.types,"administrative_area_level_3")}):[])}),t.promise},a.autocompleteStates=function(e){var t=n.defer();return l.getQueryPredictions({input:e},function(e){t.resolve(e?_.filter(_.filter(e,"place_id"),function(e){return _.includes(e.types,"administrative_area_level_1")||_.includes(e.types,"administrative_area_level_2")}):[])}),t.promise},a.autocompleteCountries=function(e){var t=n.defer();return l.getQueryPredictions({input:e},function(e){t.resolve(e?_.filter(_.filter(e,"place_id"),function(e){return _.includes(e.types,"country")}):[])}),t.promise},e.$watch("vm.control.selectedTab",function(e,n){a.categoriesReady||2!==e||r()},!0)}angular.module("ElCinaroAdmin").directive("adbOrdersCampaign",e),n.$inject=["$scope","$q","CategoryService","uiGmapGoogleMapApi"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.checkout.html",scope:{options:"=",form:"=",total:"=",success:"=",control:"="},controller:n,controllerAs:"vm",bindToController:!0};return e}function n(e,n,t,o,i,r,a){function l(){a.getClientToken().then(function(e){console.log(e),c(e.clientToken)}).catch(function(e){console.log(e)})}function c(e){n.setup(e,"custom",{paypal:{container:"paypal-container",singleUse:!0,amount:"0",currency:"USD",locale:"en_us",enableShippingAddress:!1},onPaymentMethodReceived:function(e){s(e.nonce)},onReady:function(e){u.checkout=e}})}function s(e){console.log(e),t.$apply(function(){u.form.nonce=e,u.authorization=!0})}var u=this;u.checkout={},u.loading=!1,u.authorization=!1,u.launch=function(){u.loading=!0,u.form.amount=parseFloat(u.total).toFixed(2),a.createCampaign(u.form).then(function(e){console.log(e),u.success=!0,o.fill=!0}).catch(function(e){console.log(e),u.success=!1}).finally(function(){u.loading=!1})},t.$watch("vm.form",function(e,n){e&&console.log(e)}),t.$watch("vm.control.selectedTab",function(e,n){console.log("current tab ",e),3==e&&l()},!0),t.$watch("vm.checkout",function(e,n){e&&console.log(e)})}angular.module("ElCinaroAdmin").directive("adbOrdersCheckout",e),n.$inject=["_","braintree","$scope","$rootScope","$http","$q","DataService"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.customer.html",scope:{form:"=",control:"="},controller:n,controllerAs:"vm",bindToController:!0};return e}function n(e,n,t,o,i){function r(){a.control.tabs[0].valid=!1,a.control.tabs[1].valid=!0,a.control.selectedTab+=1}var a=this;a.nextTab=r,a.auth=function(){a.loading=!0,i.login(a.form.auth).then(function(e){console.log(e),r()}).catch(function(e){console.log(e)}).finally(function(){a.loading=!1})},a.signup=function(){o.show({fullscreen:!0,controllerAs:"vm",controller:"SignupController",templateUrl:"assets/views/modal/signup.html"}).then(function(){r()})}}angular.module("ElCinaroAdmin").directive("adbOrdersCustomer",e),n.$inject=["$http","$q","$rootScope","$mdDialog","Auth"]}(),function(){"use strict";function e(e,n,t,o,i,r,a){function l(){r.getOptions().then(function(e){console.log(e),v.options.target=c(e),console.log(v.form)}).catch(function(e){console.log(e)})}function c(n){var t=function(n,o){return e.isObject(n)?e.merge({},n,o,t):n||o},o=e.flatten([{},n,t]);return e.merge.apply(e,o)}function s(e,n){o.show({fullscreen:!0,targetEvent:e,clickOutsideToClose:!0,templateUrl:"app/shared/layout/imageModal.html",locals:{image:n},controller:["$scope","image",function(e,n){e.image=n}]})}function u(){o.show({templateUrl:"app/components/ad/advertisementModal.html",clickOutsideToClose:!0,fullscreen:!0})}function d(){i.show(i.simple().textContent("Awesome, you can now go to next step!").position("bottom right").hideDelay(3e3))}function m(n){var t=!1;return t="both"===n?!!e.isEmpty(e.pickBy(v.form.banner,e.isNull)):!!(v.form.banner.description&&v.form.banner.url&&v.form.banner[n])}function f(){return!e.isEmpty(v.form.marker)}function p(){var e=v.form.media.display,n=v.form.options.display.display;switch(n){case"banner":return m(e);case"map":return f()}return!1}function g(){switch(v.control.selectedTab){case 1:v.form.media.hasOwnProperty("id")&&v.form.options.display.hasOwnProperty("id")&&p()?(v.control.tabs[2].valid=!0,d()):v.control.tabs[2].valid=!1;break;case 2:v.form.options.impressions.hasOwnProperty("id")?(v.control.tabs[3].valid=!0,d()):v.control.tabs[3].valid=!1;break;default:console.log(v.control.selectedTab)}}var v=this;v.openImage=s,v.add=u,v.total=0,v.success=!1,v.control={selectedTab:t.user?1:0,tabs:[{valid:!t.user,show:!0},{valid:!1,show:!0},{valid:!1,show:!0},{valid:!1,show:!0}]},v.options={target:{display:[],media:[],impressionsUnits:[],impressionsTime:[],distance:[],age:[],gender:[]}},v.form={media:{},banner:{},marker:{},options:{display:{},impressions:{},distance:{},age:{},gender:{},interests:{},activities:[]},customer:{},country:t.user?e.find(a.getCountries(),function(e){return e.name===t.user.country||e.id===t.user.country})||"CA":"CA",state:null,city:null,categories:[]},l(),v.selectedTab=function(){return t.user?v.control.selectedTab:0},n.$watch(function(){return t.user},function(){t.user&&(v.form.country=e.find(a.getCountries(),function(e){return e.name===t.user.country||e.id===t.user.country}).id)},!0),n.$watch("vm.form",function(n,t){console.log(n),g(),v.total=n.media.hasOwnProperty("fee")?n.media.fee:0,e.map(n.options,function(e){e.hasOwnProperty("fee")&&(v.total+=v.total*e.fee),e.hasOwnProperty("discount")&&(v.total-=v.total*e.discount)})},!0)}angular.module("ElCinaroAdmin").controller("OrdersController",e),e.$inject=["_","$scope","$rootScope","$mdDialog","$mdToast","DataService","$util"]}(),function(){"use strict";function e(){function e(e,n,t,o){}var t={restrict:"EA",templateUrl:"assets/views/orders/orders.resume.html",scope:{options:"=",form:"=",total:"="},link:e,controller:n,controllerAs:"vm",bindToController:!0};return t}function n(e,n,t){function o(){}var i=this;o(),i.formatImpressions=function(){if(i.form.impressionType&&i.form.options.impressions.hasOwnProperty("id")){var n={impressionsUnits:e.join([i.form.options.impressions.quantity,i.form.options.impressions.type]," "),impressionsTime:e.join([i.form.options.impressions.time,i.form.options.impressions.period]," ")};return n[i.form.impressionType]}},i.formatTarget=function(){var n={distance:{value:i.form.options.distance,render:e.join(["Distance:",i.form.options.distance.distance||"","Km"]," ")},age:{value:i.form.options.age,render:e.join(["Age between:",e.join(i.form.options.age.range,"-")]," ")},gender:{value:i.form.options.gender,render:e.join(["Gender:",i.form.options.gender.gender]," ")},interests:{value:i.form.options.interests,render:e.join(["Interests:",i.form.options.interests.quantity]," ")}},t=e.pickBy(n,function(e){return e.value.hasOwnProperty("id")});return e.isEmpty(t)?"":e.join(["Target: ",e.map(Object.keys(t),function(e){return n[e].render})],"")},i.formatResume=function(){return resume}}angular.module("ElCinaroAdmin").directive("adbOrdersResume",e),n.$inject=["_","$http","$q"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.display.html",scope:{options:"=",form:"=",total:"="},controller:n,controllerAs:"vm",bindToController:!0};return e}function n(e,n,t,o,i,r){function a(){console.log("activate"),u()}function l(e,n,t,o){console.log(n),i(function(){e.panTo(new google.maps.LatLng(n.latitude,n.longitude)),t&&e.panBy(0,-200)},100)}function c(e,n,t){var i=t[0],r=i.latLng.lat(),a=i.latLng.lng();d.marker={id:Date.now(),location:{latitude:r,longitude:a},show:!1},o.$apply()}function s(){console.log("bounds changed"),console.log(d.placesReady),d.map.instance||u()}function u(){t.all([e,n.promise(1)]).then(function(e){var n=e[0],t=e[1][0].map;d.window={pixelOffset:new n.Size(0,(-40)),closeClick:function(){d.marker.show=!1}},g=new n.places.AutocompleteService,p=new n.DirectionsService,f=new n.DirectionsRenderer,d.map.instance=t,f.setMap(d.map.instance),m=new n.places.PlacesService(d.map.instance),d.placesReady=!0,console.log("ready")})}var d=this,m=null,f=null,p=null,g=null;d.markerConfirmed=!1,d.placesReady=!1,d.control={uploading:!1},d.map={center:{latitude:45.50174502816667,longitude:-73.5703881829977},zoom:14,options:{scrollwheel:!0},mapMarker:!0,disableDefaultUI:!0,control:{},events:{click:c,idle:s}},d.info={name:"",address:"",icon:""},d.marker={id:0,location:{latitude:45.50174502816667,longitude:-73.5703881829977
},show:!1},d.desktopDropzone=r.create("desktop",function(e,n){o.$apply(function(){console.log(n.secure_url),d.form.banner.website=n.secure_url,d.control.uploading=!1})},function(){o.$apply(function(){d.control.uploading=!0})}),d.mobileDropzone=r.create("mobile",function(e,n){o.$apply(function(){console.log(n.secure_url),d.form.banner.app=n.secure_url,d.control.uploading=!1})},function(){o.$apply(function(){d.control.uploading=!0})}),a(),d.clickMarker=function(){console.log("click"),d.marker.show=!d.marker.show,o.$apply()},d.autocompleteAddress=function(e){d.markerConfirmed=!1;var n=t.defer();return g.getQueryPredictions({input:e},function(e){n.resolve(e?_.filter(e,"place_id"):[])}),n.promise},d.getPlace=function(){return console.log(d.info.place),d.info.place?void m.getDetails({placeId:d.info.place.place_id},function(e,n){console.log(e,n),d.marker={id:Date.now(),address:e.formatted_address,name:d.info.name,location:{latitude:parseFloat(e.geometry.location.lat()),longitude:parseFloat(e.geometry.location.lng())},show:!0,country:_.filter(e.address_components,function(e){return _.includes(e.types,"country")})[0].long_name,address_components:e.address_components},l(d.map.instance,d.marker.location,null,!0),o.$apply()}):void(d.markerConfirmed=!1)},d.confirmMarker=function(){d.info.name&&(d.form.marker={id:d.marker.id,address:d.marker.address,name:d.info.name,location:d.marker.location,show:!0,country:d.marker.country,address_components:d.marker.address_components},d.markerConfirmed=!0,console.log(d.form.marker))}}angular.module("ElCinaroAdmin").directive("adbDisplayChooser",e),n.$inject=["uiGmapGoogleMapApi","uiGmapIsReady","$q","$scope","$timeout","DropzoneService"]}(),function(){"use strict";function e(e,n,t){function o(o,r){var a=n.defer();return e.get(t+"/campaign/categories/",{params:{country:r.country}}).success(function(e){a.resolve(e),console.log(e.length),angular.copy(e,i.categories)}).error(function(e){a.reject(e)}),a.promise}var i={categories:[],getCategories:o};return i}angular.module("ElCinaroAdmin").service("CategoryService",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,n,t,o,i,r,a){function l(){return a.getObject("user",null)||a.get("access_token",null)}function c(n){var i=o.defer();return t.post(e+"/auth/validate/"+n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function s(n){var i=o.defer();return t.post(e+"/rest-auth/login/",n).success(function(e,n,t,o){i.resolve(e),e.hasOwnProperty("token")&&(r.user=angular.copy(e.user),r.$emit("login",e.user),a.set("access_token",e.token),a.setObject("user",e.user)),e.hasOwnProperty("key")&&a.set("access_token",e.key)}).error(function(e){i.reject(e)}),i.promise}function u(n){var i=o.defer();return t.post(e+"/auth/register",n).success(function(e,n,t,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function d(n,i){var r=o.defer();return t.post(e+"/auth/resetpassword/"+n,i).success(function(e,n,t,o){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}function m(n){var i=o.defer();return t.post(e+"/auth/resetPasswordRequest",n).success(function(e,n,t,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function f(){a.remove("user"),a.remove("access_token"),a.remove("original_user"),r.isAuthenticated=!1,r.user=null,r.view="auth",r.currentState="login",n.location.reload()}function p(e,n){e.hasOwnProperty("token")?(!n&&a.get("access_token")||a.set("access_token",e.token),r.user=e.user,a.setObject("user",e.user)):console.log("Bad Date",e)}function g(){return a.get("access_token")}function v(n){var i=o.defer();return t.get(e+"/user/availability/",{params:n}).success(function(e,n,t,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var h={getUser:l,validate:c,isAuthenticated:g,login:s,logout:f,register:u,forgot:m,reset:d,setCredentials:p,credentialAvaliability:v};return h}function n(e,n,t){function o(e){var t;return n.get("access_token")&&(t=n.get("access_token")),t&&(e.headers.Authorization="Bearer "+t),e}function i(o){return 401!==o.status&&403!==o.status||(n.remove("access_token"),t.get("$state").go("login")),e.reject(o)}var r={request:o,responseError:i};return r}n.$inject=["$q","$localstorage","$injector"],angular.module("ElCinaroAdmin").factory("Auth",e).factory("AuthInterceptor",n).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor"),e.defaults.withCredentials=!1}]),e.$inject=["baseApi","$window","$http","$q","$state","$rootScope","$localstorage"]}(),function(){"use strict";function e(e,n,t){function o(){var o=n.defer();return e({method:"GET",url:t+"/campaign/options/"}).success(function(e,n,t,i){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}function i(){var o=n.defer();return e({method:"GET",url:t+"/commerce/clientToken/"}).success(function(e,n,t,i){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}function r(o){var i=n.defer();return e.post(t+"/campaign/create/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=n.defer();return e.get(t+"/campaign/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getOptions:o,getClientToken:i,createCampaign:r,getCampaigns:a};return l}angular.module("ElCinaroAdmin").service("DataService",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(){function e(e,t,o,i){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",uploadMultiple:!1,maxFiles:1,acceptedFiles:"image/*",dictDefaultMessage:"Drop file or click here to upload",addRemoveLinks:!0,init:function(){this.on("thumbnail",function(t){t.width!==n[e].width||t.height!==n[e].height?t.rejectDimensions():t.acceptDimensions()})},accept:function(e,n){e.acceptDimensions=n,e.rejectDimensions=function(){n("Invalid dimension.")}}},eventHandlers:{sending:function(e,n,t){t.append("api_key",839988333153567),t.append("timestamp",Date.now()/1e3|0),t.append("upload_preset","sm2ev4nu"),o&&o()},success:t,removedfile:i}}}function t(e,n,t){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",maxFiles:e,acceptedFiles:"image/*",dictDefaultMessage:"Drop files or click here to upload"},eventHandlers:{sending:function(e,n,o){o.append("api_key",839988333153567),o.append("timestamp",Date.now()/1e3|0),o.append("upload_preset","sm2ev4nu"),t&&t()},success:n}}}var o={create:e,createMultiple:t};return o}angular.module("ElCinaroAdmin").service("DropzoneService",e);var n={mobile:{width:750,height:100},desktop:{width:880,height:1156}}}(),function(){"use strict";function e(e,n,t){function o(o){var r=t.defer();return n.get(e+"/insumos/",{params:{page:o.page||1,page_size:o.limit||50,format:"json",ordering:o.order||"id",search:o.filter||""}}).success(function(e){angular.copy(e.results,i.insumos),r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}var i={getInsumos:o,insumos:[]};return i}angular.module("ElCinaroAdmin").factory("$insumos",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e){function n(n,t){e.localStorage[n]=t}function t(n,t){return e.localStorage[n]||t}function o(n,t){e.localStorage[n]=JSON.stringify(t)}function i(n,t){return JSON.parse(e.localStorage[n]||(void 0!==t?t:"{}"))}function r(n){return e.localStorage.removeItem(n)}var a={set:n,get:t,setObject:o,getObject:i,remove:r};return a}angular.module("ElCinaroAdmin").factory("$localstorage",e),e.$inject=["$window"]}(),function(){"use strict";function e(e,n,t){function o(o){var i=t.defer();return n.get(e+"/clientes/",{params:{page:o.page||1,page_size:o.limit||10,format:"json",ordering:o.order||"",search:o.filter||""}}).success(function(e){angular.copy(e.results,l.clientes),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=t.defer();return n.put(e+"/clientes/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=t.defer();return n.post(e+"/clientes/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=t.defer();return n.delete(e+"/clientes/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getClientes:o,updateCliente:i,createCliente:r,deleteCliente:a,clientes:[]};return l}angular.module("ElCinaroAdmin").factory("$pedidos",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e,n,t){function o(o){var i=n.defer();return e.put(t+"/proovedores/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return e.post(t+"/proovedores/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=n.defer();return e.delete(t+"/proovedores/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var a={createProovedor:i,updateProovedor:o,deleteProovedor:r};return a}angular.module("ElCinaroAdmin").factory("$proovedores",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,n,t){function o(o){var i=t.defer();return n.get(e+"/actividades/",{params:{page:o.page,page_size:o.limit,format:"json",ordering:o.order,search:o.filter}}).success(function(e){angular.copy(e.results,r.semillas),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=t.defer();return n.post(e+"/actividades/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var r={getActividades:o,createActividades:i,actividades:[]};return r}angular.module("ElCinaroAdmin").factory("$seguimiento",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e,n,t,o,i){function r(t){var i=n.defer();return e.get(o+"/semillas/",{params:{page:t.page||1,page_size:t.limit||100,format:"json",ordering:t.order||"-id",search:t.filter||""}}).success(function(e){angular.copy(e.results,p.semillas),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(t){var r=n.defer();t.fecha_compra=i(t.fecha_compra).format("YYYY-MM-DD");var a=_.mapValues(t,function(e){return _.isObject(e)?e.id:e});return console.log(a),e.post(o+"/semillas/",a).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}function l(t){var r=n.defer();return t.fecha_compra=i(t.fecha_compra).format("YYYY-MM-DD"),e.put(o+"/semillas/"+t.id+"/",t).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}function c(t){var i=n.defer();return e.get(o+"/cultivos/",{params:{page:t.page,page_size:t.limit,format:"json",ordering:t.order,search:t.filter}}).success(function(e){angular.copy(e.results,p.cultivos),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function s(t){var i=n.defer();return e.get(o+"/lotes/",{params:{page:t.page||1,page_size:t.limit||100,format:"json",ordering:t.order||"-id",search:t.filter||""}}).success(function(e){angular.copy(e.results,p.lotes),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function u(t){var i=n.defer();return e.get(o+"/rubros/",{params:{page:t.page||1,page_size:t.limit||100,format:"json",ordering:t.order||"-id",search:t.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function d(){var e=n.defer();return t(function(){e.resolve({results:[{id:1,nombre:"gramos"},{id:2,nombre:"unidades"}]})},1e3*Math.random(),!1),e.promise}function m(t){var i=n.defer();return e.get(o+"/categorias/",{params:{page:t.page,page_size:t.limit,format:"json",ordering:t.order,search:t.filter}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function f(t){var i=n.defer();return e.get(o+"/proovedores/",{params:{page:t.page,page_size:t.limit,format:"json",ordering:t.order,search:t.filter}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var p={getSemillas:r,getCultivos:c,getRubros:u,getLotes:s,getProovedores:f,getProovedorCategoria:m,getUnidades:d,createSemilla:a,updateSemilla:l,cultivos:[],semillas:[],lotes:[]};return p}angular.module("ElCinaroAdmin").factory("$siembras",e),e.$inject=["$http","$q","$timeout","baseApi","moment"]}(),function(){"use strict";function e(e,t,o,i,r){function a(){var n=t.defer();return e({method:"GET",url:r+"/campaign/options/"}).success(function(e,t,o,i){n.resolve(e)}).error(function(e){n.reject(e)}),n.promise}function l(n,a){var l=t.defer(),c=r+"/user/"+n;return e.put(c,a).success(function(e,n,t,r){l.resolve(e),angular.copy(e,i.user),o.setObject("user",e)}).error(function(e){l.reject(e)}),l.promise}var c={getOptions:a,getClientToken:n,update:l};return c}function n(){return{}}angular.module("ElCinaroAdmin").service("UserService",e),e.$inject=["$http","$q","$localstorage","$rootScope","baseApi"]}(),function(){"use strict";function e(){function e(){return[{id:1,nombre:"L."},{id:2,nombre:"mL."},{id:3,nombre:"g."},{id:4,nombre:"Kg."}]}function n(){return[{name:"Desmalezamiento",_lowername:"desmalezamiento",id:1},{template:"riego.tmpl.html",name:"Riego",_lowername:"riego",id:2},{name:"Fertilizacion",_lowername:"fertilizacion",id:3,template:"fertilizacion.tmpl.html"},{name:"Plaguicida",_lowername:"plagicida",id:4,template:"plaguicida.tmpl.html"},{name:"Limpieza",_lowername:"limpieza",id:5},{name:"Observaciones",_lowername:"observaciones",id:6,template:"observaciones.tmpl.html"}]}function t(){return[{name:"Afghanistan",id:"AF"},{name:"Åland Islands",id:"AX"},{name:"Albania",id:"AL"},{name:"Algeria",id:"DZ"},{name:"American Samoa",id:"AS"},{name:"AndorrA",id:"AD"},{name:"Angola",id:"AO"},{name:"Anguilla",id:"AI"},{name:"Antarctica",id:"AQ"},{name:"Antigua and Barbuda",id:"AG"},{name:"Argentina",id:"AR"},{name:"Armenia",id:"AM"},{name:"Aruba",id:"AW"},{name:"Australia",id:"AU"},{name:"Austria",id:"AT"},{name:"Azerbaijan",id:"AZ"},{name:"Bahamas",id:"BS"},{name:"Bahrain",id:"BH"},{name:"Bangladesh",id:"BD"},{name:"Barbados",id:"BB"},{name:"Belarus",id:"BY"},{name:"Belgium",id:"BE"},{name:"Belize",id:"BZ"},{name:"Benin",id:"BJ"},{name:"Bermuda",id:"BM"},{name:"Bhutan",id:"BT"},{name:"Bolivia",id:"BO"},{name:"Bosnia and Herzegovina",id:"BA"},{name:"Botswana",id:"BW"},{name:"Bouvet Island",id:"BV"},{name:"Brazil",id:"BR"},{name:"British Indian Ocean Territory",id:"IO"},{name:"Brunei Darussalam",id:"BN"},{name:"Bulgaria",id:"BG"},{name:"Burkina Faso",id:"BF"},{name:"Burundi",id:"BI"},{name:"Cambodia",id:"KH"},{name:"Cameroon",id:"CM"},{name:"Canada",id:"CA"},{name:"Cape Verde",id:"CV"},{name:"Cayman Islands",id:"KY"},{name:"Central African Republic",id:"CF"},{name:"Chad",id:"TD"},{name:"Chile",id:"CL"},{name:"China",id:"CN"},{name:"Christmas Island",id:"CX"},{name:"Cocos (Keeling) Islands",id:"CC"},{name:"Colombia",id:"CO"},{name:"Comoros",id:"KM"},{name:"Congo",id:"CG"},{name:"Congo, The Democratic Republic of the",id:"CD"},{name:"Cook Islands",id:"CK"},{name:"Costa Rica",id:"CR"},{name:"Cote D'Ivoire",id:"CI"},{name:"Croatia",id:"HR"},{name:"Cuba",id:"CU"},{name:"Cyprus",id:"CY"},{name:"Czech Republic",id:"CZ"},{name:"Denmark",id:"DK"},{name:"Djibouti",id:"DJ"},{name:"Dominica",id:"DM"},{name:"Dominican Republic",id:"DO"},{name:"Ecuador",id:"EC"},{name:"Egypt",id:"EG"},{name:"El Salvador",id:"SV"},{name:"Equatorial Guinea",id:"GQ"},{name:"Eritrea",id:"ER"},{name:"Estonia",id:"EE"},{name:"Ethiopia",id:"ET"},{name:"Falkland Islands (Malvinas)",id:"FK"},{name:"Faroe Islands",id:"FO"},{name:"Fiji",id:"FJ"},{name:"Finland",id:"FI"},{name:"France",id:"FR"},{name:"French Guiana",id:"GF"},{name:"French Polynesia",id:"PF"},{name:"French Southern Territories",id:"TF"},{name:"Gabon",id:"GA"},{name:"Gambia",id:"GM"},{name:"Georgia",id:"GE"},{name:"Germany",id:"DE"},{name:"Ghana",id:"GH"},{name:"Gibraltar",id:"GI"},{name:"Greece",id:"GR"},{name:"Greenland",id:"GL"},{name:"Grenada",id:"GD"},{name:"Guadeloupe",id:"GP"},{name:"Guam",id:"GU"},{name:"Guatemala",id:"GT"},{name:"Guernsey",id:"GG"},{name:"Guinea",id:"GN"},{name:"Guinea-Bissau",id:"GW"},{name:"Guyana",id:"GY"},{name:"Haiti",id:"HT"},{name:"Heard Island and Mcdonald Islands",id:"HM"},{name:"Holy See (Vatican City State)",id:"VA"},{name:"Honduras",id:"HN"},{name:"Hong Kong",id:"HK"},{name:"Hungary",id:"HU"},{name:"Iceland",id:"IS"},{name:"India",id:"IN"},{name:"Indonesia",id:"ID"},{name:"Iran, Islamic Republic Of",id:"IR"},{name:"Iraq",id:"IQ"},{name:"Ireland",id:"IE"},{name:"Isle of Man",id:"IM"},{name:"Israel",id:"IL"},{name:"Italy",id:"IT"},{name:"Jamaica",id:"JM"},{name:"Japan",id:"JP"},{name:"Jersey",id:"JE"},{name:"Jordan",id:"JO"},{name:"Kazakhstan",id:"KZ"},{name:"Kenya",id:"KE"},{name:"Kiribati",id:"KI"},{name:"Korea, Democratic People'S Republic of",id:"KP"},{name:"Korea, Republic of",id:"KR"},{name:"Kuwait",id:"KW"},{name:"Kyrgyzstan",id:"KG"},{name:"Lao People'S Democratic Republic",id:"LA"},{name:"Latvia",id:"LV"},{name:"Lebanon",id:"LB"},{name:"Lesotho",id:"LS"},{name:"Liberia",id:"LR"},{name:"Libyan Arab Jamahiriya",id:"LY"},{name:"Liechtenstein",id:"LI"},{name:"Lithuania",id:"LT"},{name:"Luxembourg",id:"LU"},{name:"Macao",id:"MO"},{name:"Macedonia, The Former Yugoslav Republic of",id:"MK"},{name:"Madagascar",id:"MG"},{name:"Malawi",id:"MW"},{name:"Malaysia",id:"MY"},{name:"Maldives",id:"MV"},{name:"Mali",id:"ML"},{name:"Malta",id:"MT"},{name:"Marshall Islands",id:"MH"},{name:"Martinique",id:"MQ"},{name:"Mauritania",id:"MR"},{name:"Mauritius",id:"MU"},{name:"Mayotte",id:"YT"},{name:"Mexico",id:"MX"},{name:"Micronesia, Federated States of",id:"FM"},{name:"Moldova, Republic of",id:"MD"},{name:"Monaco",id:"MC"},{name:"Mongolia",id:"MN"},{name:"Montserrat",id:"MS"},{name:"Morocco",id:"MA"},{name:"Mozambique",id:"MZ"},{name:"Myanmar",id:"MM"},{name:"Namibia",id:"NA"},{name:"Nauru",id:"NR"},{name:"Nepal",id:"NP"},{name:"Netherlands",id:"NL"},{name:"Netherlands Antilles",id:"AN"},{name:"New Caledonia",id:"NC"},{name:"New Zealand",id:"NZ"},{name:"Nicaragua",id:"NI"},{name:"Niger",id:"NE"},{name:"Nigeria",id:"NG"},{name:"Niue",id:"NU"},{name:"Norfolk Island",id:"NF"},{name:"Northern Mariana Islands",id:"MP"},{name:"Norway",id:"NO"},{name:"Oman",id:"OM"},{name:"Pakistan",id:"PK"},{name:"Palau",id:"PW"},{name:"Palestinian Territory, Occupied",id:"PS"},{name:"Panama",id:"PA"},{name:"Papua New Guinea",id:"PG"},{name:"Paraguay",id:"PY"},{name:"Peru",id:"PE"},{name:"Philippines",id:"PH"},{name:"Pitcairn",id:"PN"},{name:"Poland",id:"PL"},{name:"Portugal",id:"PT"},{name:"Puerto Rico",id:"PR"},{name:"Qatar",id:"QA"},{name:"Reunion",id:"RE"},{name:"Romania",id:"RO"},{name:"Russian Federation",id:"RU"},{name:"RWANDA",id:"RW"},{name:"Saint Helena",id:"SH"},{name:"Saint Kitts and Nevis",id:"KN"},{name:"Saint Lucia",id:"LC"},{name:"Saint Pierre and Miquelon",id:"PM"},{name:"Saint Vincent and the Grenadines",id:"VC"},{name:"Samoa",id:"WS"},{name:"San Marino",id:"SM"},{name:"Sao Tome and Principe",id:"ST"},{name:"Saudi Arabia",id:"SA"},{name:"Senegal",id:"SN"},{name:"Serbia and Montenegro",id:"CS"},{name:"Seychelles",id:"SC"},{name:"Sierra Leone",id:"SL"},{name:"Singapore",id:"SG"},{name:"Slovakia",id:"SK"},{name:"Slovenia",id:"SI"},{name:"Solomon Islands",id:"SB"},{name:"Somalia",id:"SO"},{name:"South Africa",id:"ZA"},{name:"South Georgia and the South Sandwich Islands",id:"GS"},{name:"Spain",id:"ES"},{name:"Sri Lanka",id:"LK"},{name:"Sudan",id:"SD"},{name:"Suriname",id:"SR"},{name:"Svalbard and Jan Mayen",id:"SJ"},{name:"Swaziland",id:"SZ"},{name:"Sweden",id:"SE"},{name:"Switzerland",id:"CH"},{name:"Syrian Arab Republic",id:"SY"},{name:"Taiwan, Province of China",id:"TW"},{name:"Tajikistan",id:"TJ"},{name:"Tanzania, United Republic of",id:"TZ"},{name:"Thailand",id:"TH"},{name:"Timor-Leste",id:"TL"},{name:"Togo",id:"TG"},{name:"Tokelau",id:"TK"},{name:"Tonga",id:"TO"},{name:"Trinidad and Tobago",id:"TT"},{name:"Tunisia",id:"TN"},{name:"Turkey",id:"TR"},{name:"Turkmenistan",id:"TM"},{name:"Turks and Caicos Islands",id:"TC"},{name:"Tuvalu",id:"TV"},{name:"Uganda",id:"UG"},{name:"Ukraine",id:"UA"},{name:"United Arab Emirates",id:"AE"},{name:"United Kingdom",id:"GB"},{name:"United States",id:"US"},{name:"United States Minor Outlying Islands",id:"UM"},{name:"Uruguay",id:"UY"},{name:"Uzbekistan",id:"UZ"},{name:"Vanuatu",id:"VU"},{name:"Venezuela",id:"VE"},{name:"Viet Nam",id:"VN"},{name:"Virgin Islands, British",id:"VG"},{name:"Virgin Islands, U.S.",id:"VI"},{name:"Wallis and Futuna",id:"WF"},{name:"Western Sahara",id:"EH"},{name:"Yemen",id:"YE"},{name:"Zambia",id:"ZM"},{name:"Zimbabwe",id:"ZW"}]}var o={getCountries:t,getActions:n,getMedidas:e,item:{}};return o}angular.module("ElCinaroAdmin").factory("$util",e)}(),function(){"use strict";function e(e){function n(n,t,o){var i,r;i=n.dropzone,r=new e(t[0],i.options),n.reset&&r.on("complete",function(e){r.removeFile(e)}),angular.forEach(i.eventHandlers,function(e,n){r.on(n,e)})}var t={link:n,restrict:"EA",scope:{dropzone:"=dropzone",reset:"@reset"}};return t}angular.module("ElCinaroAdmin").directive("dropzone",e),e.$inject=["Dropzone"]}(),function(){"use strict";function e(){function e(e,n,t,o){}var t={restrict:"EA",templateUrl:"assets/views/autocomplete/autocomplete.html",scope:{meta:"=",item:"=?ngModel"},link:e,controller:n,controllerAs:"vm",bindToController:!0};return t}function n(e,n,t,o){function i(){console.log("autocomplete directive"),console.log(s.meta),console.log(s.item)}function r(e){alert("Sorry! You'll need to create a Constitution for "+e+" first!")}function a(n){var t={page:1,limit:100,filter:"",order:"-id",filter:n},i={getRubros:function(){return o.getRubros(t)},getCultivos:function(){return o.getCultivos(t)},getProovedores:function(){return o.getProovedores(t)},getUnidades:function(){return o.getUnidades(t)},getProovedorCategoria:function(){return o.getProovedorCategoria(t)}};return i[s.meta.handler]().then(function(n){return e.map(n.results,function(e){return{id:e.id,nombre:e.nombre}})})}function l(e){t.info("Text changed to "+e)}function c(e){t.info("Item changed to "+JSON.stringify(e))}var s=this;s.simulateQuery=!1,s.isDisabled=!1,s.querySearch=a,s.selectedItemChange=c,s.searchTextChange=l,s.newState=r,i()}angular.module("ElCinaroAdmin").directive("autoComplete",e),n.$inject=["_","$scope","$log","$siembras"]}(),function(){"use strict";function e(){var e={restrict:"EA",controllerAs:"vm",controller:n,bindToController:!0,templateUrl:"assets/views/chips/adbChips.html",scope:{map:"=?",max:"@?",list:"=",label:"@?",click:"=?",create:"=?",filter:"=?",id:"@?adbId",disabled:"=",editable:"=",hideList:"=?",listClass:"@?",showCount:"=?",placeholder:"@?",model:"=?ngModel"}};return e}function n(e,n,t,o,i,r){function a(){u.map||(u.map={name:"name",image:"image",type:"chip"}),u.placeholder||(u.placeholder="Type here to filter"),void 0===u.listClass&&(u.listClass="fixed-rows"),void 0===u.showCount&&(u.showCount=!0),u.create&&n(document).keydown(s),void 0===u.filter&&(u.filter={}),e.isUndefined(u.model)&&(u.model=[])}function l(e){return function(n){return!u.exists(n)&&n[u.map.name].toLowerCase().indexOf(e.toLowerCase())!=-1}}function c(e,t){if(!e.length&&t.indexOf(",")!=-1){var o=u.create(t.split(",").filter(function(e){return e&&e.length}));console.log(o),angular.forEach(o,function(e){u.selectItem(e)}),n(u.input).val("")}}function s(e){e.stopPropagation(),n(u.input).is(":focus")&&13==e.which&&t.$apply(function(){var e=u.queryGiven&&u.list.length?u.list.filter(l(u.queryGiven)):[];c(e,u.queryGiven+",")})}var u=this;u.queryGiven="",u.input="#chips-"+(u.id||Date.now())+" md-autocomplete-wrap input",a(),u.querySearch=function(e){u.queryGiven=e;var n=e&&u.list.length?u.list.filter(l(e)):[];return u.create&&c(n,e),n},u.selectItem=function(n){console.log(u.model),u.editable&&u.model.push(n),e.isFunction(u.click)&&u.click(n)},u.exists=function(n){return e.findIndex(u.model,function(e){return e[u.map.name]==n[u.map.name]})>=0},u.stopPropagation=function(e){e.stopPropagation()},t.$watch("vm.list",function(e,n){console.log(e)})}angular.module("ElCinaroAdmin").directive("adbChips",e),n.$inject=["_","jQuery","$scope","$timeout","$mdConstant","$mdDialog"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/footer/footer.html",controller:n,controllerAs:"vm",bindToController:!0};return e}function n(){function e(){console.log("footer Activated")}e()}angular.module("ElCinaroAdmin").directive("footerDirective",e),n.$inject=[]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/header/header.html",controller:n,controllerAs:"vm",bindToController:!0,scope:{}};return e}function n(e,n,t){var o=this;o.logout=function(){console.log("LOGOUT"),e.logout()},t.$on("login",function(e,n){t.user||angular.copy(n,t.user),console.log("login",t.user)})}angular.module("ElCinaroAdmin").directive("headerDirective",e),n.$inject=["Auth","$scope","$rootScope"]}(),function(){"use strict";function e(e,n,t,o,i,r,a,l,c){function s(){console.log("modal controller"),console.log(c),e.meta=angular.copy(c)}function u(e,n,t){switch(e){case"clientes":return r[n](t);case"semillas":return a[n](t);case"proovedores":return l[n](t);default:return d(t)}}function d(e){var t=n.defer();return o(function(){t.resolve(e)},1e3*Math.random(),!1),t.results}e.meta={options:{}},s(),e.close=function(){i.hide()},e.handle=function(n){console.log(n),n&&i.cancel(),u(c.type,c.handler,e.meta.data).then(function(e){i.hide(e)}).catch(function(e){console.log(e)})},e.selectHandler=function(n,t,o){console.log(n,t);var i={page:1,limit:100,filter:"",order:"-id"};if(!e.meta.options[n]){var r={getRubros:function(){return a.getRubros(i)},getCultivos:function(){return a.getCultivos(i)},getProovedores:function(){return a.getProovedores(i)},getUnidades:function(){return a.getUnidades(i)},getProovedorCategoria:function(){return a.getProovedorCategoria(i)}};if(r.hasOwnProperty(t))return r[t]().then(function(t){e.meta.options[n]=_.map(t.results,function(e){return{id:e.id,name:e.nombre}})}).catch(function(e){console.log(e)})}},e.$watch("meta",function(e,n){console.log(e,n)})}angular.module("ElCinaroAdmin").controller("ModalController",e),e.$inject=["$scope","$q","$http","$timeout","$mdDialog","$pedidos","$siembras","$proovedores","payload"]}(),function(){"use strict";function e(e,n,t,o,i,r,a){function l(){console.log("action controller"),angular.copy(r.item,c.item)}var c=this;c.item={},c.data={},c.insumos=a.insumos,c.medidas=r.getMedidas(),l(),c.close=function(){c.item.touched=!0,i.hide(c.data)},c.response=function(){c.item.touched=!0,i.hide(c.data)},c.title=function(){return e.join([e.capitalize(c.item.selector),c.item.cultivo.description],": ")}}angular.module("ElCinaroAdmin").controller("ActionController",e),e.$inject=["_","$scope","$http","$q","$mdDialog","$util","$insumos"]}(),function(){"use strict";function e(e,n){function t(){}t()}angular.module("ElCinaroAdmin").controller("ActividadController",e),e.$inject=["$http","$q"]}();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5tb2R1bGUuanMiLCJhcHAuY29uc3RhbnRzLmpzIiwiYXBwLmNvbmZpZy5qcyIsImFwcC5ydW4uanMiLCJhcHAucm91dGUuanMiLCJkYXNoYm9hcmQvYWN0aXZpZGFkLmNvbnRyb2xsZXIuanMiLCJkYXNoYm9hcmQvY2xpZW50ZXMuY29udHJvbGxlci5qcyIsImRhc2hib2FyZC9jdWx0aXZvcy5jb250cm9sbGVyLmpzIiwiZGFzaGJvYXJkL2Rhc2hib2FyZC5jb250cm9sbGVyLmpzIiwiZGFzaGJvYXJkL2hvbWUuZGFzaGJvYXJkLmNvbnRyb2xsZXIuanMiLCJkYXNoYm9hcmQvbG90ZXMuY29udHJvbGxlci5qcyIsImRhc2hib2FyZC9wcm9maWxlLmNvbnRyb2xsZXIuanMiLCJkYXNoYm9hcmQvcHJvb3ZlZG9yZXMuY29udHJvbGxlci5qcyIsImRhc2hib2FyZC9zZW1pbGxhcy5jb250cm9sbGVyLmpzIiwiZGFzaGJvYXJkL3N1ZWxvcy5jb250cm9sbGVyLmpzIiwiZmlsdGVycy9mb3JtYXR0ZXIuZmlsdGVyLmpzIiwibWFpbi9ob21lLmNvbnRyb2xsZXIuanMiLCJtYWluL2xvZ2luLmNvbnRyb2xsZXIuanMiLCJtYWluL3NpZ251cC5jb250cm9sbGVyLmpzIiwib3JkZXJzKHJlZikvY2FtcGFpZ24uZGlyZWN0aXZlLmpzIiwib3JkZXJzKHJlZikvY2hlY2tvdXQuZGlyZWN0aXZlLmpzIiwib3JkZXJzKHJlZikvY3VzdG9tZXIuZGlyZWN0aXZlLmpzIiwib3JkZXJzKHJlZikvb3JkZXJzLmNvbnRyb2xsZXIuanMiLCJvcmRlcnMocmVmKS9yZXN1bWUuZGlyZWN0aXZlLmpzIiwib3JkZXJzKHJlZikvdXRpbHMuZGlzcGxheS5kaXJlY3RpdmUuanMiLCJzZXJ2aWNlcy9hY3Rpdml0eS5zZXJ2aWNlLmpzIiwic2VydmljZXMvYXV0aC5zZXJ2aWNlLmpzIiwic2VydmljZXMvZGF0YS5zZXJ2aWNlLmpzIiwic2VydmljZXMvZHJvcHpvbmUuc2VydmljZS5qcyIsInNlcnZpY2VzL2luc3Vtb3Muc2VydmljZS5qcyIsInNlcnZpY2VzL2xvY2Fsc3RvcmFnZS5zZXJ2aWNlLmpzIiwic2VydmljZXMvcGVkaWRvcy5zZXJ2aWNlLmpzIiwic2VydmljZXMvcHJvb3ZlZG9yZXMuc2VydmljZS5qcyIsInNlcnZpY2VzL3NlZ3VpbWllbnRvLnNlcnZpY2UuanMiLCJzZXJ2aWNlcy9zaWVtYnJhcy5zZXJ2aWNlLmpzIiwic2VydmljZXMvdXNlci5zZXJ2aWNlLmpzIiwic2VydmljZXMvdXRpbHMuc2VydmljZS5qcyIsInNoYXJlZC9kcm9wem9uZS5kaXJlY3RpdmUuanMiLCJjb21wb25lbnRzL2F1dG9jb21wbGV0ZS9hdXRvY29tcGxldGUuZGlyZWN0aXZlLmpzIiwiY29tcG9uZW50cy9jaGlwcy9hZGJDaGlwcy5kaXJlY3RpdmUuanMiLCJjb21wb25lbnRzL2Zvb3Rlci9mb290ZXIuZGlyZWN0aXZlLmpzIiwiY29tcG9uZW50cy9oZWFkZXIvaGVhZGVyLmRpcmVjdGl2ZS5qcyIsImNvbXBvbmVudHMvbW9kYWxzL21vZGFsLmNvbnRyb2xsZXIuanMiLCJjb21wb25lbnRzL3NlZ3VpbWllbnRvL2FjdGlvbi5jb250cm9sbGVyLmpzIiwiY29tcG9uZW50cy9zZWd1aW1pZW50by9hY3RpdmlkYWQuY29udHJvbGxlci5qcyJdLCJuYW1lcyI6WyJhbmd1bGFyIiwibW9kdWxlIiwiY29uc3RhbnQiLCJ3aW5kb3ciLCJfIiwialF1ZXJ5IiwiRHJvcHpvbmUiLCJicmFpbnRyZWUiLCJtb21lbnQiLCJjb3JzUHJvdmlkZXIiLCIkaHR0cFByb3ZpZGVyIiwiZGVmYXVsdHMiLCJ4c3JmQ29va2llTmFtZSIsInhzcmZIZWFkZXJOYW1lIiwiaGVhZGVycyIsInBvc3QiLCJtYXBzUHJvdmlkZXIiLCJ1aUdtYXBHb29nbGVNYXBBcGlQcm92aWRlciIsImNvbmZpZ3VyZSIsImtleSIsImxpYnJhcmllcyIsImljb25Qcm92aWRlciIsIiRtZEljb25Qcm92aWRlciIsImZvbnRTZXQiLCJpY29uIiwiZGF0ZVByb3ZpZGVyIiwiJG1kRGF0ZUxvY2FsZVByb3ZpZGVyIiwiZm9ybWF0RGF0ZSIsImRhdGUiLCJjb25zb2xlIiwibG9nIiwiZm9ybWF0IiwicGFyc2VEYXRlIiwiZGF0ZVN0cmluZyIsIm0iLCJpc1ZhbGlkIiwidG9EYXRlIiwiRGF0ZSIsIk5hTiIsImNvbmZpZyIsIiRtZFRoZW1pbmdQcm92aWRlciIsIiRsb2NhdGlvblByb3ZpZGVyIiwiZGVmaW5lUGFsZXR0ZSIsIjUwIiwiMTAwIiwiMjAwIiwiMzAwIiwiNDAwIiwiNTAwIiwiNjAwIiwiNzAwIiwiODAwIiwiOTAwIiwiQTEwMCIsIkEyMDAiLCJBNDAwIiwiQTcwMCIsImNvbnRyYXN0RGVmYXVsdENvbG9yIiwiY29udHJhc3REYXJrQ29sb3JzIiwidGhlbWUiLCJwcmltYXJ5UGFsZXR0ZSIsImFjY2VudFBhbGV0dGUiLCJ3YXJuUGFsZXR0ZSIsIiRpbmplY3QiLCJydW5Qcm92aWRlciIsIiRyb290U2NvcGUiLCIkc3RhdGUiLCJBdXRoIiwiaXNBdXRoZW50aWNhdGVkIiwidXNlciIsImdldFVzZXIiLCIkb24iLCJldmVudCIsInRvU3RhdGUiLCJmaWxsIiwiaW5kZXhPZiIsIm5hbWUiLCJmaXhlZCIsImF1dGhlbnRpY2F0ZSIsInByZXZlbnREZWZhdWx0IiwidHJhbnNpdGlvblRvIiwicnVuIiwicm91dGVyUHJvdmlkZXIiLCIkc3RhdGVQcm92aWRlciIsIiR1cmxSb3V0ZXJQcm92aWRlciIsInN0YXRlIiwidXJsIiwidmlld3MiLCJtYWluIiwiY29udHJvbGxlciIsImNvbnRyb2xsZXJBcyIsInRlbXBsYXRlVXJsIiwiZGFzaGJvYXJkIiwib3RoZXJ3aXNlIiwiQ29udHJvbGxlciIsIiRodHRwIiwiJHEiLCIkc2NvcGUiLCIkc2llbWJyYXMiLCJhY3RpdmF0ZSIsImdldERhdGEiLCJnZXRSdWJyb3MiLCJ2bSIsInF1ZXJ5IiwidGhlbiIsInJlc3AiLCJjYXRlZ29yaWVzIiwicmVzdWx0cyIsImNhdGNoIiwiZXJyIiwiZmluYWxseSIsImxpc3RSZWFkeSIsInRoaXMiLCJsaXN0IiwicGFnZSIsImxpbWl0Iiwib3JkZXIiLCJmaWx0ZXIiLCJkYXRhIiwiY3VsdGl2b3MiLCJydWJyb3MiLCJtYXAiLCJpbWFnZSIsImNhbmNlbCIsIiRtZERpYWxvZyIsIiRoaWRlIiwiJHdhdGNoIiwiYyIsIm8iLCIkcGVkaWRvcyIsIml0ZW0iLCJwcm9taXNlIiwiZ2V0Q2xpZW50ZXMiLCJ0b2dnbGVTZWFyY2giLCJ0aW1lb3V0Iiwic2VsZWN0ZWQiLCJ0YWJsZSIsInRpdGxlIiwic2VhcmNoIiwicGxhY2Vob2xkZXIiLCJmaWVsZHNNZXRhIiwidHlwZSIsImNsaWVudE9iamVjdCIsIm5vbWJyZSIsImFwZWxsaWRvIiwiZW1haWwiLCJpZGVudGlmaWNhdGlvbiIsImRpcmVjY2lvbiIsInRlbGVmb25vIiwibG9nSXRlbSIsInNwYXduTW9kYWwiLCJldiIsImlzTmV3Iiwic2hvdyIsInBhcmVudCIsImVsZW1lbnQiLCJkb2N1bWVudCIsImJvZHkiLCJ0YXJnZXRFdmVudCIsImNsaWNrT3V0c2lkZVRvQ2xvc2UiLCJmdWxsc2NyZWVuIiwibG9jYWxzIiwicGF5bG9hZCIsImhhbmRsZXIiLCJpc0VtcHR5IiwiaGVhZCIsImZpZWxkcyIsImFuc3dlciIsInNwYXduRGVsZXRlTW9kYWwiLCJpZCIsImNvbmZpcm0iLCJ0ZXh0Q29udGVudCIsImFyaWFMYWJlbCIsIm9rIiwiJHRpbWVvdXQiLCIkc3RhdGVQYXJhbXMiLCJkZXRhaWwiLCJnZXRJdGVtIiwiZ2V0TG90ZXMiLCJwYXJzZUludCIsInN1Y2Nlc3MiLCJnZXRDdWx0aXZvcyIsInF1ZXJ5U2VhcmNoIiwiY3JlYXRlRmlsdGVyRm9yIiwibG93ZXJjYXNlUXVlcnkiLCJsb3dlcmNhc2UiLCJfbG93ZXJuYW1lIiwiZm9ybSIsImxvdGVzIiwiaSIsInNlbWlsbGFfdXRpbGl6YWRhIiwiZGVzY3JpcGNpb24iLCJjb2RpZ28iLCJsb3dlckNhc2UiLCJsb2FkaW5nIiwic2VsZWN0ZWRJdGVtIiwic2VhcmNoVGV4dCIsInNlbGVjdGVkTG90ZXMiLCJhcmVhc1NpZW1icmEiLCJyZXNldFRhYmxlIiwiY3VycmVudCIsIm9yaWdpbmFsIiwiJHdhdGNoQ29sbGVjdGlvbiIsIkhvbWVDb250cm9sbGVyIiwiJGluc3Vtb3MiLCIkc2VndWltaWVudG8iLCIkdXRpbCIsImdldEFjdGl2aWRhZGVzIiwiZ2V0SW5zdW1vcyIsInN1Ym1pdCIsIm9ic2VydmF0aW9ucyIsImN1bHRpdm8iLCJoYXNPd25Qcm9wZXJ0eSIsImZlY2hhX2FwbGljYWNpb24iLCJjcmVhdGVBY3RpdmlkYWRlcyIsImdyb3VwQnkiLCJpbnN1bW9zIiwiZGVzY3JpcHRpb24iLCJsb3RlIiwicGxhZ3VpY2lkYSIsImZlcnRpbGl6YWNpb24iLCJyaWVnbyIsIm9ic2VydmFjaW9uZXMiLCJ0ZXh0Iiwic2VsZWN0Q3VsdGl2byIsImluZGV4IiwiZmluZEluZGV4Iiwic2VsZWN0ZWRDdWx0aXZvcyIsInNwbGljZSIsInB1c2giLCJkZXRhaWxJdGVtIiwiaW5jbHVkZXMiLCJjb3B5IiwidGVtcGxhdGUiLCJtZXJnZSIsInJlbW92ZUl0ZW0iLCJzaGlmdCIsInRvZ2dsZSIsInZhbHVlIiwiZHJhZnRPYnNlcnZhdGlvbiIsIm9wdGlvbnMiLCJkZXNtYWxlemFtaWVudG8iLCJsaW1waWV6YSIsImNvbnRlbnQiLCJzZWxlY3RlZEFjdGlvbnMiLCJhY3Rpb24iLCJzZWxlY3RvciIsImNvbmNhdCIsImFwcGx5IiwiYWN0aW9ucyIsImdldEFjdGlvbnMiLCJhbGwiLCJhZGRBY3Rpdml0eSIsInNlbGVjdGVkUnVicm9zIiwidGVtcCIsImZlY2hhX3JlYWxpemFjaW9uIiwic3RhcnRPZiIsImZvcm1hdHRlZERhdGEiLCJsZW5ndGgiLCJqb2luIiwidWlHbWFwR29vZ2xlTWFwQXBpIiwidWlHbWFwSXNSZWFkeSIsIlVzZXJTZXJ2aWNlIiwiYXV0b2NvbXBsZXRlQ291bnRyeSIsImNvdW50cmllcyIsImNhcGl0YWxpemVRdWVyeSIsImNhcGl0YWxpemUiLCJjb3VudHJ5IiwiUGxhY2VzQXV0b2NvbXBsZXRlIiwiZ2V0Q291bnRyaWVzIiwidXNlcm5hbWUiLCJiaXJ0aCIsInBsYWNlc1JlYWR5IiwiYXV0b2NvbXBsZXRlQWRkcmVzcyIsImFkZHJlc3MiLCJkZWZlcnJlZCIsImRlZmVyIiwiZ2V0UXVlcnlQcmVkaWN0aW9ucyIsImlucHV0IiwicmVzb2x2ZSIsInR5cGVzIiwidXBkYXRlUHJvZmlsZSIsImlzT2JqZWN0IiwidXBkYXRlIiwiZXJyb3IiLCIkcHJvb3ZlZG9yZXMiLCJnZXRQcm9vdmVkb3JlcyIsImNhdGVnb3JpYSIsIm1hcFZhbHVlcyIsImdldFNlbWlsbGFzIiwicHJvb3ZlZG9yIiwibml2ZWxfZ2VybWluYWNpb24iLCJmYW1pbGlhIiwidW5pZGFkIiwiY2FudGlkYWQiLCJwcmVjaW9fY29tcHJhIiwiZmVjaGFfY29tcHJhIiwiZmlsdGVyRmlsdGVyIiwicGFyYW1zIiwib3BjaW9uZXMiLCIxIiwiMiIsIjMiLCI0IiwiNSIsInNjcm9sbFRvIiwiYW5pbWF0ZSIsInNjcm9sbFRvcCIsIm9mZnNldCIsInRvcCIsImFjdGl2aWRhZGVzIiwiTG9naW5Db250cm9sbGVyIiwiYXV0aCIsImxvZ2luIiwicmVzIiwiZ28iLCJTaWdudXBDb250cm9sbGVyIiwiaXNDb25maXJtIiwiYXZhaWxhYmlsaXR5Iiwic2lnbnVwQXR0ZW1wdCIsInJlZ2lzdGVyIiwic2V0Q3JlZGVudGlhbHMiLCJoaWRlIiwiY2hlY2tDcmVkZW50YWlsc0F2YWlsYWJpbGl0eSIsImNyZWRlbnRpYWwiLCJjcmVkZW50aWFsQXZhbGlhYmlsaXR5IiwiY29tcGFyZSIsImNvbmZpcm1QYXNzd29yZCIsInBhc3N3b3JkIiwiY2xvc2UiLCJkaXJlY3RpdmUiLCJyZXN0cmljdCIsInNjb3BlIiwidG90YWwiLCJjb250cm9sIiwiYmluZFRvQ29udHJvbGxlciIsIkNhdGVnb3J5U2VydmljZSIsIm1hcHMiLCJwbGFjZXMiLCJBdXRvY29tcGxldGVTZXJ2aWNlIiwiZ2V0Q2F0ZWdvcmllcyIsIm9mZmljaWFsIiwiaW50ZXJlc3RzIiwiY2F0ZWdvcmllc1JlYWR5IiwiYXV0b2NvbXBsZXRlQ2l0aWVzIiwiYXV0b2NvbXBsZXRlU3RhdGVzIiwiYXV0b2NvbXBsZXRlQ291bnRyaWVzIiwiRGF0YVNlcnZpY2UiLCJnZXRDbGllbnRUb2tlbiIsInNldHVwR2F0ZXdheSIsImNsaWVudFRva2VuIiwidG9rZW4iLCJzZXR1cCIsInBheXBhbCIsImNvbnRhaW5lciIsInNpbmdsZVVzZSIsImFtb3VudCIsImN1cnJlbmN5IiwibG9jYWxlIiwiZW5hYmxlU2hpcHBpbmdBZGRyZXNzIiwib25QYXltZW50TWV0aG9kUmVjZWl2ZWQiLCJvYmoiLCJkb1NvbWV0aGluZ1dpdGhUaGVOb25jZSIsIm5vbmNlIiwib25SZWFkeSIsImludGVncmF0aW9uIiwiY2hlY2tvdXQiLCIkYXBwbHkiLCJhdXRob3JpemF0aW9uIiwibGF1bmNoIiwicGFyc2VGbG9hdCIsInRvRml4ZWQiLCJjcmVhdGVDYW1wYWlnbiIsIm5leHRUYWIiLCJ0YWJzIiwidmFsaWQiLCJzZWxlY3RlZFRhYiIsInNpZ251cCIsIiRtZFRvYXN0IiwiZ2V0T3B0aW9ucyIsInRhcmdldCIsImRvX21lcmdlIiwicm9sZXMiLCJtZXJnZXIiLCJhIiwiYiIsImFyZ3MiLCJmbGF0dGVuIiwib3BlbkltYWdlIiwiJGV2ZW50IiwiYWRkIiwic2hvd1ZhbGlkTm90aWZpY2F0aW9uIiwic2ltcGxlIiwicG9zaXRpb24iLCJoaWRlRGVsYXkiLCJ2YWxpZGF0ZUJhbm5lciIsImRpc3BsYXkiLCJjaGVjayIsInBpY2tCeSIsImJhbm5lciIsImlzTnVsbCIsInZhbGlkYXRlTWFwIiwibWFya2VyIiwidmFsaWRhdGVTdGVwWmVybyIsIm1lZGlhIiwidmFsaWRhdGVGb3JtIiwiaW1wcmVzc2lvbnMiLCJpbXByZXNzaW9uc1VuaXRzIiwiaW1wcmVzc2lvbnNUaW1lIiwiZGlzdGFuY2UiLCJhZ2UiLCJnZW5kZXIiLCJhY3Rpdml0aWVzIiwiY3VzdG9tZXIiLCJmaW5kIiwiY2l0eSIsImZlZSIsImRpc2NvdW50IiwibGlua0Z1bmMiLCJlbCIsImF0dHIiLCJjdHJsIiwibGluayIsImZvcm1hdEltcHJlc3Npb25zIiwiaW1wcmVzc2lvblR5cGUiLCJxdWFudGl0eSIsInRpbWUiLCJwZXJpb2QiLCJmb3JtYXRUYXJnZXQiLCJyZW5kZXIiLCJyYW5nZSIsIk9iamVjdCIsImtleXMiLCJmb3JtYXRSZXN1bWUiLCJyZXN1bWUiLCJEcm9wem9uZVNlcnZpY2UiLCJwcmVwYXJlTWFwIiwiY2VudGVyTWFwIiwibG9jYXRpb24iLCJzY3JvbGwiLCJwYW5UbyIsImdvb2dsZSIsIkxhdExuZyIsImxhdGl0dWRlIiwibG9uZ2l0dWRlIiwicGFuQnkiLCJjbGlja01hcCIsImV2ZW50TmFtZSIsIm9yaWdpbmFsRXZlbnRBcmdzIiwiZSIsImxhdCIsImxhdExuZyIsImxvbiIsImxuZyIsIm5vdyIsImJvdW5kc0NoYW5nZWQiLCJpbnN0YW5jZSIsInJlc3BvbnNlIiwicGl4ZWxPZmZzZXQiLCJTaXplIiwiY2xvc2VDbGljayIsIkRpcmVjdGlvbnNTZXJ2aWNlIiwiRGlyZWN0aW9uUmVuZGVyZXIiLCJEaXJlY3Rpb25zUmVuZGVyZXIiLCJzZXRNYXAiLCJQbGFjZXMiLCJQbGFjZXNTZXJ2aWNlIiwibWFya2VyQ29uZmlybWVkIiwidXBsb2FkaW5nIiwiY2VudGVyIiwiem9vbSIsInNjcm9sbHdoZWVsIiwibWFwTWFya2VyIiwiZGlzYWJsZURlZmF1bHRVSSIsImV2ZW50cyIsImNsaWNrIiwiaWRsZSIsImluZm8iLCJkZXNrdG9wRHJvcHpvbmUiLCJjcmVhdGUiLCJmaWxlIiwic2VjdXJlX3VybCIsIndlYnNpdGUiLCJtb2JpbGVEcm9wem9uZSIsImFwcCIsImNsaWNrTWFya2VyIiwiZ2V0UGxhY2UiLCJwbGFjZSIsImdldERldGFpbHMiLCJwbGFjZUlkIiwicGxhY2VfaWQiLCJzdGF0dXMiLCJmb3JtYXR0ZWRfYWRkcmVzcyIsImdlb21ldHJ5IiwiYWRkcmVzc19jb21wb25lbnRzIiwibG9uZ19uYW1lIiwiY29uZmlybU1hcmtlciIsImJhc2VBcGkiLCJnZXQiLCJzZXJ2aWNlIiwicmVqZWN0IiwiJHdpbmRvdyIsIiRsb2NhbHN0b3JhZ2UiLCJnZXRPYmplY3QiLCJ2YWxpZGF0ZSIsImNyZWRlbnRpYWxzIiwiJGVtaXQiLCJzZXQiLCJzZXRPYmplY3QiLCJyZXNldCIsImZvcmdvdCIsImxvZ291dCIsInJlbW92ZSIsInZpZXciLCJjdXJyZW50U3RhdGUiLCJyZWxvYWQiLCJmb3JjZSIsIkF1dGhJbnRlcmNlcHRvciIsIiRpbmplY3RvciIsInJlcXVlc3QiLCJBdXRob3JpemF0aW9uIiwicmVzcG9uc2VFcnJvciIsImZhY3RvcnkiLCJpbnRlcmNlcHRvcnMiLCJ3aXRoQ3JlZGVudGlhbHMiLCJkYXRhU2VydmljZSIsIm1ldGhvZCIsImdldENhbXBhaWducyIsInNlbmRpbmciLCJyZW1vdmVkZmlsZSIsInVwbG9hZE11bHRpcGxlIiwibWF4RmlsZXMiLCJhY2NlcHRlZEZpbGVzIiwiZGljdERlZmF1bHRNZXNzYWdlIiwiYWRkUmVtb3ZlTGlua3MiLCJpbml0Iiwib24iLCJ3aWR0aCIsIlRZUEVTIiwiaGVpZ2h0IiwicmVqZWN0RGltZW5zaW9ucyIsImFjY2VwdERpbWVuc2lvbnMiLCJhY2NlcHQiLCJkb25lIiwiZXZlbnRIYW5kbGVycyIsInhociIsImZvcm1EYXRhIiwiYXBwZW5kIiwiY3JlYXRlTXVsdGlwbGUiLCJtb2JpbGUiLCJkZXNrdG9wIiwicGFnZV9zaXplIiwib3JkZXJpbmciLCJsb2NhbFN0b3JhZ2UiLCJkZWZhdWx0VmFsdWUiLCJKU09OIiwic3RyaW5naWZ5IiwicGFyc2UiLCJ1bmRlZmluZWQiLCJjbGllbnRlcyIsInVwZGF0ZUNsaWVudGUiLCJwdXQiLCJjcmVhdGVDbGllbnRlIiwiZGVsZXRlQ2xpZW50ZSIsImRlbGV0ZSIsInVwZGF0ZVByb292ZWRvciIsImNyZWF0ZVByb292ZWRvciIsImRlbGV0ZVByb292ZWRvciIsInNlbWlsbGFzIiwiY3JlYXRlU2VtaWxsYSIsInVwZGF0ZVNlbWlsbGEiLCJnZXRVbmlkYWRlcyIsIk1hdGgiLCJyYW5kb20iLCJnZXRQcm9vdmVkb3JDYXRlZ29yaWEiLCJ1c2VySWQiLCJnZXRNZWRpZGFzIiwiZHJvcHpvbmUiLCJhdHRycyIsInpvbmUiLCJyZW1vdmVGaWxlIiwiZm9yRWFjaCIsIm1ldGEiLCIkbG9nIiwibmV3U3RhdGUiLCJhbGVydCIsInEiLCJoYW5kbGVycyIsInNlYXJjaFRleHRDaGFuZ2UiLCJzZWxlY3RlZEl0ZW1DaGFuZ2UiLCJzaW11bGF0ZVF1ZXJ5IiwiaXNEaXNhYmxlZCIsImFkYkNoaXBzIiwibWF4IiwibGFiZWwiLCJkaXNhYmxlZCIsImVkaXRhYmxlIiwiaGlkZUxpc3QiLCJsaXN0Q2xhc3MiLCJzaG93Q291bnQiLCJtb2RlbCIsIiRtZENvbnN0YW50Iiwia2V5ZG93biIsImRldGVjdEtleSIsImlzVW5kZWZpbmVkIiwiZXhpc3RzIiwidG9Mb3dlckNhc2UiLCJvYmplY3RzIiwic3BsaXQiLCJzZWxlY3RJdGVtIiwidmFsIiwic3RvcFByb3BhZ2F0aW9uIiwiaXMiLCJ3aGljaCIsInF1ZXJ5R2l2ZW4iLCJpc0Z1bmN0aW9uIiwiZm9vdGVyRGlyZWN0aXZlIiwiZm9vdGVyQ29udHJvbGxlciIsImhlYWRlckRpcmVjdGl2ZSIsImhlYWRlckNvbnRyb2xsZXIiLCJoYW5kbGUiLCJmYWtlIiwic2VsZWN0SGFuZGxlciIsIm1lZGlkYXMiLCJ0b3VjaGVkIl0sIm1hcHBpbmdzIjoiQ0FTQSxXQUNBLFlBRUFBLFNBQ0FDLE9BQUEsaUJBQ0EsWUFDQSxhQUNBLG9CQUNBLGdCQUNBLGdCQUNBLHFCQ25CQSxXQUNBLFlBRUFELFNBQ0FDLE9BQUEsaUJBQ0FDLFNBQUEsSUFBQUMsT0FBQUMsR0FDQUYsU0FBQSxTQUFBQyxPQUFBRSxRQUNBSCxTQUFBLFdBQUFDLE9BQUFHLFVBQ0FKLFNBQUEsWUFBQUMsT0FBQUksV0FDQUwsU0FBQSxTQUFBQyxPQUFBSyxRQUNBTixTQUFBLFVBQUEsNEJDVkEsdUJBWUEsU0FBQU8sR0FBQUMsR0FDQUEsRUFBQUMsU0FBQUMsZUFBQSxZQUNB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R0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxhQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxhQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxXQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSx5QkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsZ0JBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFNBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGlDQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxvQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsZUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsYUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsaUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLDJCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxPQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxtQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsMEJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFdBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFVBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFFBQ0E2RixHQUFBLE9BRUE3RixLQUFBLHdDQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxlQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxhQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxnQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsT0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsaUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFVBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFdBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFdBQ0E2RixHQUFBLE9BRUE3RixLQUFBLHFCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxjQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxvQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsOEJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGdCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxPQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxnQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsbUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLDhCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxZQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxZQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxhQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxPQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxZQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxXQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxnQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsUUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsb0NBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGdDQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxXQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxZQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxZQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSw0QkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsT0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsY0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsUUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsUUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsYUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsUUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEseUNBQ0E2RixHQUFBLE9BRUE3RixLQUFBLHFCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxhQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxtQ0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEseUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGdCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxZQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxhQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSw2Q0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsYUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsT0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsUUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsbUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGFBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGFBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFlBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFVBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFNBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGtDQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSx1QkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsYUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsYUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsUUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsUUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsY0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsdUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGdCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxjQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxZQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxPQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxpQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsMkJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFNBQ0E2RixHQUFBLE9BRUE3RixLQUFBLE9BQ0E2RixHQUFBLE9BRUE3RixLQUFBLFdBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFFBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGtDQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxtQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsT0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsY0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsY0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsUUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEscUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFNBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGVBQ0E2RixHQUFBLE9BRUE3RixLQUFBLHdCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxjQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSw0QkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsbUNBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFFBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGFBQ0E2RixHQUFBLE9BRUE3RixLQUFBLHdCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxlQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSx3QkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsYUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsZUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsWUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsa0JBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFVBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGVBQ0E2RixHQUFBLE9BRUE3RixLQUFBLCtDQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxZQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxRQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxXQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSx5QkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsWUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsU0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsY0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsdUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLDRCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxhQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSwrQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsY0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsT0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsUUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsc0JBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFVBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFNBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGVBQ0E2RixHQUFBLE9BRUE3RixLQUFBLDJCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxTQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxVQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSx1QkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsaUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLGdCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSx1Q0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsYUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsVUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsWUFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsV0FDQTZGLEdBQUEsT0FFQTdGLEtBQUEsMEJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLHVCQUNBNkYsR0FBQSxPQUVBN0YsS0FBQSxvQkFDQTZGLEdBQUEsT0FFQTdGLEtBQUEsaUJBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFFBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFNBQ0E2RixHQUFBLE9BRUE3RixLQUFBLFdBQ0E2RixHQUFBLE9BcHhCQSxHQUFBMFUsSUFDQXRPLGFBQUFBLEVBQ0FuQixXQUFBQSxFQUNBc1UsV0FBQUEsRUFDQTliLFFBR0EsT0FBQWlYLEdBWkFuZixRQUNBQyxPQUFBLGlCQUNBeWdCLFFBQUEsUUFBQUEsTUNMQSxXQUNBLFlBUUEsU0FBQXVELEdBQUEzakIsR0FXQSxRQUFBZ2EsR0FBQTFGLEVBQUFqTCxFQUFBdWEsR0FDQSxHQUFBM2hCLEdBQUE0aEIsQ0FFQTVoQixHQUFBcVMsRUFBQXFQLFNBQ0FFLEVBQUEsR0FBQTdqQixHQUFBcUosRUFBQSxHQUFBcEgsRUFBQXlNLFNBRUE0RixFQUFBaUwsT0FDQXNFLEVBQUEzQyxHQUFBLFdBQUEsU0FBQXhELEdBQ0FtRyxFQUFBQyxXQUFBcEcsS0FJQWhlLFFBQUFxa0IsUUFBQTloQixFQUFBeWYsY0FBQSxTQUFBN1gsRUFBQTNGLEdBQ0EyZixFQUFBM0MsR0FBQWhkLEVBQUEyRixLQXZCQSxHQUFBdUssSUFDQTRGLEtBQUFBLEVBQ0EzRixTQUFBLEtBQ0FDLE9BQ0FxUCxTQUFBLFlBQ0FwRSxNQUFBLFVBR0EsT0FBQW5MLEdBZkExVSxRQUNBQyxPQUFBLGlCQUNBeVUsVUFBQSxXQUFBdVAsR0FFQUEsRUFBQWxnQixTQUFBLGVDUEEsV0FDQSxZQU9BLFNBQUEyUSxLQWdCQSxRQUFBd0YsR0FBQXRGLEVBQUF1RixFQUFBQyxFQUFBQyxJQWZBLEdBQUEzRixJQUNBQyxTQUFBLEtBQ0FoUCxZQUFBLDhDQUNBaVAsT0FDQTBQLEtBQUEsSUFDQXBjLEtBQUEsYUFFQW9TLEtBQUFKLEVBQ0F6VSxXQUFBSyxFQUNBSixhQUFBLEtBQ0FxUCxrQkFBQSxFQUdBLE9BQUFMLEdBVUEsUUFBQTVPLEdBQUExRixFQUFBNkYsRUFBQXNlLEVBQUFyZSxHQWVBLFFBQUFDLEtBQ0F0RSxRQUFBQyxJQUFBLDBCQUNBRCxRQUFBQyxJQUFBd0UsRUFBQWdlLE1BQ0F6aUIsUUFBQUMsSUFBQXdFLEVBQUE0QixNQUtBLFFBQUFzYyxHQUFBbmYsR0FDQW9mLE1BQUEsbURBQUFwZixFQUFBLFdBVUEsUUFBQWlHLEdBQUFvWixHQUVBLEdBQUFuZSxJQUNBVyxLQUFBLEVBQ0FDLE1BQUEsSUFDQUUsT0FBQSxHQUNBRCxNQUFBLE1BQ0FDLE9BQUFxZCxHQUdBQyxHQUNBdGUsVUFBQSxXQUNBLE1BQUFILEdBQUFHLFVBQUFFLElBRUE4RSxZQUFBLFdBQ0EsTUFBQW5GLEdBQUFtRixZQUFBOUUsSUFFQXVMLGVBQUEsV0FDQSxNQUFBNUwsR0FBQTRMLGVBQUF2TCxJQUVBb2QsWUFBQSxXQUNBLE1BQUF6ZCxHQUFBeWQsWUFBQXBkLElBRUF1ZCxzQkFBQSxXQUNBLE1BQUE1ZCxHQUFBNGQsc0JBQUF2ZCxJQUlBLE9BQUFvZSxHQUFBcmUsRUFBQWdlLEtBQUFuYSxXQUFBM0QsS0FBQSxTQUFBQyxHQUNBLE1BQUFyRyxHQUFBcUgsSUFBQWhCLEVBQUFFLFFBQUEsU0FBQXVCLEdBQ0EsT0FDQXVDLEdBQUF2QyxFQUFBdUMsR0FDQTFCLE9BQUFiLEVBQUFhLFlBUUEsUUFBQTZiLEdBQUE3VyxHQUNBd1csRUFBQTFHLEtBQUEsbUJBQUE5UCxHQUdBLFFBQUE4VyxHQUFBM2MsR0FDQXFjLEVBQUExRyxLQUFBLG1CQUFBOEUsS0FBQUMsVUFBQTFhLElBOUVBLEdBQUE1QixHQUFBVSxJQUVBVixHQUFBd2UsZUFBQSxFQUNBeGUsRUFBQXllLFlBQUEsRUFHQXplLEVBQUFnRixZQUFBQSxFQUNBaEYsRUFBQXVlLG1CQUFBQSxFQUNBdmUsRUFBQXNlLGlCQUFBQSxFQUVBdGUsRUFBQWtlLFNBQUFBLEVBRUFyZSxJQTFDQW5HLFFBQ0FDLE9BQUEsaUJBQ0F5VSxVQUFBLGVBQUFBLEdBd0JBNU8sRUFBQS9CLFNBQUEsSUFBQSxTQUFBLE9BQUEsZ0JDN0JBLFdBQ0EsWUFNQSxTQUFBaWhCLEtBQ0EsR0FBQXRRLElBQ0FDLFNBQUEsS0FDQWpQLGFBQUEsS0FDQUQsV0FBQUssRUFDQWlQLGtCQUFBLEVBQ0FwUCxZQUFBLG1DQUNBaVAsT0FDQW5OLElBQUEsS0FDQXdkLElBQUEsS0FDQWhlLEtBQUEsSUFDQWllLE1BQUEsS0FDQXZILE1BQUEsS0FDQUksT0FBQSxLQUNBMVcsT0FBQSxLQUNBb0QsR0FBQSxVQUNBMGEsU0FBQSxJQUNBQyxTQUFBLElBQ0FDLFNBQUEsS0FDQUMsVUFBQSxLQUNBQyxVQUFBLEtBQ0E1YyxZQUFBLEtBQ0E2YyxNQUFBLGFBR0EsT0FBQTlRLEdBS0EsUUFBQTVPLEdBQUExRixFQUFBQyxFQUFBNEYsRUFBQTZFLEVBQUEyYSxFQUFBN2QsR0FRQSxRQUFBekIsS0FDQUcsRUFBQW1CLE1BQUFuQixFQUFBbUIsS0FBQTdDLEtBQUEsT0FBQThDLE1BQUEsUUFBQW1CLEtBQUEsU0FDQXZDLEVBQUFxQyxjQUFBckMsRUFBQXFDLFlBQUEsdUJBQ0FtYSxTQUFBeGMsRUFBQWdmLFlBQUFoZixFQUFBZ2YsVUFBQSxjQUNBeEMsU0FBQXhjLEVBQUFpZixZQUFBamYsRUFBQWlmLFdBQUEsR0FDQWpmLEVBQUF5WCxRQUFBMWQsRUFBQXVKLFVBQUE4YixRQUFBQyxHQUNBN0MsU0FBQXhjLEVBQUFlLFNBQUFmLEVBQUFlLFdBQ0FqSCxFQUFBd2xCLFlBQUF0ZixFQUFBa2YsU0FBQWxmLEVBQUFrZixVQTRCQSxRQUFBamEsR0FBQWhGLEdBQ0EsTUFBQSxVQUFBMkIsR0FDQSxPQUFBNUIsRUFBQXVmLE9BQUEzZCxJQUNBQSxFQUFBNUIsRUFBQW1CLElBQUE3QyxNQUFBa2hCLGNBQUFuaEIsUUFBQTRCLEVBQUF1ZixpQkFBQSxHQUlBLFFBQUEvSCxHQUFBcFgsRUFBQUosR0FDQSxJQUFBSSxFQUFBdUosUUFBQTNKLEVBQUE1QixRQUFBLE9BQUEsRUFBQSxDQUNBLEdBQUFvaEIsR0FBQXpmLEVBQUF5WCxPQUFBeFgsRUFBQXlmLE1BQUEsS0FBQTNlLE9BQUEsU0FBQTRVLEdBQ0EsTUFBQUEsSUFBQUEsRUFBQS9MLFNBRUFyTyxTQUFBQyxJQUFBaWtCLEdBQ0EvbEIsUUFBQXFrQixRQUFBMEIsRUFBQSxTQUFBL2QsR0FDQTFCLEVBQUEyZixXQUFBamUsS0FHQTNILEVBQUFpRyxFQUFBZ0wsT0FBQTRVLElBQUEsS0FJQSxRQUFBUCxHQUFBMUosR0FDQUEsRUFBQWtLLGtCQUVBOWxCLEVBQUFpRyxFQUFBZ0wsT0FBQThVLEdBQUEsV0FBQSxJQUFBbkssRUFBQW9LLE9BQ0FwZ0IsRUFBQThRLE9BQUEsV0FDQSxHQUFBcFEsR0FBQUwsRUFBQWdnQixZQUFBaGdCLEVBQUFXLEtBQUFpSixPQUFBNUosRUFBQVcsS0FBQUksT0FBQWtFLEVBQUFqRixFQUFBZ2dCLGVBQ0F2SSxHQUFBcFgsRUFBQUwsRUFBQWdnQixXQUFBLE9BckVBLEdBQUFoZ0IsR0FBQVUsSUFDQVYsR0FBQWdnQixXQUFBLEdBQ0FoZ0IsRUFBQWdMLE1BQUEsV0FBQWhMLEVBQUFtRSxJQUFBcEksS0FBQWlhLE9BQUEsOEJBQ0FuVyxJQWNBRyxFQUFBZ0YsWUFBQSxTQUFBL0UsR0FDQUQsRUFBQWdnQixXQUFBL2YsQ0FDQSxJQUFBSSxHQUFBSixHQUFBRCxFQUFBVyxLQUFBaUosT0FBQTVKLEVBQUFXLEtBQUFJLE9BQUFrRSxFQUFBaEYsTUFJQSxPQUZBRCxHQUFBeVgsUUFBQUEsRUFBQXBYLEVBQUFKLEdBRUFJLEdBR0FMLEVBQUEyZixXQUFBLFNBQUEvZCxHQUNBckcsUUFBQUMsSUFBQXdFLEVBQUFrZixPQUNBbGYsRUFBQThlLFVBQUE5ZSxFQUFBa2YsTUFBQW5YLEtBQUFuRyxHQUNBOUgsRUFBQW1tQixXQUFBamdCLEVBQUFxWCxRQUFBclgsRUFBQXFYLE1BQUF6VixJQUdBNUIsRUFBQXVmLE9BQUEsU0FBQTNkLEdBQ0EsTUFBQTlILEdBQUE4TixVQUFBNUgsRUFBQWtmLE1BQUEsU0FBQXhkLEdBQ0EsTUFBQUEsR0FBQTFCLEVBQUFtQixJQUFBN0MsT0FBQXNELEVBQUE1QixFQUFBbUIsSUFBQTdDLFNBQ0EsR0FHQTBCLEVBQUE2ZixnQkFBQSxTQUFBbEssR0FDQUEsRUFBQWtLLG1CQW1DQWxnQixFQUFBNkIsT0FBQSxVQUFBLFNBQUFDLEVBQUFDLEdBQ0FuRyxRQUFBQyxJQUFBaUcsS0E5R0EvSCxRQUNBQyxPQUFBLGlCQUNBeVUsVUFBQSxXQUFBc1EsR0E4QkFsZixFQUFBL0IsU0FBQSxJQUFBLFNBQUEsU0FBQSxXQUFBLGNBQUEsZ0JDbkNBLFdBQ0EsWUFPQSxTQUFBeWlCLEtBQ0EsR0FBQTlSLElBQ0FDLFNBQUEsS0FDQWhQLFlBQUEsa0NBQ0FGLFdBQUFnaEIsRUFDQS9nQixhQUFBLEtBQ0FxUCxrQkFBQSxFQUdBLE9BQUFMLEdBTUEsUUFBQStSLEtBS0EsUUFBQXRnQixLQUNBdEUsUUFBQUMsSUFBQSxvQkFIQXFFLElBdkJBbkcsUUFDQUMsT0FBQSxpQkFDQXlVLFVBQUEsa0JBQUE4UixHQWVBQyxFQUFBMWlCLGNDcEJBLFdBQ0EsWUFPQSxTQUFBMmlCLEtBQ0EsR0FBQWhTLElBQ0FDLFNBQUEsS0FDQWhQLFlBQUEsa0NBQ0FGLFdBQUFraEIsRUFDQWpoQixhQUFBLEtBQ0FxUCxrQkFBQSxFQUNBSCxTQUdBLE9BQUFGLEdBTUEsUUFBQWlTLEdBQUF4aUIsRUFBQThCLEVBQUFoQyxHQUNBLEdBQUFxQyxHQUFBVSxJQVFBVixHQUFBeVosT0FBQSxXQUNBbGUsUUFBQUMsSUFBQSxVQUNBcUMsRUFBQTRiLFVBSUE5YixFQUFBTSxJQUFBLFFBQUEsU0FBQUMsRUFBQUgsR0FDQUosRUFBQUksTUFDQXJFLFFBQUF3TyxLQUFBbkssRUFBQUosRUFBQUksTUFFQXhDLFFBQUFDLElBQUEsUUFBQW1DLEVBQUFJLFFBeENBckUsUUFDQUMsT0FBQSxpQkFDQXlVLFVBQUEsa0JBQUFnUyxHQWdCQUMsRUFBQTVpQixTQUFBLE9BQUEsU0FBQSxpQkNyQkEsV0FDQSxZQVNBLFNBQUErQixHQUFBRyxFQUFBRCxFQUFBRCxFQUFBK0UsRUFBQWxELEVBQUFLLEVBQUEvQixFQUFBMkwsRUFBQTNILEdBV0EsUUFBQS9ELEtBQ0F0RSxRQUFBQyxJQUFBLG9CQUNBRCxRQUFBQyxJQUFBb0ksR0FDQWpFLEVBQUFxZSxLQUFBdGtCLFFBQUF3TyxLQUFBdEUsR0F1RkEsUUFBQTBjLEdBQUEvZCxFQUFBc0IsRUFBQTdDLEdBQ0EsT0FBQXVCLEdBQ0EsSUFBQSxXQUNBLE1BQUFaLEdBQUFrQyxHQUFBN0MsRUFFQSxLQUFBLFdBQ0EsTUFBQXBCLEdBQUFpRSxHQUFBN0MsRUFFQSxLQUFBLGNBQ0EsTUFBQXVLLEdBQUExSCxHQUFBN0MsRUFFQSxTQUNBLE1BQUF1ZixHQUFBdmYsSUFJQSxRQUFBdWYsR0FBQXZmLEdBQ0EsR0FBQTZKLEdBQUFuTCxFQUFBb0wsT0FLQSxPQUpBdEcsR0FBQSxXQUNBcUcsRUFBQUksUUFBQWpLLElBQ0EsSUFBQXNjLEtBQUFDLFVBQUEsR0FFQTFTLEVBQUF4SyxRQXZIQVYsRUFBQXFlLE1BQ0F0VixZQUlBN0ksSUFRQUYsRUFBQXdPLE1BQUEsV0FDQTdNLEVBQUFzTSxRQUdBak8sRUFBQTJnQixPQUFBLFNBQUFqZixHQUNBOUYsUUFBQUMsSUFBQTZGLEdBRUFBLEdBQ0FDLEVBQUFELFNBR0FpZixFQUFBMWMsRUFBQXJCLEtBQUFxQixFQUFBQyxRQUFBbEUsRUFBQXFlLEtBQUFoZCxNQUNBZCxLQUFBLFNBQUFDLEdBQ0FtQixFQUFBc00sS0FBQXpOLEtBRUFHLE1BQUEsU0FBQUMsR0FDQWhGLFFBQUFDLElBQUErRSxNQUtBWixFQUFBNmdCLGNBQUEsU0FBQWxpQixFQUFBaUUsRUFBQXBCLEdBQ0E1RixRQUFBQyxJQUFBOEMsRUFBQWlFLEVBRUEsSUFBQXRDLElBQ0FXLEtBQUEsRUFDQUMsTUFBQSxJQUNBRSxPQUFBLEdBQ0FELE1BQUEsTUFHQSxLQUFBbkIsRUFBQXFlLEtBQUEsUUFBQTFmLEdBQUEsQ0FFQSxHQUFBK2YsSUFDQXRlLFVBQUEsV0FDQSxNQUFBSCxHQUFBRyxVQUFBRSxJQUVBOEUsWUFBQSxXQUNBLE1BQUFuRixHQUFBbUYsWUFBQTlFLElBRUF1TCxlQUFBLFdBQ0EsTUFBQTVMLEdBQUE0TCxlQUFBdkwsSUFFQW9kLFlBQUEsV0FDQSxNQUFBemQsR0FBQXlkLFlBQUFwZCxJQUVBdWQsc0JBQUEsV0FDQSxNQUFBNWQsR0FBQTRkLHNCQUFBdmQsSUFJQSxJQUFBb2UsRUFBQXZYLGVBQUF2RSxHQUVBLE1BQUE4YixHQUFBOWIsS0FDQXJDLEtBQUEsU0FBQUMsR0FFQVIsRUFBQXFlLEtBQUEsUUFBQTFmLEdBQUF4RSxFQUFBcUgsSUFBQWhCLEVBQUFFLFFBQUEsU0FBQWtGLEdBQ0EsT0FDQXBCLEdBQUFvQixFQUFBcEIsR0FDQTdGLEtBQUFpSCxFQUFBOUMsWUFjQW5DLE1BQUEsU0FBQUMsR0FDQWhGLFFBQUFDLElBQUErRSxPQUtBWixFQUFBNkIsT0FBQSxPQUFBLFNBQUFFLEVBQUFELEdBQ0FsRyxRQUFBQyxJQUFBa0csRUFBQUQsS0F4R0EvSCxRQUNBQyxPQUFBLGlCQUNBd0YsV0FBQSxrQkFBQUssR0FFQUEsRUFBQS9CLFNBQUEsU0FBQSxLQUFBLFFBQUEsV0FBQSxZQUFBLFdBQUEsWUFBQSxlQUFBLGNDUEEsV0FDQSxZQVNBLFNBQUErQixHQUFBMUYsRUFBQTZGLEVBQUFGLEVBQUFDLEVBQUE0QixFQUFBa0YsRUFBQUYsR0FTQSxRQUFBekcsS0FDQXRFLFFBQUFDLElBQUEscUJBQ0E5QixRQUFBd08sS0FBQTFCLEVBQUE1RSxLQUFBNUIsRUFBQTRCLE1BVkEsR0FBQTVCLEdBQUFVLElBRUFWLEdBQUE0QixRQUNBNUIsRUFBQWdCLFFBQ0FoQixFQUFBa0gsUUFBQVosRUFBQVksUUFDQWxILEVBQUF5Z0IsUUFBQWphLEVBQUFrWCxhQUNBN2QsSUFPQUcsRUFBQW1PLE1BQUEsV0FDQW5PLEVBQUE0QixLQUFBOGUsU0FBQSxFQUNBcGYsRUFBQXNNLEtBQUE1TixFQUFBZ0IsT0FHQWhCLEVBQUFtVyxTQUFBLFdBQ0FuVyxFQUFBNEIsS0FBQThlLFNBQUEsRUFDQXBmLEVBQUFzTSxLQUFBNU4sRUFBQWdCLE9BR0FoQixFQUFBbUMsTUFBQSxXQUNBLE1BQUFySSxHQUFBK1AsTUFBQS9QLEVBQUFzUSxXQUFBcEssRUFBQTRCLEtBQUFvSCxVQUFBaEosRUFBQTRCLEtBQUFpRixRQUFBTSxhQUFBLE9BaENBek4sUUFDQUMsT0FBQSxpQkFDQXdGLFdBQUEsbUJBQUFLLEdBRUFBLEVBQUEvQixTQUFBLElBQUEsU0FBQSxRQUFBLEtBQUEsWUFBQSxRQUFBLGVDUEEsV0FDQSxZQVNBLFNBQUErQixHQUFBQyxFQUFBQyxHQUtBLFFBQUFHLE1BRkFBLElBVkFuRyxRQUNBQyxPQUFBLGlCQUNBd0YsV0FBQSxzQkFBQUssR0FFQUEsRUFBQS9CLFNBQUEsUUFBQSIsImZpbGUiOiJhcHAuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBuZ2RvYyBvdmVydmlld1xuICogQG5hbWUgRWxDaW5hcm9BZG1pblxuICogQHJlcXVpcmVzIHVpLnJvdXRlclxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogQW5ndWxhckpTIGJhc2ljIGFwcCB0ZW1wbGF0ZVxuICpcbiAqL1xuKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nLCBbXG4gICAgICAndWkucm91dGVyJyxcbiAgICAgICduZ01hdGVyaWFsJyxcbiAgICAgICd1aUdtYXBnb29nbGUtbWFwcycsXG4gICAgICAnbWQuZGF0YS50YWJsZScsXG4gICAgICAnYW5ndWxhck1vbWVudCcsXG4gICAgICAnbW9tZW50LXBpY2tlcidcbiAgICBdKTtcblxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuY29uc3RhbnQoJ18nLCB3aW5kb3cuXylcbiAgICAuY29uc3RhbnQoJ2pRdWVyeScsIHdpbmRvdy5qUXVlcnkpXG4gICAgLmNvbnN0YW50KCdEcm9wem9uZScsIHdpbmRvdy5Ecm9wem9uZSlcbiAgICAuY29uc3RhbnQoJ2JyYWludHJlZScsIHdpbmRvdy5icmFpbnRyZWUpXG4gICAgLmNvbnN0YW50KCdtb21lbnQnLCB3aW5kb3cubW9tZW50KVxuICAgIC5jb25zdGFudCgnYmFzZUFwaScsICdodHRwOi8vbG9jYWxob3N0OjgwMDAnKTtcbiAgICAvLy5jb25zdGFudCgnYmFzZUFwaScsICdodHRwczovL2VsY2luYXJvLWJhY2tlbmQuaGVyb2t1YXBwLmNvbScpO1xufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmNvbmZpZyhjb25maWcpXG4gICAgLmNvbmZpZyhjb3JzUHJvdmlkZXIpXG4gICAgLmNvbmZpZyhpY29uUHJvdmlkZXIpXG4gICAgLmNvbmZpZyhtYXBzUHJvdmlkZXIpXG4gICAgLmNvbmZpZyhkYXRlUHJvdmlkZXIpO1xuXG4gIGNvcnNQcm92aWRlci4kaW5qZWN0ID0gWyckaHR0cFByb3ZpZGVyJ107XG5cbiAgZnVuY3Rpb24gY29yc1Byb3ZpZGVyKCRodHRwUHJvdmlkZXIpIHtcbiAgICAkaHR0cFByb3ZpZGVyLmRlZmF1bHRzLnhzcmZDb29raWVOYW1lID0gJ2NzcmZ0b2tlbic7XG4gICAgJGh0dHBQcm92aWRlci5kZWZhdWx0cy54c3JmSGVhZGVyTmFtZSA9ICdYLUNTUkZUb2tlbic7XG4gICAgJGh0dHBQcm92aWRlci5kZWZhdWx0cy5oZWFkZXJzLnBvc3RbJ0NvbnRlbnQtVHlwZSddID0gJ2FwcGxpY2F0aW9uL2pzb24nO1xuICB9XG5cbiAgbWFwc1Byb3ZpZGVyLiRpbmplY3QgPSBbJ3VpR21hcEdvb2dsZU1hcEFwaVByb3ZpZGVyJ107XG5cbiAgZnVuY3Rpb24gbWFwc1Byb3ZpZGVyKHVpR21hcEdvb2dsZU1hcEFwaVByb3ZpZGVyKSB7XG4gICAgdWlHbWFwR29vZ2xlTWFwQXBpUHJvdmlkZXIuY29uZmlndXJlKHtcbiAgICAgIGtleTogJ0FJemFTeUFvbkZ1Q0RiN0hqWFV6MHVvY0tiRUdVSno5MUlMOUVWcycsIC8vYWRiLXNpdGUtMCBrZXlcbiAgICAgIC8vIGtleTogJ0FJemFTeUFsVzZodW43VndwRlB2MGZ4X0tPVWg1MmwwOEJScGpZTScsXG4gICAgICBsaWJyYXJpZXM6ICdwbGFjZXMnXG4gICAgfSk7XG4gIH1cblxuICBpY29uUHJvdmlkZXIuJGluamVjdCA9IFsnJG1kSWNvblByb3ZpZGVyJ107XG5cbiAgZnVuY3Rpb24gaWNvblByb3ZpZGVyKCRtZEljb25Qcm92aWRlcikge1xuICAgIC8vIENvbmZpZ3VyZSBVUkxzIGZvciBpY29ucyBzcGVjaWZpZWQgYnkgW3NldDpdaWQuXG4gICAgJG1kSWNvblByb3ZpZGVyXG4gICAgICAuZm9udFNldCgnZmFybScsICdmYXJtLWljb25zJykgLy8gVGhpcyBzZXRzIG91ciBkZWZhdWx0IGZvbnRzZXQgY2xhc3NOYW1lLlxuICAgICAgLmljb24oJ2NvbXBvc3QnLCAnYXNzZXRzL2ltYWdlcy9pY29ucy9pY29uLWNvbXBvc3Quc3ZnJykgLy8gUmVnaXN0ZXIgYSBzcGVjaWZpYyBpY29uIChieSBuYW1lKVxuICAgICAgLmljb24oJ3NwYWRlJywgJ2Fzc2V0cy9pbWFnZXMvaWNvbnMvaWNvbi1zcGFkZS5zdmcnKTsgLy8gUmVnaXN0ZXIgaWNvbiBpbiBhIHNwZWNpZmljIHNldFxuICB9XG5cbiAgZGF0ZVByb3ZpZGVyLiRpbmplY3QgPSBbJyRtZERhdGVMb2NhbGVQcm92aWRlciddXG5cbiAgZnVuY3Rpb24gZGF0ZVByb3ZpZGVyKCRtZERhdGVMb2NhbGVQcm92aWRlcikge1xuICAgICRtZERhdGVMb2NhbGVQcm92aWRlci5mb3JtYXREYXRlID0gZnVuY3Rpb24oZGF0ZSkge1xuICAgICAgY29uc29sZS5sb2coZGF0ZSk7XG4gICAgICByZXR1cm4gbW9tZW50KGRhdGUpXG4gICAgICAgIC5mb3JtYXQoJ1lZWVktTU0tREQnKTtcbiAgICB9O1xuXG4gICAgJG1kRGF0ZUxvY2FsZVByb3ZpZGVyLnBhcnNlRGF0ZSA9IGZ1bmN0aW9uKGRhdGVTdHJpbmcpIHtcbiAgICAgIHZhciBtID0gbW9tZW50KGRhdGVTdHJpbmcsICdERC1NTS1ZWVlZJywgdHJ1ZSk7XG4gICAgICBjb25zb2xlLmxvZyhtKTtcbiAgICAgIHJldHVybiBtLmlzVmFsaWQoKSA/IG0udG9EYXRlKCkgOiBuZXcgRGF0ZShOYU4pO1xuICAgIH07XG4gIH1cblxuXG4gIGZ1bmN0aW9uIGNvbmZpZygkbWRUaGVtaW5nUHJvdmlkZXIsICRsb2NhdGlvblByb3ZpZGVyKSB7XG5cbiAgICAkbWRUaGVtaW5nUHJvdmlkZXIuZGVmaW5lUGFsZXR0ZSgncHJpbWFyeScsIHtcbiAgICAgICc1MCc6ICcjM2VhMzRjJyxcbiAgICAgICcxMDAnOiAnIzM3OTE0MycsXG4gICAgICAnMjAwJzogJyMzMDdlM2InLFxuICAgICAgJzMwMCc6ICcjMjk2YzMyJyxcbiAgICAgICc0MDAnOiAnIzIyNTkyYScsXG4gICAgICAnNTAwJzogJzFCNDcyMScsXG4gICAgICAnNjAwJzogJyMxNDM1MTgnLFxuICAgICAgJzcwMCc6ICcjMGQyMjEwJyxcbiAgICAgICc4MDAnOiAnIzA2MTAwNycsXG4gICAgICAnOTAwJzogJyMwMDAwMDAnLFxuICAgICAgJ0ExMDAnOiAnIzQ1YjY1NScsXG4gICAgICAnQTIwMCc6ICcjNTZiZjY0JyxcbiAgICAgICdBNDAwJzogJyM2OGM2NzUnLFxuICAgICAgJ0E3MDAnOiAnIzAwMDAwMCcsXG4gICAgICAnY29udHJhc3REZWZhdWx0Q29sb3InOiAnbGlnaHQnLFxuICAgICAgJ2NvbnRyYXN0RGFya0NvbG9ycyc6ICc1MCAxMDAgMjAwIEExMDAgQTIwMCdcbiAgICB9KTtcbiAgICAkbWRUaGVtaW5nUHJvdmlkZXIuZGVmaW5lUGFsZXR0ZSgnYWNjZW50Jywge1xuICAgICAgJzUwJzogJyMxYzMyMTYnLFxuICAgICAgJzEwMCc6ICcjMjU0NDFkJyxcbiAgICAgICcyMDAnOiAnIzJmNTYyNScsXG4gICAgICAnMzAwJzogJyMzOTY4MmQnLFxuICAgICAgJzQwMCc6ICcjNDI3OTM1JyxcbiAgICAgICc1MDAnOiAnIzRjOGIzYycsXG4gICAgICAnNjAwJzogJyM2MGFmNGMnLFxuICAgICAgJzcwMCc6ICcjNmViODVjJyxcbiAgICAgICc4MDAnOiAnIzdlYzA2ZCcsXG4gICAgICAnOTAwJzogJyM4ZWM4N2YnLFxuICAgICAgJ0ExMDAnOiAnIzYwYWY0YycsXG4gICAgICAnQTIwMCc6ICc1NjlENDQnLFxuICAgICAgJ0E0MDAnOiAnIzRjOGIzYycsXG4gICAgICAnQTcwMCc6ICcjOWVjZjkxJyxcbiAgICAgICdjb250cmFzdERlZmF1bHRDb2xvcic6ICdsaWdodCcsXG4gICAgICAnY29udHJhc3REYXJrQ29sb3JzJzogJzUwIDEwMCAyMDAgMzAwIEExMDAgQTIwMCdcbiAgICB9KTtcbiAgICAkbWRUaGVtaW5nUHJvdmlkZXIuZGVmaW5lUGFsZXR0ZSgnd2FybicsIHtcbiAgICAgICc1MCc6ICcjZmJjYmEzJyxcbiAgICAgICcxMDAnOiAnI2ZhYmQ4YicsXG4gICAgICAnMjAwJzogJyNmOWFmNzInLFxuICAgICAgJzMwMCc6ICcjZjhhMTVhJyxcbiAgICAgICc0MDAnOiAnI2Y3OTM0MScsXG4gICAgICAnNTAwJzogJ0Y2ODUyOScsXG4gICAgICAnNjAwJzogJyNmNTc3MTEnLFxuICAgICAgJzcwMCc6ICcjZTI2YjBhJyxcbiAgICAgICc4MDAnOiAnI2NhNWYwOScsXG4gICAgICAnOTAwJzogJyNiMjU0MDcnLFxuICAgICAgJ0ExMDAnOiAnI2ZjZDliYycsXG4gICAgICAnQTIwMCc6ICcjZmRlN2Q0JyxcbiAgICAgICdBNDAwJzogJyNmZWY1ZWQnLFxuICAgICAgJ0E3MDAnOiAnIzk5NDgwNicsXG4gICAgICAnY29udHJhc3REZWZhdWx0Q29sb3InOiAnbGlnaHQnLFxuICAgICAgJ2NvbnRyYXN0RGFya0NvbG9ycyc6ICc1MCAxMDAgMjAwIDMwMCBBMTAwIEEyMDAnXG4gICAgfSk7XG4gICAgJG1kVGhlbWluZ1Byb3ZpZGVyLnRoZW1lKCdkZWZhdWx0JylcbiAgICAgIC5wcmltYXJ5UGFsZXR0ZSgncHJpbWFyeScpXG4gICAgICAuYWNjZW50UGFsZXR0ZSgnYWNjZW50JylcbiAgICAgIC53YXJuUGFsZXR0ZSgnd2FybicpO1xuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5ydW4ocnVuUHJvdmlkZXIpO1xuXG4gIHJ1blByb3ZpZGVyLiRpbmplY3QgPSBbJyRyb290U2NvcGUnLCAnJHN0YXRlJywgJ0F1dGgnXTtcblxuICBmdW5jdGlvbiBydW5Qcm92aWRlcigkcm9vdFNjb3BlLCAkc3RhdGUsIEF1dGgpIHtcbiAgICAkcm9vdFNjb3BlLiRzdGF0ZSA9ICRzdGF0ZTtcblxuICAgIGNvbnNvbGUubG9nKCdpcyBhdXRoZW50aWNhdGVkJywgQXV0aC5pc0F1dGhlbnRpY2F0ZWQoKSk7XG5cbiAgICBpZiAoQXV0aC5pc0F1dGhlbnRpY2F0ZWQoKSkgJHJvb3RTY29wZS51c2VyID0gQXV0aC5nZXRVc2VyKCk7XG5cbiAgICAkcm9vdFNjb3BlLiRvbignJHN0YXRlQ2hhbmdlU3RhcnQnLCBmdW5jdGlvbihldmVudCwgdG9TdGF0ZSkge1xuICAgICAgJHJvb3RTY29wZS5maWxsID0gWydsb2dpbiddLmluZGV4T2YodG9TdGF0ZS5uYW1lKSAhPT0gLTE7XG4gICAgICAkcm9vdFNjb3BlLmZpeGVkID0gWydkYXNoYm9hcmQnLCAnZGFzaGJvYXJkLnByb2ZpbGUnXS5pbmRleE9mKHRvU3RhdGUubmFtZSkgIT09IC0xO1xuXG4gICAgICAvKipcbiAgICAgICAqIGlmIHRoZSBzdGF0ZSByZXF1aXJlcyBhdXRoZW50aWNhdGlvbiBhbmQgdGhlXG4gICAgICAgKiB1c2VyIGlzIG5vdCBsb2dnZWQgaW4sIHJlZGlyZWN0IHRvIHRoZSBsb2dpbiBwYWdlLlxuICAgICAgICovXG4gICAgICBpZiAodG9TdGF0ZS5hdXRoZW50aWNhdGUgJiYgIUF1dGguaXNBdXRoZW50aWNhdGVkKCkpIHtcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcbiAgICAgICAgJHN0YXRlLnRyYW5zaXRpb25UbygnbG9naW4nKTtcbiAgICAgIH1cblxuICAgICAgLyoqXG4gICAgICAgKiBpZiB0aGUgc3RhdGUgZG9lc250IHJlcXVpcmUgYXV0aGVudGljYXRpb24gYW5kIHRoZSB1c2VyIGlzXG4gICAgICAgKiBsb2dnZWQgaW4sIHJlZGlyZWN0IHRvIGRhc2hib2FyZFxuICAgICAgICovXG5cbiAgICAgIGlmKCF0b1N0YXRlLmF1dGhlbnRpY2F0ZSAmJiBBdXRoLmlzQXV0aGVudGljYXRlZCgpKSB7XG4gICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICRzdGF0ZS50cmFuc2l0aW9uVG8oJ2Rhc2hib2FyZCcpO1xuICAgICAgfVxuXG4gICAgfSk7XG4gIH1cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmNvbmZpZyhyb3V0ZXJQcm92aWRlcik7XG5cbiAgcm91dGVyUHJvdmlkZXIuJGluamVjdCA9IFsnJHN0YXRlUHJvdmlkZXInLCAnJHVybFJvdXRlclByb3ZpZGVyJywgJyRsb2NhdGlvblByb3ZpZGVyJ107XG5cbiAgZnVuY3Rpb24gcm91dGVyUHJvdmlkZXIoJHN0YXRlUHJvdmlkZXIsICR1cmxSb3V0ZXJQcm92aWRlciwgJGxvY2F0aW9uUHJvdmlkZXIpIHtcbiAgICAvLyAkbG9jYXRpb25Qcm92aWRlci5odG1sNU1vZGUoe1xuICAgIC8vICAgZW5hYmxlZDogZmFsc2UsXG4gICAgLy8gICByZXF1aXJlQmFzZTogZmFsc2VcbiAgICAvLyB9KTtcbiAgICAvL1xuICAgICRzdGF0ZVByb3ZpZGVyXG4gICAgICAuc3RhdGUoJ2hvbWUnLCB7XG4gICAgICAgIHVybDogJy8nLFxuICAgICAgICB2aWV3czoge1xuICAgICAgICAgICdtYWluJzoge1xuICAgICAgICAgICAgY29udHJvbGxlcjogJ0hvbWVDb250cm9sbGVyJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL2hvbWUuaHRtbCdcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGF1dGhlbnRpY2F0ZTogZmFsc2VcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2Rhc2hib2FyZCcsIHtcbiAgICAgICAgdXJsOiAnL2Rhc2hib2FyZCcsXG4gICAgICAgIHZpZXdzOiB7XG4gICAgICAgICAgJ21haW4nOiB7XG4gICAgICAgICAgICBjb250cm9sbGVyOiAnRGFzaGJvYXJkQ29udHJvbGxlcicsXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2Fzc2V0cy92aWV3cy9kYXNoYm9hcmQvaW5kZXguaHRtbCdcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGF1dGhlbnRpY2F0ZTogdHJ1ZVxuICAgICAgfSlcbiAgICAgIC5zdGF0ZSgnZGFzaGJvYXJkLnByb2ZpbGUnLCB7XG4gICAgICAgIHVybDogJy9wcm9maWxlJyxcbiAgICAgICAgdmlld3M6IHtcbiAgICAgICAgICAnZGFzaGJvYXJkJzoge1xuICAgICAgICAgICAgY29udHJvbGxlcjogJ1Byb2ZpbGVDb250cm9sbGVyJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL2Rhc2hib2FyZC9wcm9maWxlLmh0bWwnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhdXRoZW50aWNhdGU6IGZhbHNlXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdkYXNoYm9hcmQuaG9tZScsIHtcbiAgICAgICAgdXJsOiAnL2hvbWUvJyxcbiAgICAgICAgdmlld3M6IHtcbiAgICAgICAgICAnZGFzaGJvYXJkJzoge1xuICAgICAgICAgICAgY29udHJvbGxlcjogJ0hvbWVEYXNoYm9hcmRDb250cm9sbGVyJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL2Rhc2hib2FyZC9ob21lLmh0bWwnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhdXRoZW50aWNhdGU6IHRydWVcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2Rhc2hib2FyZC5hY3RpdmlkYWRlcycsIHtcbiAgICAgICAgdXJsOiAnL2FjdGl2aWRhZGVzLycsXG4gICAgICAgIHZpZXdzOiB7XG4gICAgICAgICAgJ2Rhc2hib2FyZCc6IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdBY3RpdmlkYWRDb250cm9sbGVyJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL3NlZ3VpbWllbnRvL2FjdGl2aWRhZC50bXBsLmh0bWwnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhdXRoZW50aWNhdGU6IHRydWVcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2Rhc2hib2FyZC5ydWJyb3MnLCB7XG4gICAgICAgIHVybDogJy9ydWJyb3MvOmlkJyxcbiAgICAgICAgdmlld3M6IHtcbiAgICAgICAgICAnZGFzaGJvYXJkJzoge1xuICAgICAgICAgICAgY29udHJvbGxlcjogJ1NlbWlsbGFzQ29udHJvbGxlcicsXG4gICAgICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXG4gICAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2Fzc2V0cy92aWV3cy9kYXNoYm9hcmQvcnVicm9zLmh0bWwnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhdXRoZW50aWNhdGU6IHRydWVcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2Rhc2hib2FyZC5jdWx0aXZvcycsIHtcbiAgICAgICAgdXJsOiAnL2N1bHRpdm9zLzppZCcsXG4gICAgICAgIHZpZXdzOiB7XG4gICAgICAgICAgJ2Rhc2hib2FyZCc6IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdDdWx0aXZvc0NvbnRyb2xsZXInLFxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3MvZGFzaGJvYXJkL2N1bHRpdm9zLmh0bWwnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhdXRoZW50aWNhdGU6IHRydWVcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2Rhc2hib2FyZC5zZW1pbGxhcycsIHtcbiAgICAgICAgdXJsOiAnL3NlbWlsbGFzLzppZCcsXG4gICAgICAgIHZpZXdzOiB7XG4gICAgICAgICAgJ2Rhc2hib2FyZCc6IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdTZW1pbGxhc0NvbnRyb2xsZXInLFxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3MvZGFzaGJvYXJkL3NlbWlsbGFzLmh0bWwnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhdXRoZW50aWNhdGU6IHRydWVcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2Rhc2hib2FyZC5sb3RlcycsIHtcbiAgICAgICAgdXJsOiAnL2xvdGVzLzppZCcsXG4gICAgICAgIHZpZXdzOiB7XG4gICAgICAgICAgJ2Rhc2hib2FyZCc6IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdMb3Rlc0NvbnRyb2xsZXInLFxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3MvZGFzaGJvYXJkL2xvdGVzLmh0bWwnXG4gICAgICAgICAgfVxuICAgICAgICB9LFxuICAgICAgICBhdXRoZW50aWNhdGU6IHRydWVcbiAgICAgIH0pXG4gICAgICAuc3RhdGUoJ2Rhc2hib2FyZC5zdWVsb3MnLCB7XG4gICAgICAgIHVybDogJy9zdWVsb3MvOmlkJyxcbiAgICAgICAgdmlld3M6IHtcbiAgICAgICAgICAnZGFzaGJvYXJkJzoge1xuICAgICAgICAgICAgY29udHJvbGxlcjogJ1N1ZWxvc0NvbnRyb2xsZXInLFxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3MvZGFzaGJvYXJkL3N1ZWxvcy5odG1sJ1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXV0aGVudGljYXRlOiB0cnVlXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdkYXNoYm9hcmQuY2xpZW50ZXMnLCB7XG4gICAgICAgIHVybDogJy9jbGllbnRlcy86aWQnLFxuICAgICAgICB2aWV3czoge1xuICAgICAgICAgICdkYXNoYm9hcmQnOiB7XG4gICAgICAgICAgICBjb250cm9sbGVyOiAnQ2xpZW50ZXNDb250cm9sbGVyJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL2Rhc2hib2FyZC9jbGllbnRlcy5odG1sJ1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXV0aGVudGljYXRlOiB0cnVlXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdkYXNoYm9hcmQucHJvb3ZlZG9yZXMnLCB7XG4gICAgICAgIHVybDogJy9wcm9vdmVkb3Jlcy86aWQnLFxuICAgICAgICB2aWV3czoge1xuICAgICAgICAgICdkYXNoYm9hcmQnOiB7XG4gICAgICAgICAgICBjb250cm9sbGVyOiAnUHJvb3ZlZG9yZXNDb250cm9sbGVyJyxcbiAgICAgICAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL2Rhc2hib2FyZC9wcm9vdmVkb3Jlcy5odG1sJ1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgYXV0aGVudGljYXRlOiB0cnVlXG4gICAgICB9KVxuICAgICAgLnN0YXRlKCdsb2dpbicsIHtcbiAgICAgICAgdXJsOiAnL2xvZ2luJyxcbiAgICAgICAgdmlld3M6IHtcbiAgICAgICAgICAnbWFpbic6IHtcbiAgICAgICAgICAgIGNvbnRyb2xsZXI6ICdMb2dpbkNvbnRyb2xsZXInLFxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3MvbG9naW4uaHRtbCdcbiAgICAgICAgICB9XG4gICAgICAgIH0sXG4gICAgICAgIGF1dGhlbnRpY2F0ZTogZmFsc2VcbiAgICAgIH0pO1xuXG4gICAgJHVybFJvdXRlclByb3ZpZGVyLm90aGVyd2lzZSgnL2xvZ2luJyk7XG4gIH1cblxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuY29udHJvbGxlcignQWN0aXZpZGFkQ29udHJvbGxlcicsIENvbnRyb2xsZXIpO1xuXG4gIENvbnRyb2xsZXIuJGluamVjdCA9IFsnJGh0dHAnLCAnJHEnLCAnJHNjb3BlJywnJHNpZW1icmFzJ107XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIENvbnRyb2xsZXIoJGh0dHAsICRxLCAkc2NvcGUsICRzaWVtYnJhcykge1xuICAgIHZhciB2bSA9IHRoaXM7XG5cbiAgICB2bS5saXN0UmVhZHkgPSBmYWxzZTtcbiAgICB2bS5saXN0ID0gW107XG5cbiAgICB2bS5jYXRlZ29yaWVzID0gW107XG4gICAgdm0ucXVlcnkgPSB7XG4gICAgICBwYWdlOiAxLFxuICAgICAgbGltaXQ6IDEwMCxcbiAgICAgIG9yZGVyOiAnJyxcbiAgICAgIGZpbHRlcjogJydcbiAgICB9XG5cbiAgICB2bS5kYXRhID0ge1xuICAgICAgY3VsdGl2b3M6IHt9LFxuICAgICAgcnVicm9zOiBbXVxuICAgIH1cblxuICAgIHZtLm1hcCA9IHtcbiAgICAgIG5hbWU6ICdub21icmUnLFxuICAgICAgaW1hZ2U6ICcnLFxuICAgIH07XG5cblxuICAgIGFjdGl2YXRlKCk7XG5cbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdBY3RpdmlkYWQgQ29udHJvbGxlcicpO1xuICAgICAgZ2V0RGF0YSgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldERhdGEoKSB7XG4gICAgICAkc2llbWJyYXMuZ2V0UnVicm9zKHZtLnF1ZXJ5KS50aGVuKGZ1bmN0aW9uKHJlc3ApIHtcbiAgICAgICAgdm0uY2F0ZWdvcmllcyA9IHJlc3AucmVzdWx0cztcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSkuZmluYWxseShmdW5jdGlvbigpIHtcbiAgICAgICAgdm0ubGlzdFJlYWR5ID0gdHJ1ZTtcbiAgICAgICAgY29uc29sZS5sb2codm0uY2F0ZWdvcmllcyk7XG4gICAgICB9KVxuICAgIH1cbiAgICB2bS5jYW5jZWwgPSBmdW5jdGlvbigpIHtcbiAgICAgICRtZERpYWxvZy4kaGlkZSgpO1xuICAgIH1cblxuICAgICRzY29wZS4kd2F0Y2goJ3ZtLmNhdGVnb3JpZXMnLCBmdW5jdGlvbiAoYyxvKSB7XG4gICAgICBjb25zb2xlLmxvZyhjKTtcbiAgICB9KVxuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5jb250cm9sbGVyKCdDbGllbnRlc0NvbnRyb2xsZXInLCBDb250cm9sbGVyKTtcblxuICBDb250cm9sbGVyLiRpbmplY3QgPSBbJ18nLCAnJHBlZGlkb3MnLCAnJG1kRGlhbG9nJ107XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIENvbnRyb2xsZXIoXywgJHBlZGlkb3MsICRtZERpYWxvZykge1xuICAgIHZhciB2bSA9IHRoaXM7XG5cbiAgICB2bS5nZXREYXRhID0gZ2V0RGF0YTtcbiAgICB2bS50b2dnbGVTZWFyY2ggPSBmYWxzZTtcbiAgICB2bS50aW1lb3V0ID0gZmFsc2U7XG4gICAgdm0uc2VsZWN0ZWQgPSBbXTtcbiAgICB2bS5pdGVtID0gW107XG4gICAgdm0udGFibGUgPSB7XG4gICAgICB0aXRsZTogJ0xpc3RhZG8gZGUgQ2xpZW50ZXMnLFxuICAgICAgc2VhcmNoOiB7XG4gICAgICAgIHBsYWNlaG9sZGVyOiAnTm9tYnJlLCBBcGVsbGlkbywgZXRjLi4nXG4gICAgICB9XG4gICAgfVxuXG4gICAgdm0ucXVlcnkgPSB7XG4gICAgICBvcmRlcjogJycsXG4gICAgICBsaW1pdDogMTAsXG4gICAgICBwYWdlOiAxLFxuICAgICAgZmlsdGVyOiAnJ1xuICAgIH07XG5cbiAgICB2YXIgZmllbGRzTWV0YSA9IFt7XG4gICAgICBuYW1lOiAnbm9tYnJlJyxcbiAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgIGljb246ICdwZXJtX2lkZW50aXR5J1xuICAgIH0sIHtcbiAgICAgIG5hbWU6ICdhcGVsbGlkbycsXG4gICAgICB0eXBlOiAndGV4dCcsXG4gICAgICBpY29uOiAncGVybV9pZGVudGl0eSdcbiAgICB9LCB7XG4gICAgICBuYW1lOiAnZW1haWwnLFxuICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgaWNvbjogJ2VtYWlsJ1xuICAgIH0sIHtcbiAgICAgIG5hbWU6ICdpZGVudGlmaWNhdGlvbicsXG4gICAgICB0eXBlOiAndGV4dCcsXG4gICAgICBpY29uOiAncGVybV9pZGVudGl0eSdcbiAgICB9LCB7XG4gICAgICBuYW1lOiAndGVsZWZvbm8nLFxuICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgaWNvbjogJ3Bob25lJ1xuICAgIH0sIHtcbiAgICAgIG5hbWU6ICdkaXJlY2Npb24nLFxuICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgaWNvbjogJ3BsYWNlJ1xuICAgIH1dO1xuXG5cbiAgICB2YXIgY2xpZW50T2JqZWN0ID0ge1xuICAgICAgbm9tYnJlOiAnJyxcbiAgICAgIGFwZWxsaWRvOiAnJyxcbiAgICAgIGVtYWlsOiAnJyxcbiAgICAgIGlkZW50aWZpY2F0aW9uOiAnJyxcbiAgICAgIGRpcmVjY2lvbjogJycsXG4gICAgICB0ZWxlZm9ubzogJycsXG4gICAgfVxuXG4gICAgYWN0aXZhdGUoKTtcblxuXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICBjb25zb2xlLmxvZygnQ2xpZW50ZXNDb250cm9sbGVyJyk7XG4gICAgICBnZXREYXRhKCk7XG4gICAgfVxuXG5cbiAgICB2bS5sb2dJdGVtID0gZnVuY3Rpb24oKSB7XG4gICAgICBjb25zb2xlLmxvZyh2bS5pdGVtKTtcbiAgICB9XG5cbiAgICB2bS5zcGF3bk1vZGFsID0gZnVuY3Rpb24oZXYsIGlzTmV3KSB7XG4gICAgICAkbWREaWFsb2cuc2hvdyh7XG4gICAgICAgICAgY29udHJvbGxlcjogJ01vZGFsQ29udHJvbGxlcicsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3MvbW9kYWxzL3VwZGF0ZUNsaWVudE1vZGFsLmh0bWwnLFxuICAgICAgICAgIHBhcmVudDogYW5ndWxhci5lbGVtZW50KGRvY3VtZW50LmJvZHkpLFxuICAgICAgICAgIHRhcmdldEV2ZW50OiBldixcbiAgICAgICAgICBjbGlja091dHNpZGVUb0Nsb3NlOiBmYWxzZSxcbiAgICAgICAgICBmdWxsc2NyZWVuOiB0cnVlLFxuICAgICAgICAgIGxvY2Fsczoge1xuICAgICAgICAgICAgcGF5bG9hZDoge1xuICAgICAgICAgICAgICB0eXBlOiAnY2xpZW50ZXMnLFxuICAgICAgICAgICAgICBoYW5kbGVyOiBpc05ldyA/ICdjcmVhdGVDbGllbnRlJyA6ICd1cGRhdGVDbGllbnRlJyxcbiAgICAgICAgICAgICAgdGl0bGU6IGlzTmV3ID8gJ1JlZ2lzdHJhciBDbGllbnRlJyA6J0FjdHVhbGl6YXIgRGF0b3MgQ2xpZW50ZScsXG4gICAgICAgICAgICAgIGRhdGE6ICFfLmlzRW1wdHkodm0uaXRlbSkgPyBfLmhlYWQodm0uaXRlbSkgOiBjbGllbnRPYmplY3QsXG4gICAgICAgICAgICAgIGZpZWxkczogZmllbGRzTWV0YVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24oYW5zd2VyKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coYW5zd2VyKTtcbiAgICAgICAgICBpZiAoIWFuc3dlcikgcmV0dXJuO1xuICAgICAgICAgIHZtLnF1ZXJ5Lm9yZGVyID0gaXNOZXcgPyAnLWNyZWF0ZWQnIDogJy11cGRhdGVkJztcbiAgICAgICAgICBnZXREYXRhKCk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdjYW5jZWxsZWQnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG5cbiAgICB2bS5zcGF3bkRlbGV0ZU1vZGFsID0gZnVuY3Rpb24oZXYsIGlkKSB7XG5cbiAgICAgIHZhciBjb25maXJtID0gJG1kRGlhbG9nLmNvbmZpcm0oKVxuICAgICAgICAudGl0bGUoJ0VzdGEgc2VndXJvIGRlIGVsaW1pbmFyIGVzdGEgaW5mb3JtYWNpb24/JylcbiAgICAgICAgLnRleHRDb250ZW50KCdMYSBpbmZvcm1hY2lvbiBzZXJhIGVsaW1pbmFkYSBkZSBsYSBiYXNlIGRlIGRhdG9zIHkgbm8gcG9kcmEgc2VyIHJlY3VwZXJhZGEnKVxuICAgICAgICAuYXJpYUxhYmVsKCdDb25maXJtIERpYWxvZycpXG4gICAgICAgIC50YXJnZXRFdmVudChldilcbiAgICAgICAgLm9rKCdFbGltaW5hcicpXG4gICAgICAgIC5jYW5jZWwoJ0NhbmNlbGFyJyk7XG5cbiAgICAgICRtZERpYWxvZy5zaG93KGNvbmZpcm0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiAkcGVkaWRvc1snZGVsZXRlQ2xpZW50ZSddKGlkKVxuICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzcCkge1xuICAgICAgICAgICAgICBnZXREYXRhKCk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgIGNvbnNvbGUubG9nKCdjYW5jZWwnKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0RGF0YSgpIHtcbiAgICAgIHZtLml0ZW0gPSBbXTtcbiAgICAgIHZtLnByb21pc2UgPSAkcGVkaWRvcy5nZXRDbGllbnRlcyh2bS5xdWVyeSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzcCkge1xuICAgICAgICAgIHZtLmRhdGEgPSByZXNwO1xuICAgICAgICB9KTtcbiAgICB9XG5cblxuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5jb250cm9sbGVyKCdDdWx0aXZvc0NvbnRyb2xsZXInLCBDb250cm9sbGVyKTtcblxuICBDb250cm9sbGVyLiRpbmplY3QgPSBbJ18nLCAnJHNjb3BlJywgJyRodHRwJywgJyRxJywgJyR0aW1lb3V0JywgJyRzaWVtYnJhcycsICckc3RhdGVQYXJhbXMnXTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gQ29udHJvbGxlcihfLCAkc2NvcGUsICRodHRwLCAkcSwgJHRpbWVvdXQsICRzaWVtYnJhcywgJHN0YXRlUGFyYW1zKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICB2bS5kZXRhaWwgPSAkc3RhdGVQYXJhbXMuaWQgPyB0cnVlIDogZmFsc2U7XG5cblxuICAgIHZtLnF1ZXJ5U2VhcmNoID0gcXVlcnlTZWFyY2g7XG4gICAgdm0uc2VsZWN0ZWRJdGVtID0gbnVsbDtcbiAgICB2bS5zZWFyY2hUZXh0ID0gbnVsbDtcblxuICAgIHZtLmdldERhdGEgPSBnZXREYXRhO1xuICAgIHZtLnRvZ2dsZVNlYXJjaCA9IGZhbHNlO1xuICAgIHZtLnRpbWVvdXQgPSBmYWxzZTtcbiAgICB2bS5zZWxlY3RlZCA9IFtdO1xuICAgIHZtLml0ZW0gPSBbXTtcbiAgICB2bS50YWJsZSA9IHtcbiAgICAgIHRpdGxlOiAnTGlzdGFkbyBkZSBDdWx0aXZvcycsXG4gICAgICBzZWFyY2g6IHtcbiAgICAgICAgcGxhY2Vob2xkZXI6ICdSdWJybywgU2VtaWxsYSdcbiAgICAgIH1cbiAgICB9XG4gICAgdm0ucXVlcnkgPSB7XG4gICAgICBvcmRlcjogJ2xvdGVfX2lkJyxcbiAgICAgIGxpbWl0OiAxMCxcbiAgICAgIHBhZ2U6IDEsXG4gICAgICBmaWx0ZXI6ICcnXG4gICAgfTtcblxuICAgIHZtLmZvcm0gPSB7XG4gICAgICBsb3RlczogW10sXG4gICAgICBzZWxlY3RlZExvdGVzOiBbXSxcbiAgICAgIGFyZWFzU2llbWJyYTogW11cbiAgICB9XG5cbiAgICBhY3RpdmF0ZSgpO1xuXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICBjb25zb2xlLmxvZygnQ3VsdGl2b3MgQ29udHJvbGxlcicpO1xuICAgICAgdm0uZGV0YWlsID8gZ2V0SXRlbSgpIDogZ2V0RGF0YSgpO1xuXG4gICAgICBnZXRMb3RlcygpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldEl0ZW0oKSB7XG4gICAgICBpZiAoIXZtLml0ZW0pIHtcbiAgICAgICAgY29uc29sZS5sb2coJ2hhdmUgdG8gZ2V0IGl0ZW0nKTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdm0uaXRlbSA9IF8uZmlsdGVyKCRzaWVtYnJhcy5jdWx0aXZvcywgZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgIHJldHVybiBpdGVtLmlkID09PSBwYXJzZUludCgkc3RhdGVQYXJhbXMuaWQpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2bS5yZXNldFRhYmxlID0gZnVuY3Rpb24oKSB7XG4gICAgICB2bS5kZXRhaWwgPSBmYWxzZTtcbiAgICAgIHZtLnRvZ2dsZVNlYXJjaCA9IGZhbHNlO1xuICAgICAgdm0ucXVlcnkuZmlsdGVyID0gJyc7XG4gICAgICBnZXREYXRhKCk7XG4gICAgfVxuXG4gICAgdm0ubG9nSXRlbSA9IGZ1bmN0aW9uKCkge1xuICAgICAgY29uc29sZS5sb2codm0uaXRlbSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc3VjY2VzcyhkYXRhKSB7XG4gICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgIHZtLmRhdGEgPSBkYXRhO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldERhdGEoKSB7XG4gICAgICB2bS5wcm9taXNlID0gJHNpZW1icmFzLmdldEN1bHRpdm9zKHZtLnF1ZXJ5KS50aGVuKHN1Y2Nlc3MpO1xuICAgIH07XG5cbiAgICAkc2NvcGUuJHdhdGNoKCd2bS5xdWVyeS5maWx0ZXInLCBmdW5jdGlvbihjdXJyZW50LCBvcmlnaW5hbCkge1xuICAgICAgaWYgKCFjdXJyZW50KSByZXR1cm47XG4gICAgICBpZiAodm0udGltZW91dCkgJHRpbWVvdXQuY2FuY2VsKHZtLnRpbWVvdXQpO1xuICAgICAgdm0udGltZW91dCA9ICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBnZXREYXRhKCk7XG4gICAgICB9LCA1MDApOyAvLyBkZWxheSA1MDAgbXNcbiAgICB9KTtcblxuICAgICRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKCd2bS5pdGVtJywgZnVuY3Rpb24oY3VycmVudCwgb3JpZ2luYWwpIHtcbiAgICAgIGlmICghY3VycmVudCkgcmV0dXJuO1xuICAgICAgY29uc29sZS5sb2coY3VycmVudCk7XG4gICAgfSk7XG5cbiAgICAvLyBDdWx0aXZvIFdpemFyZFxuXG4gICAgLyoqXG4gICAgICogU2VhcmNoIHV0aWxzLlxuICAgICAqL1xuICAgIGZ1bmN0aW9uIHF1ZXJ5U2VhcmNoKGRhdGEsIHF1ZXJ5KSB7XG4gICAgICB2YXIgcmVzdWx0cyA9IHF1ZXJ5ID8gZGF0YS5maWx0ZXIoY3JlYXRlRmlsdGVyRm9yKHF1ZXJ5KSkgOiBbXTtcbiAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIENyZWF0ZSBmaWx0ZXIgZnVuY3Rpb24gZm9yIGEgcXVlcnkgc3RyaW5nXG4gICAgICovXG4gICAgZnVuY3Rpb24gY3JlYXRlRmlsdGVyRm9yKHF1ZXJ5KSB7XG4gICAgICB2YXIgbG93ZXJjYXNlUXVlcnkgPSBhbmd1bGFyLmxvd2VyY2FzZShxdWVyeSk7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gZmlsdGVyRm4oaXRlbSkge1xuICAgICAgICByZXR1cm4gKGl0ZW0uX2xvd2VybmFtZS5pbmRleE9mKGxvd2VyY2FzZVF1ZXJ5KSA9PT0gMCk7XG4gICAgICB9O1xuXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0TG90ZXMoKSB7XG4gICAgICAkc2llbWJyYXMuZ2V0TG90ZXMoe1xuICAgICAgICBwYWdlOiAxLFxuICAgICAgICBsaW1pdDogMTAwLFxuICAgICAgICBvcmRlcjogJy1ub21icmUnLFxuICAgICAgICBmaWx0ZXI6ICcnXG4gICAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3ApIHtcbiAgICAgICAgdm0uZm9ybS5sb3RlcyA9IF8ubWFwKHJlc3AucmVzdWx0cywgZnVuY3Rpb24oaSkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiBpLnNlbWlsbGFfdXRpbGl6YWRhLmRlc2NyaXBjaW9uLFxuICAgICAgICAgICAgY29kaWdvOiBpLnNlbWlsbGFfdXRpbGl6YWRhLmNvZGlnbyxcbiAgICAgICAgICAgIGlkOiBpLmlkLFxuICAgICAgICAgICAgX2xvd2VybmFtZTogXy5sb3dlckNhc2UoaS5zZW1pbGxhX3V0aWxpemFkYS5kZXNjcmlwY2lvbilcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZtLmZvcm0ubG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRBcmVhc1NpZW1icmEoKSB7XG4gICAgICAkc2llbWJyYXMuZ2V0TG90ZXMoe1xuICAgICAgICBwYWdlOiAxLFxuICAgICAgICBsaW1pdDogMTAwLFxuICAgICAgICBvcmRlcjogJy1ub21icmUnLFxuICAgICAgICBmaWx0ZXI6ICcnXG4gICAgICB9KS50aGVuKGZ1bmN0aW9uKHJlc3ApIHtcbiAgICAgICAgdm0uZm9ybS5sb3RlcyA9IF8ubWFwKHJlc3AucmVzdWx0cywgZnVuY3Rpb24oaSkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBuYW1lOiBpLnNlbWlsbGFfdXRpbGl6YWRhLmRlc2NyaXBjaW9uLFxuICAgICAgICAgICAgY29kaWdvOiBpLnNlbWlsbGFfdXRpbGl6YWRhLmNvZGlnbyxcbiAgICAgICAgICAgIGlkOiBpLmlkLFxuICAgICAgICAgICAgX2xvd2VybmFtZTogXy5sb3dlckNhc2UoaS5zZW1pbGxhX3V0aWxpemFkYS5kZXNjcmlwY2lvbilcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZtLmZvcm0ubG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSlcbiAgICB9XG5cbiAgfVxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuY29udHJvbGxlcignRGFzaGJvYXJkQ29udHJvbGxlcicsIENvbnRyb2xsZXIpO1xuXG4gIGZ1bmN0aW9uIENvbnRyb2xsZXIoJGh0dHAsICRxKSB7XG4gICAgdmFyIHZtID0gdGhpcztcblxuICAgIC8vLy8vLy8vLy8vLy8vLy9cbiAgICAvLy9cbiAgICBhY3RpdmF0ZSgpO1xuXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICBjb25zb2xlLmxvZygnRGFzaGJvYXJkQ29udHJvbGxlcicpO1xuICAgIH1cblxuICB9XG5cbn0pKCk7XG4iLCIvKipcbiAqIEBuZ2RvYyBjb250cm9sbGVyXG4gKiBAbmFtZSBIb21lQ29udHJvbGxlclxuICogQHJlcXVpcmVzICRyb290U2NvcGVcbiAqIEBkZXNjcmlwdGlvblxuICpcbiAqIE1hbmVqYSBlbCBjb21wb3J0YW1pZW50byBkZSBsYSB2aXN0YSBwcmluY2lwYWxcbiAqXG4gKi9cblxuKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5jb250cm9sbGVyKCdIb21lRGFzaGJvYXJkQ29udHJvbGxlcicsIEhvbWVDb250cm9sbGVyKTtcblxuICBIb21lQ29udHJvbGxlci4kaW5qZWN0ID0gWydfJywgJyRzY29wZScsICckcm9vdFNjb3BlJywgJyRtZERpYWxvZycsICdqUXVlcnknLCAnJHNpZW1icmFzJywgJyRpbnN1bW9zJywgJyRzZWd1aW1pZW50bycsICckdXRpbCddO1xuXG4gIC8qIEBuZ0luamVjdCAqL1xuICBmdW5jdGlvbiBIb21lQ29udHJvbGxlcihfLCAkc2NvcGUsICRyb290U2NvcGUsICRtZERpYWxvZywgalF1ZXJ5LCAkc2llbWJyYXMsICRpbnN1bW9zLCAkc2VndWltaWVudG8sICR1dGlsKSB7XG4gICAgdmFyIHZtID0gdGhpcztcblxuICAgIHZtLmFjdGlvbnMgPSAkdXRpbC5nZXRBY3Rpb25zKCk7XG5cbiAgICB2bS50aXRsZSA9ICdIb21lRGFzaGJvYXJkQ29udHJvbGxlcic7XG4gICAgdm0uZGF0YSA9IFtdO1xuICAgIHZtLmFsbCA9IGZhbHNlO1xuICAgIHZtLmFkZEFjdGl2aXR5ID0gdHJ1ZTtcbiAgICAvL2NoaXBzXG4gICAgdm0ucXVlcnlTZWFyY2ggPSBxdWVyeVNlYXJjaDtcbiAgICB2bS5zZWxlY3RlZEl0ZW0gPSBudWxsO1xuICAgIHZtLnNlYXJjaFRleHQgPSBudWxsO1xuICAgIHZtLnNlbGVjdGVkUnVicm9zID0gW107XG4gICAgdm0uc2VsZWN0ZWRBY3Rpb25zID0gW107XG4gICAgdm0uc2VsZWN0ZWRDdWx0aXZvcyA9IFtdO1xuICAgIHZtLnJ1YnJvcyA9IFtdO1xuICAgIHZtLmN1bHRpdm9zID0gW107XG4gICAgdm0uaW5zdW1vcyA9IFtdO1xuICAgIHZtLm9ic2VydmF0aW9ucyA9IFtdO1xuICAgIHZtLnRvZ2dsZSA9IHRvZ2dsZTtcbiAgICB2bS5zZWxlY3RDdWx0aXZvID0gc2VsZWN0Q3VsdGl2bztcbiAgICB2bS5kZXRhaWxJdGVtID0gZGV0YWlsSXRlbTtcbiAgICB2bS5yZW1vdmVJdGVtID0gcmVtb3ZlSXRlbTtcbiAgICB2bS5zdWJtaXQgPSBzdWJtaXQ7XG5cbiAgICB2bS5xdWVyeSA9IHtcbiAgICAgIHBhZ2U6IDEsXG4gICAgICBsaW1pdDogNSxcbiAgICAgIG9yZGVyOiAnLWZlY2hhX3JlYWxpemFjaW9uJyxcbiAgICAgIGZpbHRlcjogJydcbiAgICB9XG4gICAgYWN0aXZhdGUoKTtcblxuICAgIC8vLy8vLy8vLy8vLy8vLy9cblxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICAgICAgY29uc29sZS5sb2coJ0hvbWVDb250cm9sbGVyJyk7XG4gICAgICBnZXRBY3RpdmlkYWRlcygpO1xuICAgICAgZ2V0UnVicm9zKCk7XG4gICAgICBnZXRJbnN1bW9zKCk7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBzdWJtaXQoKSB7XG4gICAgICAvLyBjb25zb2xlLmxvZyh2bS5vYnNlcnZhdGlvbnMpO1xuICAgICAgLy8gY29uc29sZS5sb2codm0uc2VsZWN0ZWRDdWx0aXZvcyk7XG4gICAgICAvL3ZhciBidWxrID0gXy5tZXJnZSh2bS5zZWxlY3RlZEN1bHRpdm9zLCBfLmtleUJ5KHZtLm9ic2VydmF0aW9ucywgJ3NlbGVjdG9yJykpO1xuXG4gICAgICB2YXIgZGF0YSA9IF8ubWFwKHZtLm9ic2VydmF0aW9ucywgZnVuY3Rpb24oaSkge1xuICAgICAgICB2YXIgaXRlbSA9IGk7XG4gICAgICAgIGl0ZW0uY3VsdGl2byA9IGkuY3VsdGl2by5pZDtcbiAgICAgICAgaWYgKGl0ZW0uaGFzT3duUHJvcGVydHkoJ2ZlY2hhX2FwbGljYWNpb24nKSkge1xuICAgICAgICAgIGl0ZW0uZmVjaGFfYXBsaWNhY2lvbiA9IG1vbWVudChpLmZlY2hhX2FwbGljYWNpb24sICdERC1NTS1ZWVlZIEhIOm1tIEEnLCB0cnVlKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gaXRlbTtcbiAgICAgIH0pO1xuXG4gICAgICAkc2VndWltaWVudG8uY3JlYXRlQWN0aXZpZGFkZXMoXy5ncm91cEJ5KGRhdGEsICdzZWxlY3RvcicpKVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgY29uc29sZS5sb2cocmVzcCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldEFjdGl2aWRhZGVzKCkge1xuICAgICAgJHNlZ3VpbWllbnRvLmdldEFjdGl2aWRhZGVzKHZtLnF1ZXJ5KVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgY29uc29sZS5sb2cocmVzcCk7XG4gICAgICAgICAgdm0uZGF0YSA9IHJlc3A7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldEluc3Vtb3MoKSB7XG4gICAgICAkaW5zdW1vcy5nZXRJbnN1bW9zKHt9KVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgdm0uaW5zdW1vcyA9IF8ubWFwKHJlc3AucmVzdWx0cywgZnVuY3Rpb24oaSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgbmFtZTogaS5ub21icmUsXG4gICAgICAgICAgICAgIGlkOiBpLmlkLFxuICAgICAgICAgICAgICBfbG93ZXJuYW1lOiBfLmxvd2VyQ2FzZShpLm5vbWJyZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmZpbmFsbHkoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRSdWJyb3MoKSB7XG4gICAgICAkc2llbWJyYXMuZ2V0UnVicm9zKHtcbiAgICAgICAgICBwYWdlOiAxLFxuICAgICAgICAgIGxpbWl0OiAxMCxcbiAgICAgICAgICBvcmRlcjogJy1ub21icmUnLFxuICAgICAgICAgIGZpbHRlcjogJydcbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzcCkge1xuICAgICAgICAgIHZtLnJ1YnJvcyA9IF8ubWFwKHJlc3AucmVzdWx0cywgZnVuY3Rpb24oaSkge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgbmFtZTogaS5ub21icmUsXG4gICAgICAgICAgICAgIGlkOiBpLmlkLFxuICAgICAgICAgICAgICBfbG93ZXJuYW1lOiBfLmxvd2VyQ2FzZShpLm5vbWJyZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XG5cbiAgICAgICAgfSlcbiAgICAgICAgLmZpbmFsbHkoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRDdWx0aXZvcyhxdWVyeSkge1xuICAgICAgJHNpZW1icmFzLmdldEN1bHRpdm9zKHF1ZXJ5KVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgdm0uY3VsdGl2b3MgPSBfLm1hcChyZXNwLnJlc3VsdHMsIGZ1bmN0aW9uKGkpIHtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgIG5hbWU6IGkuY29kaWdvLFxuICAgICAgICAgICAgICBkZXNjcmlwdGlvbjogaS5sb3RlLnNlbWlsbGFfdXRpbGl6YWRhLmRlc2NyaXBjaW9uLFxuICAgICAgICAgICAgICBpZDogaS5pZCxcbiAgICAgICAgICAgICAgX2xvd2VybmFtZTogXy5sb3dlckNhc2UoaS5ub21icmUpLFxuICAgICAgICAgICAgICBzZWxlY3RlZDogZmFsc2UsXG4gICAgICAgICAgICAgIHBsYWd1aWNpZGE6IHt9LFxuICAgICAgICAgICAgICBmZXJ0aWxpemFjaW9uOiB7fSxcbiAgICAgICAgICAgICAgcmllZ286IHt9LFxuICAgICAgICAgICAgICBvYnNlcnZhY2lvbmVzOiB7XG4gICAgICAgICAgICAgICAgdGV4dDogJ09ic2VydmFjaW9uZXMnXG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICB9KVxuICAgICAgICAuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XG5cbiAgICAgICAgfSlcbiAgICAgICAgLmZpbmFsbHkoZnVuY3Rpb24oKSB7XG5cbiAgICAgICAgfSlcbiAgICB9XG5cblxuICAgIGZ1bmN0aW9uIHNlbGVjdEN1bHRpdm8oaW5kZXgsIGl0ZW0pIHtcbiAgICAgIHZtLmN1bHRpdm9zW2luZGV4XS5zZWxlY3RlZCA9ICFpdGVtLnNlbGVjdGVkO1xuXG4gICAgICB2YXIgaW5kZXggPSBfLmZpbmRJbmRleCh2bS5zZWxlY3RlZEN1bHRpdm9zLCBmdW5jdGlvbihpKSB7XG4gICAgICAgIHJldHVybiBpLmlkID09PSBpdGVtLmlkO1xuICAgICAgfSk7XG5cbiAgICAgIGlmICghaXRlbS5zZWxlY3RlZCAmJiB2bS5zZWxlY3RlZEN1bHRpdm9zW2luZGV4XSkge1xuICAgICAgICB2bS5zZWxlY3RlZEN1bHRpdm9zID0gdm0uc2VsZWN0ZWRDdWx0aXZvcy5zcGxpY2UoaW5kZXgsIDEpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdm0uc2VsZWN0ZWRDdWx0aXZvcy5wdXNoKGl0ZW0pO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRldGFpbEl0ZW0oZXYsIGl0ZW0pIHtcbiAgICAgIGlmICghXy5pbmNsdWRlcyhbMywgNCwgNl0sIGl0ZW0udHlwZSkpIHJldHVybjtcblxuICAgICAgYW5ndWxhci5jb3B5KGl0ZW0sICR1dGlsLml0ZW0pO1xuICAgICAgJG1kRGlhbG9nLnNob3coe1xuICAgICAgICAgIGNvbnRyb2xsZXI6ICdBY3Rpb25Db250cm9sbGVyJyxcbiAgICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXG4gICAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3Mvc2VndWltaWVudG8vJyArIGl0ZW0udGVtcGxhdGUsXG4gICAgICAgICAgY2xpY2tPdXRzaWRlVG9DbG9zZTogdHJ1ZSxcbiAgICAgICAgICBmdWxsc2NyZWVuOiB0cnVlXG4gICAgICAgIH0pXG4gICAgICAgIC50aGVuKGZ1bmN0aW9uKGFuc3dlcikge1xuICAgICAgICAgIGNvbnNvbGUubG9nKGFuc3dlcik7XG4gICAgICAgICAgLy8gaWYgKF8uaXNBcnJheShpdGVtLmN1bHRpdm9baXRlbS5zZWxlY3Rvcl0pKSB7XG4gICAgICAgICAgLy8gICBpdGVtLmN1bHRpdm9baXRlbS5zZWxlY3Rvcl0ucHVzaChhbnN3ZXIpO1xuICAgICAgICAgIC8vIH0gZWxzZSBpZiAoXy5pc09iamVjdChpdGVtLmN1bHRpdm9baXRlbS5zZWxlY3Rvcl0pKSB7XG4gICAgICAgICAgLy8gICBpdGVtLmN1bHRpdm9baXRlbS5zZWxlY3Rvcl0gPSBhbnN3ZXI7XG4gICAgICAgICAgLy8gfSBlbHNlIHtcbiAgICAgICAgICAvLyAgIGNvbnNvbGUubG9nKCd1bmRlZmluZWQnKTtcbiAgICAgICAgICAvLyB9XG5cbiAgICAgICAgICBfLm1lcmdlKGl0ZW0sIGFuc3dlcik7XG5cbiAgICAgICAgICBjb25zb2xlLmxvZyhpdGVtKTtcbiAgICAgICAgfSwgZnVuY3Rpb24oKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ2NhbmNlbGxlZCcpO1xuICAgICAgICB9KTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gcmVtb3ZlSXRlbShldmVudCwgaW5kZXgpIHtcbiAgICAgIGNvbnNvbGUubG9nKGluZGV4KTtcbiAgICAgIGluZGV4LS07XG4gICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgIHJldHVybiB2bS5vYnNlcnZhdGlvbnMuc2hpZnQoKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB2bS5vYnNlcnZhdGlvbnMuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiB0b2dnbGUodmFsdWUpIHtcbiAgICAgIGlmICghdmFsdWUpIHtcbiAgICAgICAgXy5tYXAodm0uY3VsdGl2b3MsIGZ1bmN0aW9uKGl0ZW0sIGluZGV4KSB7XG4gICAgICAgICAgaXRlbS5zZWxlY3RlZCA9IGZhbHNlO1xuICAgICAgICB9KTtcbiAgICAgICAgdm0uc2VsZWN0ZWRDdWx0aXZvcyA9IFtdO1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBfLm1hcCh2bS5jdWx0aXZvcywgZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgICAgICAgc2VsZWN0Q3VsdGl2byhpbmRleCwgaXRlbSk7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICAvKipcbiAgICAgKiBTZWFyY2ggdXRpbHMuXG4gICAgICovXG4gICAgZnVuY3Rpb24gcXVlcnlTZWFyY2goZGF0YSwgcXVlcnkpIHtcbiAgICAgIHZhciByZXN1bHRzID0gcXVlcnkgPyBkYXRhLmZpbHRlcihjcmVhdGVGaWx0ZXJGb3IocXVlcnkpKSA6IFtdO1xuICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogQ3JlYXRlIGZpbHRlciBmdW5jdGlvbiBmb3IgYSBxdWVyeSBzdHJpbmdcbiAgICAgKi9cbiAgICBmdW5jdGlvbiBjcmVhdGVGaWx0ZXJGb3IocXVlcnkpIHtcbiAgICAgIHZhciBsb3dlcmNhc2VRdWVyeSA9IGFuZ3VsYXIubG93ZXJjYXNlKHF1ZXJ5KTtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBmaWx0ZXJGbihpdGVtKSB7XG4gICAgICAgIHJldHVybiAoaXRlbS5fbG93ZXJuYW1lLmluZGV4T2YobG93ZXJjYXNlUXVlcnkpID09PSAwKTtcbiAgICAgIH07XG5cbiAgICB9XG5cblxuICAgICRzY29wZS4kd2F0Y2goJ3ZtLmRhdGEnLCBmdW5jdGlvbihjdXJyZW50LCBvcmlnaW5hbCkge1xuICAgICAgaWYgKCFjdXJyZW50KSByZXR1cm47XG4gICAgICB2YXIgdGVtcCA9IF8uZ3JvdXBCeSh2bS5kYXRhLnJlc3VsdHMsIGZ1bmN0aW9uKG8pIHtcbiAgICAgICAgcmV0dXJuIG1vbWVudChtb21lbnQoby5mZWNoYV9yZWFsaXphY2lvbilcbiAgICAgICAgICAgIC5zdGFydE9mKCdkYXknKSlcbiAgICAgICAgICAuZm9ybWF0KCk7XG4gICAgICB9KTtcbiAgICAgIHZtLmZvcm1hdHRlZERhdGEgPSB0ZW1wO1xuICAgIH0pO1xuXG4gICAgZnVuY3Rpb24gZHJhZnRPYnNlcnZhdGlvbigpIHtcbiAgICAgIHZhciBvcHRpb25zID0ge1xuICAgICAgICByaWVnbzogJ1NlIGFwbGljbyByaWVnbyBydXRpbmFyaW8nLFxuICAgICAgICBkZXNtYWxlemFtaWVudG86ICdzZSBhcGxpY2FkbyBkZXNtYWxlemFtaWVudG8gZW4gZWwgYXJlYScsXG4gICAgICAgIGZlcnRpbGl6YWNpb246ICdTZSBhcGxpY28gZmVydGlsaXphY2lvbiBlbiBlbCBjdWx0aXZvJyxcbiAgICAgICAgcGxhZ3VpY2lkYTogJ1NlIGFwbGljbyBwbGFndWljaWRhIGVuIGVsIGN1bHRpdm8nLFxuICAgICAgICBsaW1waWV6YTogJ1NlIGFwbGljbyBsaW1waWV6YSBlbiBlbCBhcmVhJ1xuICAgICAgfVxuICAgICAgdmFyIGNvbnRlbnQgPSBfLm1hcCh2bS5zZWxlY3RlZEFjdGlvbnMsIGZ1bmN0aW9uKGFjdGlvbikge1xuICAgICAgICByZXR1cm4gXy5tYXAodm0uc2VsZWN0ZWRDdWx0aXZvcywgZnVuY3Rpb24oaXRlbSwgaW5kZXgpIHtcbiAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQ6IG5ldyBEYXRlKCksXG4gICAgICAgICAgICB0ZXh0OiBpdGVtLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgY29udGVudDogb3B0aW9uc1thbmd1bGFyLmxvd2VyY2FzZShhY3Rpb24ubmFtZSldLFxuICAgICAgICAgICAgdHlwZTogYWN0aW9uLmlkLFxuICAgICAgICAgICAgdGVtcGxhdGU6IGFjdGlvbi50ZW1wbGF0ZSxcbiAgICAgICAgICAgIHNlbGVjdG9yOiBhbmd1bGFyLmxvd2VyY2FzZShhY3Rpb24ubmFtZSksXG4gICAgICAgICAgICBjdWx0aXZvOiBpdGVtLFxuICAgICAgICAgIH07XG4gICAgICAgIH0pXG4gICAgICB9KTtcblxuICAgICAgdm0ub2JzZXJ2YXRpb25zID0gW10uY29uY2F0LmFwcGx5KFtdLCBjb250ZW50KTtcbiAgICB9XG5cbiAgICAkc2NvcGUuJHdhdGNoQ29sbGVjdGlvbigndm0uc2VsZWN0ZWRSdWJyb3MnLCBmdW5jdGlvbihjdXJyZW50LCBvcmlnaW5hbCkge1xuICAgICAgaWYgKCFjdXJyZW50Lmxlbmd0aCkgcmV0dXJuO1xuXG4gICAgICB2YXIgcXVlcnkgPSBfLm1hcChjdXJyZW50LCBmdW5jdGlvbihpKSB7XG4gICAgICAgICAgcmV0dXJuIGkubmFtZTtcbiAgICAgICAgfSlcbiAgICAgICAgLmpvaW4oJywnKTtcblxuICAgICAgZ2V0Q3VsdGl2b3Moe1xuICAgICAgICBwYWdlOiAxLFxuICAgICAgICBsaW1pdDogMTAsXG4gICAgICAgIG9yZGVyOiAnZmVjaGFfc2llbWJyYScsXG4gICAgICAgIGZpbHRlcjogcXVlcnlcbiAgICAgIH0pO1xuICAgIH0pO1xuXG4gICAgJHNjb3BlLiR3YXRjaENvbGxlY3Rpb24oJ3ZtLnNlbGVjdGVkQWN0aW9ucycsIGZ1bmN0aW9uKGN1cnJlbnQsIG9yaWdpbmFsKSB7XG4gICAgICBkcmFmdE9ic2VydmF0aW9uKCk7XG4gICAgfSk7XG5cbiAgICAkc2NvcGUuJHdhdGNoQ29sbGVjdGlvbigndm0uc2VsZWN0ZWRDdWx0aXZvcycsIGZ1bmN0aW9uKGN1cnJlbnQsIG9yaWdpbmFsKSB7XG4gICAgICBpZiAoIWN1cnJlbnQubGVuZ3RoIHx8IGN1cnJlbnQubGVuZ3RoID09PSBvcmlnaW5hbC5sZW5ndGgpIHJldHVybjtcbiAgICAgIGRyYWZ0T2JzZXJ2YXRpb24oKTtcbiAgICB9KTtcblxuICAgICRzY29wZS4kd2F0Y2hDb2xsZWN0aW9uKCd2bS5vYnNlcnZhdGlvbnMnLCBmdW5jdGlvbihjdXJyZW50LCBvcmlnaW5hbCkge1xuICAgICAgY29uc29sZS5sb2coY3VycmVudCk7XG4gICAgfSwgdHJ1ZSk7XG5cbiAgfVxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuY29udHJvbGxlcignTG90ZXNDb250cm9sbGVyJywgQ29udHJvbGxlcik7XG5cbiAgQ29udHJvbGxlci4kaW5qZWN0ID0gWydfJywgJyRzY29wZScsICckaHR0cCcsICckcScsICckdGltZW91dCcsICckc2llbWJyYXMnLCAnJHN0YXRlUGFyYW1zJ107XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIENvbnRyb2xsZXIoXywgJHNjb3BlLCAkaHR0cCwgJHEsICR0aW1lb3V0LCAkc2llbWJyYXMsICRzdGF0ZVBhcmFtcykge1xuICAgIHZhciB2bSA9IHRoaXM7XG4gICAgdm0uZGV0YWlsID0gJHN0YXRlUGFyYW1zLmlkID8gdHJ1ZSA6IGZhbHNlO1xuXG4gICAgdm0uZ2V0RGF0YSA9IGdldERhdGE7XG4gICAgdm0udG9nZ2xlU2VhcmNoID0gZmFsc2U7XG4gICAgdm0udGltZW91dCA9IGZhbHNlO1xuICAgIHZtLnNlbGVjdGVkID0gW107XG4gICAgdm0uaXRlbSA9IFtdO1xuICAgIHZtLnRhYmxlID0ge1xuICAgICAgdGl0bGU6ICdMaXN0YWRvJyxcbiAgICAgIHNlYXJjaDoge1xuICAgICAgICBwbGFjZWhvbGRlcjogJ1J1YnJvLCBTZW1pbGxhJ1xuICAgICAgfVxuICAgIH1cbiAgICB2bS5xdWVyeSA9IHtcbiAgICAgIG9yZGVyOiAnbG90ZV9faWQnLFxuICAgICAgbGltaXQ6IDEwLFxuICAgICAgcGFnZTogMSxcbiAgICAgIGZpbHRlcjogJydcbiAgICB9O1xuXG4gICAgYWN0aXZhdGUoKTtcblxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICAgICAgY29uc29sZS5sb2coJ0N1bHRpdm9zIENvbnRyb2xsZXInKTtcbiAgICAgIHZtLmRldGFpbCA/IGdldEl0ZW0oKSA6IGdldERhdGEoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRJdGVtKCkge1xuICAgICAgaWYgKCF2bS5pdGVtKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKCdoYXZlIHRvIGdldCBpdGVtJyk7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHZtLml0ZW0gPSBfLmZpbHRlcigkc2llbWJyYXMuY3VsdGl2b3MsIGZ1bmN0aW9uKGl0ZW0pIHtcbiAgICAgICAgICByZXR1cm4gaXRlbS5pZCA9PT0gcGFyc2VJbnQoJHN0YXRlUGFyYW1zLmlkKTtcbiAgICAgICAgfSk7XG4gICAgICB9XG4gICAgfVxuXG4gICAgdm0ucmVzZXRUYWJsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdm0uZGV0YWlsID0gZmFsc2U7XG4gICAgICB2bS50b2dnbGVTZWFyY2ggPSBmYWxzZTtcbiAgICAgIHZtLnF1ZXJ5LmZpbHRlciA9ICcnO1xuICAgICAgZ2V0RGF0YSgpO1xuICAgIH1cblxuICAgIHZtLmxvZ0l0ZW0gPSBmdW5jdGlvbigpIHtcbiAgICAgIGNvbnNvbGUubG9nKHZtLml0ZW0pO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN1Y2Nlc3MoZGF0YSkge1xuICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICB2bS5kYXRhID0gZGF0YTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXREYXRhKCkge1xuICAgICAgdm0ucHJvbWlzZSA9ICRzaWVtYnJhcy5nZXRMb3Rlcyh2bS5xdWVyeSkudGhlbihzdWNjZXNzKTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLiR3YXRjaCgndm0ucXVlcnkuZmlsdGVyJywgZnVuY3Rpb24oY3VycmVudCwgb3JpZ2luYWwpIHtcbiAgICAgIGlmICghY3VycmVudCkgcmV0dXJuO1xuXG4gICAgICBpZiAodm0udGltZW91dCkgJHRpbWVvdXQuY2FuY2VsKHZtLnRpbWVvdXQpO1xuXG4gICAgICB2bS50aW1lb3V0ID0gJHRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGdldERhdGEoKTtcbiAgICAgIH0sIDUwMCk7IC8vIGRlbGF5IDUwMCBtc1xuICAgIH0pO1xuXG4gICAgJHNjb3BlLiR3YXRjaENvbGxlY3Rpb24oJ3ZtLml0ZW0nLCBmdW5jdGlvbihjdXJyZW50LCBvcmlnaW5hbCkge1xuICAgICAgaWYgKCFjdXJyZW50KSByZXR1cm47XG4gICAgICBjb25zb2xlLmxvZyhjdXJyZW50KTtcbiAgICB9KTtcbiAgfVxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuY29udHJvbGxlcignUHJvZmlsZUNvbnRyb2xsZXInLCBDb250cm9sbGVyKTtcblxuICBDb250cm9sbGVyLiRpbmplY3QgPSBbJ18nLCAnJHJvb3RTY29wZScsICckcScsICd1aUdtYXBHb29nbGVNYXBBcGknLCAndWlHbWFwSXNSZWFkeScsICdVc2VyU2VydmljZScsICckdXRpbCddO1xuXG4gIGZ1bmN0aW9uIENvbnRyb2xsZXIoXywgJHJvb3RTY29wZSwgJHEsIHVpR21hcEdvb2dsZU1hcEFwaSwgdWlHbWFwSXNSZWFkeSwgVXNlclNlcnZpY2UsICR1dGlsKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICB2YXIgUGxhY2VzQXV0b2NvbXBsZXRlID0gbnVsbDtcblxuICAgIHZtLmNvdW50cmllcyA9ICR1dGlsLmdldENvdW50cmllcygpO1xuXG4gICAgdm0uZGF0YSA9IHtcbiAgICAgIGNvdW50cnk6ICdDQScsXG4gICAgICB1c2VybmFtZTogJycsXG4gICAgICBiaXJ0aDogbmV3IERhdGUoKVxuICAgIH07XG4gICAgdm0ucGxhY2VzUmVhZHkgPSBmYWxzZTtcblxuICAgIGFjdGl2YXRlKCk7XG5cbiAgICAvLy8vLy8vLy8vLy8vLy8vXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICBjb25zb2xlLmxvZygnUHJvZmlsZSBDb250cm9sbGVyJyk7XG4gICAgfVxuXG4gICAgdm0uYXV0b2NvbXBsZXRlQ291bnRyeSA9IGZ1bmN0aW9uKHF1ZXJ5KSB7XG4gICAgICByZXR1cm4gYXV0b2NvbXBsZXRlQ291bnRyeShxdWVyeSk7XG4gICAgfTtcblxuICAgIGZ1bmN0aW9uIGF1dG9jb21wbGV0ZUNvdW50cnkocXVlcnkpIHtcbiAgICAgIHZhciByZXN1bHRzID0gcXVlcnkgPyB2bS5jb3VudHJpZXMuZmlsdGVyKGNyZWF0ZUZpbHRlckZvcihxdWVyeSkpIDogdm0uY291bnRyaWVzO1xuICAgICAgcmV0dXJuIHJlc3VsdHM7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlRmlsdGVyRm9yKHF1ZXJ5KSB7XG4gICAgICB2YXIgY2FwaXRhbGl6ZVF1ZXJ5ID0gXy5jYXBpdGFsaXplKHF1ZXJ5KTtcbiAgICAgIHJldHVybiBmdW5jdGlvbiBmaWx0ZXJGbihjb3VudHJ5KSB7XG4gICAgICAgIHJldHVybiAoY291bnRyeS5uYW1lLmluZGV4T2YoY2FwaXRhbGl6ZVF1ZXJ5KSA9PT0gMCk7XG4gICAgICB9O1xuICAgIH1cblxuXG4gICAgdm0uYXV0b2NvbXBsZXRlQWRkcmVzcyA9IGZ1bmN0aW9uKGFkZHJlc3MpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG5cbiAgICAgIFBsYWNlc0F1dG9jb21wbGV0ZS5nZXRRdWVyeVByZWRpY3Rpb25zKHtcbiAgICAgICAgaW5wdXQ6IGFkZHJlc3MsXG4gICAgICB9LCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSA/IF8uZmlsdGVyKF8uZmlsdGVyKGRhdGEsICdwbGFjZV9pZCcpLCBmdW5jdGlvbihpKSB7XG4gICAgICAgICAgcmV0dXJuICFfLmluY2x1ZGVzKGkudHlwZXMsICdlc3RhYmxpc2htZW50JykgJiYgIV8uaW5jbHVkZXMoaS50eXBlcywgJ2NvdW50cnknKTtcbiAgICAgICAgfSkgOiBbXSk7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfTtcblxuXG4gICAgdm0udXBkYXRlUHJvZmlsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgdm0ubG9hZGluZyA9IHRydWU7XG4gICAgICB2bS5kYXRhLmNvdW50cnkgPSBhbmd1bGFyLmlzT2JqZWN0KHZtLmRhdGEuY291bnRyeSkgPyB2bS5kYXRhLmNvdW50cnkuaWQgOiB2bS5kYXRhLmNvdW50cnk7XG5cbiAgICAgIFVzZXJTZXJ2aWNlLnVwZGF0ZSgkcm9vdFNjb3BlLnVzZXIuaWQsIHZtLmRhdGEpLnRoZW4oZnVuY3Rpb24ocmVzcCkge1xuICAgICAgICB2bS5kYXRhID0gcmVzcDtcbiAgICAgICAgdm0uZXJyb3IgPSBmYWxzZTtcbiAgICAgICAgdm0uZGF0YS5iaXJ0aCA9IG1vbWVudCh2bS5kYXRhLmJpcnRoKS50b0RhdGUoKTtcbiAgICAgIH0sIGZ1bmN0aW9uKGVycikge1xuICAgICAgICB2bS5lcnJvciA9IHRydWU7XG4gICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xuICAgICAgICB2bS5sb2FkaW5nID0gZmFsc2U7XG4gICAgICB9KTtcblxuICAgIH07XG4gIH1cblxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgICAgICAuY29udHJvbGxlcignUHJvb3ZlZG9yZXNDb250cm9sbGVyJywgQ29udHJvbGxlcik7XG5cbiAgICBDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsJyRodHRwJywgJyRtZERpYWxvZycsICckc2llbWJyYXMnLCAnJHByb292ZWRvcmVzJ107XG5cbiAgICAvKiBAbmdJbmplY3QgKi9cbiAgICBmdW5jdGlvbiBDb250cm9sbGVyKCRzY29wZSwgJGh0dHAsICRtZERpYWxvZywgJHNpZW1icmFzLCAkcHJvb3ZlZG9yZXMpIHtcbiAgICAgICAgdmFyIHZtID0gdGhpcztcblxuICAgICAgICB2bS50aXRsZSA9ICdQcm9vdmVkb3Jlcyc7XG5cbiAgICAgICAgdm0uZ2V0RGF0YSA9IGdldERhdGE7XG4gICAgICAgIHZtLnRvZ2dsZVNlYXJjaCA9IGZhbHNlO1xuICAgICAgICB2bS50aW1lb3V0ID0gZmFsc2U7XG4gICAgICAgIHZtLml0ZW0gPSBbXTtcblxuICAgICAgICB2bS50YWJsZSA9IHtcbiAgICAgICAgICB0aXRsZTogJ0ludmVudGFyaW8gZGUgUHJvb3ZlZG9yZXMnLFxuICAgICAgICAgIHNlYXJjaDoge1xuICAgICAgICAgICAgcGxhY2Vob2xkZXI6ICdOb21icmUnXG4gICAgICAgICAgfSxcbiAgICAgICAgICBkZXRhaWw6IHtcbiAgICAgICAgICAgIHRpdGxlOiBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgIHJldHVybiAnUHJvb3ZlZG9yOiAnICsgZGF0YS5qb2luKCcgJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICB9XG5cbiAgICAgICAgdm0ucXVlcnkgPSB7XG4gICAgICAgICAgb3JkZXI6ICctdXBkYXRlZCcsXG4gICAgICAgICAgbGltaXQ6IDEwLFxuICAgICAgICAgIHBhZ2U6IDEsXG4gICAgICAgICAgZmlsdGVyOiAnJ1xuICAgICAgICB9O1xuXG4gICAgICAgIHZhciBjbGllbnRPYmplY3QgPSB7XG4gICAgICAgICAgbm9tYnJlOiAnJyxcbiAgICAgICAgICBkZXNjcmlwY2lvbjogJycsXG4gICAgICAgICAgY2F0ZWdvcmlhOiAnJyxcbiAgICAgICAgICBkaXJlY2Npb246ICcnLFxuICAgICAgICAgIHRlbGVmb25vOiAnJyxcbiAgICAgICAgfVxuXG4gICAgICAgIHZhciBmaWVsZHNNZXRhID0gW3tcbiAgICAgICAgICBuYW1lOiAnbm9tYnJlJyxcbiAgICAgICAgICB0eXBlOiAndGV4dCcsXG4gICAgICAgICAgaWNvbjogJ3Blcm1faWRlbnRpdHknXG4gICAgICAgIH0sIHtcbiAgICAgICAgICBuYW1lOiAnZGVzY3JpcGNpb24nLFxuICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICBpY29uOiAncGVybV9pZGVudGl0eSdcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6ICdjYXRlZ29yaWEnLFxuICAgICAgICAgIHR5cGU6ICdzZWxlY3QnLFxuICAgICAgICAgIGljb246ICdwZXJtX2lkZW50aXR5JyxcbiAgICAgICAgICBoYW5kbGVyOiAnZ2V0UHJvb3ZlZG9yQ2F0ZWdvcmlhJyxcbiAgICAgICAgICBwbGFjZWhvbGRlcjogJ0NhdGVnb3JpYSdcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6ICd0ZWxlZm9ubycsXG4gICAgICAgICAgdHlwZTogJ3RleHQnLFxuICAgICAgICAgIGljb246ICdwaG9uZSdcbiAgICAgICAgfSwge1xuICAgICAgICAgIG5hbWU6ICdkaXJlY2Npb24nLFxuICAgICAgICAgIHR5cGU6ICd0ZXh0JyxcbiAgICAgICAgICBpY29uOiAncGxhY2UnXG4gICAgICAgIH1dO1xuXG5cbiAgICAgICAgYWN0aXZhdGUoKTtcblxuICAgICAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnUHJvb3ZlZG9yZXNDb250cm9sbGVyJyk7XG4gICAgICAgICAgZ2V0RGF0YSgpO1xuICAgICAgICB9XG5cblxuXG4gICAgICAgIHZtLnJlc2V0VGFibGUgPSBmdW5jdGlvbigpIHtcbiAgICAgICAgICB2bS50b2dnbGVTZWFyY2ggPSBmYWxzZTtcbiAgICAgICAgICB2bS5xdWVyeS5maWx0ZXIgPSAnJztcbiAgICAgICAgICBnZXREYXRhKCk7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBzdWNjZXNzKGRhdGEpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhkYXRhKTtcbiAgICAgICAgICB2bS5kYXRhID0gZGF0YTtcbiAgICAgICAgfVxuXG4gICAgICAgIGZ1bmN0aW9uIGdldERhdGEoKSB7XG4gICAgICAgICAgdm0uaXRlbSA9IFtdO1xuICAgICAgICAgIHZtLnByb21pc2UgPSAkc2llbWJyYXMuZ2V0UHJvb3ZlZG9yZXModm0ucXVlcnkpXG4gICAgICAgICAgICAudGhlbihzdWNjZXNzKTtcbiAgICAgICAgfVxuXG5cbiAgICAgICAgdm0uc3Bhd25Nb2RhbCA9IGZ1bmN0aW9uKGV2LCBpc05ldykge1xuXG4gICAgICAgICAgJG1kRGlhbG9nLnNob3coe1xuICAgICAgICAgICAgICBjb250cm9sbGVyOiAnTW9kYWxDb250cm9sbGVyJyxcbiAgICAgICAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3MvbW9kYWxzL3VwZGF0ZUNsaWVudE1vZGFsLmh0bWwnLFxuICAgICAgICAgICAgICBwYXJlbnQ6IGFuZ3VsYXIuZWxlbWVudChkb2N1bWVudC5ib2R5KSxcbiAgICAgICAgICAgICAgdGFyZ2V0RXZlbnQ6IGV2LFxuICAgICAgICAgICAgICBjbGlja091dHNpZGVUb0Nsb3NlOiBmYWxzZSxcbiAgICAgICAgICAgICAgZnVsbHNjcmVlbjogdHJ1ZSxcbiAgICAgICAgICAgICAgbG9jYWxzOiB7XG4gICAgICAgICAgICAgICAgcGF5bG9hZDoge1xuICAgICAgICAgICAgICAgICAgdHlwZTogJ3Byb292ZWRvcmVzJyxcbiAgICAgICAgICAgICAgICAgIGhhbmRsZXI6IGlzTmV3ID8gJ2NyZWF0ZVByb292ZWRvcicgOiAndXBkYXRlUHJvb3ZlZG9yJyxcbiAgICAgICAgICAgICAgICAgIHRpdGxlOiBpc05ldyA/ICdSZWdpc3RyYXIgUHJvb3ZlZG9yJyA6ICdBY3R1YWxpemFyIERhdG9zIFByb292ZWRvcicsXG4gICAgICAgICAgICAgICAgICBkYXRhOiAhXy5pc0VtcHR5KHZtLml0ZW0pID8gXy5tYXBWYWx1ZXMoXy5oZWFkKHZtLml0ZW0pLCBmdW5jdGlvbihpKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBpLmhhc093blByb3BlcnR5KCdpZCcpID8gaS5pZCA6IGk7XG4gICAgICAgICAgICAgICAgICB9KSA6IGNsaWVudE9iamVjdCxcbiAgICAgICAgICAgICAgICAgIGZpZWxkczogZmllbGRzTWV0YSxcbiAgICAgICAgICAgICAgICAgIG9wdGlvbnM6IHtcblxuICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKGFuc3dlcikge1xuICAgICAgICAgICAgICBpZiAoIWFuc3dlcikgcmV0dXJuO1xuICAgICAgICAgICAgICB2bS5xdWVyeS5vcmRlciA9IGlzTmV3ID8gJy1jcmVhdGVkJyA6ICctdXBkYXRlZCc7XG4gICAgICAgICAgICAgIGdldERhdGEoKTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY2FuY2VsbGVkJyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG5cbiAgICAgICAgdm0uc3Bhd25EZWxldGVNb2RhbCA9IGZ1bmN0aW9uKGV2LCBpZCkge1xuXG4gICAgICAgICAgdmFyIGNvbmZpcm0gPSAkbWREaWFsb2cuY29uZmlybSgpXG4gICAgICAgICAgICAudGl0bGUoJ0VzdGEgc2VndXJvIGRlIGVsaW1pbmFyIGVzdGEgaW5mb3JtYWNpb24/JylcbiAgICAgICAgICAgIC50ZXh0Q29udGVudCgnTGEgaW5mb3JtYWNpb24gc2VyYSBlbGltaW5hZGEgZGUgbGEgYmFzZSBkZSBkYXRvcyB5IG5vIHBvZHJhIHNlciByZWN1cGVyYWRhJylcbiAgICAgICAgICAgIC5hcmlhTGFiZWwoJ0NvbmZpcm0gRGlhbG9nJylcbiAgICAgICAgICAgIC50YXJnZXRFdmVudChldilcbiAgICAgICAgICAgIC5vaygnRWxpbWluYXInKVxuICAgICAgICAgICAgLmNhbmNlbCgnQ2FuY2VsYXInKTtcblxuICAgICAgICAgICRtZERpYWxvZy5zaG93KGNvbmZpcm0pXG4gICAgICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICAgICAgcmV0dXJuICRwcm9vdmVkb3Jlc1snZGVsZXRlUHJvb3ZlZG9yJ10oaWQpXG4gICAgICAgICAgICAgICAgLnRoZW4oZnVuY3Rpb24ocmVzcCkge1xuICAgICAgICAgICAgICAgICAgZ2V0RGF0YSgpO1xuICAgICAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAgICAgLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgICBjb25zb2xlLmxvZygnY2FuY2VsJyk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuXG5cbiAgICAgICAgJHNjb3BlLiR3YXRjaCgndm0ucXVlcnkuZmlsdGVyJywgZnVuY3Rpb24oY3VycmVudCwgb3JpZ2luYWwpIHtcbiAgICAgICAgICBpZiAoIWN1cnJlbnQpIHJldHVybjtcblxuICAgICAgICAgIGlmICh2bS50aW1lb3V0KSAkdGltZW91dC5jYW5jZWwodm0udGltZW91dCk7XG5cbiAgICAgICAgICB2bS50aW1lb3V0ID0gJHRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgICAgICBnZXREYXRhKCk7XG4gICAgICAgICAgfSwgNTAwKTsgLy8gZGVsYXkgNTAwIG1zXG4gICAgICAgIH0pO1xuXG5cbiAgICAgICAgJHNjb3BlLiR3YXRjaENvbGxlY3Rpb24oJ3ZtLml0ZW0nLCBmdW5jdGlvbihjLCBvKSB7XG4gICAgICAgICAgaWYgKF8uaXNFbXB0eShjKSkgcmV0dXJuO1xuICAgICAgICB9KTtcbiAgICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5jb250cm9sbGVyKCdTZW1pbGxhc0NvbnRyb2xsZXInLCBDb250cm9sbGVyKTtcblxuICBDb250cm9sbGVyLiRpbmplY3QgPSBbJ21vbWVudCcsICckc2NvcGUnLCAnJGh0dHAnLCAnJHEnLCAnJHRpbWVvdXQnLCAnJG1kRGlhbG9nJywgJyRzaWVtYnJhcyddO1xuXG4gIC8qIEBuZ0luamVjdCAqL1xuICBmdW5jdGlvbiBDb250cm9sbGVyKG1vbWVudCwgJHNjb3BlLCAkaHR0cCwgJHEsICR0aW1lb3V0LCAkbWREaWFsb2csICRzaWVtYnJhcykge1xuICAgIHZhciB2bSA9IHRoaXM7XG4gICAgdm0uZ2V0RGF0YSA9IGdldERhdGE7XG4gICAgdm0udG9nZ2xlU2VhcmNoID0gZmFsc2U7XG4gICAgdm0udGltZW91dCA9IGZhbHNlO1xuICAgIHZtLml0ZW0gPSBbXTtcblxuICAgIHZtLnRhYmxlID0ge1xuICAgICAgdGl0bGU6ICdJbnZlbnRhcmlvIGRlIFNlbWlsbGFzJyxcbiAgICAgIHNlYXJjaDoge1xuICAgICAgICBwbGFjZWhvbGRlcjogJ1J1YnJvLCBwcm9vdmVkb3IsIGRlc2NyaXBjaW9uJ1xuICAgICAgfSxcbiAgICAgIGRldGFpbDoge1xuICAgICAgICB0aXRsZTogZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgIHJldHVybiAnU2VtaWxsYTogJyArIGRhdGEuam9pbignICcpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIHZtLnF1ZXJ5ID0ge1xuICAgICAgb3JkZXI6ICduaXZlbF9nZXJtaW5hY2lvbicsXG4gICAgICBsaW1pdDogMTAsXG4gICAgICBwYWdlOiAxLFxuICAgICAgZmlsdGVyOiAnJ1xuICAgIH07XG5cblxuICAgIHZhciBmaWVsZHNNZXRhID0gW3tcbiAgICAgIG5hbWU6ICdkZXNjcmlwY2lvbicsXG4gICAgICB0eXBlOiAndGV4dCcsXG4gICAgICBpY29uOiAnZGVzY3JpcHRpb24nXG4gICAgfSwge1xuICAgICAgbmFtZTogJ2ZlY2hhX2NvbXByYScsXG4gICAgICB0eXBlOiAnZGF0ZScsXG4gICAgICBpY29uOiAndG9kYXknLFxuICAgICAgcGxhY2Vob2xkZXI6ICdGZWNoYSBDb21wcmEnXG4gICAgfSwge1xuICAgICAgbmFtZTogJ3ByZWNpb19jb21wcmEnLFxuICAgICAgdHlwZTogJ251bWJlcicsXG4gICAgICBpY29uOiAnYXR0YWNoX21vbmV5J1xuICAgIH0sIHtcbiAgICAgIG5hbWU6ICdjYW50aWRhZCcsXG4gICAgICB0eXBlOiAnbnVtYmVyJyxcbiAgICAgIGljb246ICdpbmZvJ1xuICAgIH0sIHtcbiAgICAgIG5hbWU6ICd1bmlkYWQnLFxuICAgICAgdHlwZTogJ3NlbGVjdCcsXG4gICAgICBpY29uOiAnaW5mbycsXG4gICAgICBoYW5kbGVyOiAnZ2V0VW5pZGFkZXMnLFxuICAgICAgcGxhY2Vob2xkZXI6ICdVbmlkYWQnXG4gICAgfSwge1xuICAgICAgbmFtZTogJ2ZhbWlsaWEnLFxuICAgICAgdHlwZTogJ3NlbGVjdCcsXG4gICAgICBpY29uOiAndGV4dF9maWVsZHMnLFxuICAgICAgaGFuZGxlcjogJ2dldFJ1YnJvcycsXG4gICAgICBwbGFjZWhvbGRlcjogJ1J1YnJvJyxcbiAgICAgIG1hcDoge1xuICAgICAgICBpZDogJ2lkJyxcbiAgICAgICAgbmFtZTogJ25vbWJyZSdcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBuYW1lOiAncHJvb3ZlZG9yJyxcbiAgICAgIHR5cGU6ICdzZWxlY3QnLFxuICAgICAgaWNvbjogJ3Blcm1faWRlbnRpdHknLFxuICAgICAgaGFuZGxlcjogJ2dldFByb292ZWRvcmVzJyxcbiAgICAgIHBsYWNlaG9sZGVyOiAnUHJvb3ZlZG9yJ1xuICAgIH0sIHtcbiAgICAgIG5hbWU6ICduaXZlbF9nZXJtaW5hY2lvbicsXG4gICAgICB0eXBlOiAndGV4dCcsXG4gICAgICBpY29uOiAnaW5mbydcbiAgICB9XTtcblxuXG4gICAgdmFyIGNsaWVudE9iamVjdCA9IHtcbiAgICAgIHByb292ZWRvcjogJycsXG4gICAgICBuaXZlbF9nZXJtaW5hY2lvbjogJycsXG4gICAgICBmYW1pbGlhOiAnJyxcbiAgICAgIHVuaWRhZDogJycsXG4gICAgICBjYW50aWRhZDogJycsXG4gICAgICBwcmVjaW9fY29tcHJhOiAnJyxcbiAgICAgIGZlY2hhX2NvbXByYTogbmV3IERhdGUoKVxuICAgIH1cblxuXG4gICAgYWN0aXZhdGUoKTtcblxuICAgIGZ1bmN0aW9uIGFjdGl2YXRlKCkge1xuICAgICAgY29uc29sZS5sb2coJ1NlbWlsbGFzIENvbnRyb2xsZXInKTtcbiAgICAgIGdldERhdGEoKTtcbiAgICB9XG5cbiAgICB2bS5yZXNldFRhYmxlID0gZnVuY3Rpb24oKSB7XG4gICAgICB2bS50b2dnbGVTZWFyY2ggPSBmYWxzZTtcbiAgICAgIHZtLnF1ZXJ5LmZpbHRlciA9ICcnO1xuICAgICAgZ2V0RGF0YSgpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHN1Y2Nlc3MoZGF0YSkge1xuICAgICAgY29uc29sZS5sb2coZGF0YSk7XG4gICAgICB2bS5kYXRhID0gZGF0YTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXREYXRhKCkge1xuICAgICAgdm0ucHJvbWlzZSA9ICRzaWVtYnJhcy5nZXRTZW1pbGxhcyh2bS5xdWVyeSlcbiAgICAgICAgLnRoZW4oc3VjY2Vzcyk7XG4gICAgfVxuXG5cbiAgICB2bS5zcGF3bk1vZGFsID0gZnVuY3Rpb24oZXYsIGlzTmV3KSB7XG5cbiAgICAgICRtZERpYWxvZy5zaG93KHtcbiAgICAgICAgICBjb250cm9sbGVyOiAnTW9kYWxDb250cm9sbGVyJyxcbiAgICAgICAgICB0ZW1wbGF0ZVVybDogJ2Fzc2V0cy92aWV3cy9tb2RhbHMvdXBkYXRlQ2xpZW50TW9kYWwuaHRtbCcsXG4gICAgICAgICAgcGFyZW50OiBhbmd1bGFyLmVsZW1lbnQoZG9jdW1lbnQuYm9keSksXG4gICAgICAgICAgdGFyZ2V0RXZlbnQ6IGV2LFxuICAgICAgICAgIGNsaWNrT3V0c2lkZVRvQ2xvc2U6IGZhbHNlLFxuICAgICAgICAgIGZ1bGxzY3JlZW46IHRydWUsXG4gICAgICAgICAgbG9jYWxzOiB7XG4gICAgICAgICAgICBwYXlsb2FkOiB7XG4gICAgICAgICAgICAgIHR5cGU6ICdzZW1pbGxhcycsXG4gICAgICAgICAgICAgIGhhbmRsZXI6IGlzTmV3ID8gJ2NyZWF0ZVNlbWlsbGEnIDogJ3VwZGF0ZVNlbWlsbGEnLFxuICAgICAgICAgICAgICB0aXRsZTogaXNOZXcgPyAnUmVnaXN0cmFyIFNlbWlsbGEnIDogJ0FjdHVhbGl6YXIgRGF0b3MgU2VtaWxsYScsXG4gICAgICAgICAgICAgIGRhdGE6ICFfLmlzRW1wdHkodm0uaXRlbSkgPyBfLm1hcFZhbHVlcyhfLmhlYWQodm0uaXRlbSksIGZ1bmN0aW9uKGkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gaS5oYXNPd25Qcm9wZXJ0eSgnaWQnKSA/IGkuaWQgOiBpO1xuICAgICAgICAgICAgICB9KSA6IGNsaWVudE9iamVjdCxcbiAgICAgICAgICAgICAgZmllbGRzOiBmaWVsZHNNZXRhLFxuICAgICAgICAgICAgICBvcHRpb25zOiB7XG5cbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLnRoZW4oZnVuY3Rpb24oYW5zd2VyKSB7XG4gICAgICAgICAgaWYgKCFhbnN3ZXIpIHJldHVybjtcbiAgICAgICAgICB2bS5xdWVyeS5vcmRlciA9IGlzTmV3ID8gJy1jcmVhdGVkJyA6ICctdXBkYXRlZCc7XG4gICAgICAgICAgZ2V0RGF0YSgpO1xuICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnY2FuY2VsbGVkJyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgdm0uc3Bhd25EZWxldGVNb2RhbCA9IGZ1bmN0aW9uKGV2LCBpZCkge1xuXG4gICAgICB2YXIgY29uZmlybSA9ICRtZERpYWxvZy5jb25maXJtKClcbiAgICAgICAgLnRpdGxlKCdFc3RhIHNlZ3VybyBkZSBlbGltaW5hciBlc3RhIGluZm9ybWFjaW9uPycpXG4gICAgICAgIC50ZXh0Q29udGVudCgnTGEgaW5mb3JtYWNpb24gc2VyYSBlbGltaW5hZGEgZGUgbGEgYmFzZSBkZSBkYXRvcyB5IG5vIHBvZHJhIHNlciByZWN1cGVyYWRhJylcbiAgICAgICAgLmFyaWFMYWJlbCgnQ29uZmlybSBEaWFsb2cnKVxuICAgICAgICAudGFyZ2V0RXZlbnQoZXYpXG4gICAgICAgIC5vaygnRWxpbWluYXInKVxuICAgICAgICAuY2FuY2VsKCdDYW5jZWxhcicpO1xuXG4gICAgICAkbWREaWFsb2cuc2hvdyhjb25maXJtKVxuICAgICAgICAudGhlbihmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gJHBlZGlkb3NbJ2RlbGV0ZUNsaWVudGUnXShpZClcbiAgICAgICAgICAgIC50aGVuKGZ1bmN0aW9uKHJlc3ApIHtcbiAgICAgICAgICAgICAgZ2V0RGF0YSgpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnY2FuY2VsJyk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuXG4gICAgJHNjb3BlLiR3YXRjaCgndm0ucXVlcnkuZmlsdGVyJywgZnVuY3Rpb24oY3VycmVudCwgb3JpZ2luYWwpIHtcbiAgICAgIGlmICghY3VycmVudCkgcmV0dXJuO1xuXG4gICAgICBpZiAodm0udGltZW91dCkgJHRpbWVvdXQuY2FuY2VsKHZtLnRpbWVvdXQpO1xuXG4gICAgICB2bS50aW1lb3V0ID0gJHRpbWVvdXQoZnVuY3Rpb24oKSB7XG4gICAgICAgIGdldERhdGEoKTtcbiAgICAgIH0sIDUwMCk7IC8vIGRlbGF5IDUwMCBtc1xuICAgIH0pO1xuXG5cbiAgICAkc2NvcGUuJHdhdGNoQ29sbGVjdGlvbigndm0uaXRlbScsIGZ1bmN0aW9uKGMsIG8pIHtcbiAgICAgIGlmIChfLmlzRW1wdHkoYykpIHJldHVybjtcbiAgICAgIHZtLml0ZW1bMF1bJ2ZlY2hhX2NvbXByYSddID0gbmV3IERhdGUodm0uaXRlbVswXVsnZmVjaGFfY29tcHJhJ10pO1xuICAgIH0pO1xuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgICAgICAgLmNvbnRyb2xsZXIoJ1N1ZWxvc0NvbnRyb2xsZXInLCBDb250cm9sbGVyKTtcblxuICAgIENvbnRyb2xsZXIuJGluamVjdCA9IFsnJGh0dHAnLCAnJHEnXTtcblxuICAgIC8qIEBuZ0luamVjdCAqL1xuICAgIGZ1bmN0aW9uIENvbnRyb2xsZXIoJGh0dHAsICRxKSB7XG4gICAgICAgIHZhciB2bSA9IHRoaXM7XG5cbiAgICAgICAgYWN0aXZhdGUoKTtcblxuICAgICAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnU3VlbG9zIENvbnRyb2xsZXInKTtcbiAgICAgICAgfVxuICAgIH1cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmZpbHRlcignZm9ybWF0dGVyJywgZmlsdGVyKTtcblxuICBmdW5jdGlvbiBmaWx0ZXIoKSB7XG4gICAgcmV0dXJuIGZpbHRlckZpbHRlclxuXG4gICAgZnVuY3Rpb24gZmlsdGVyRmlsdGVyKHBhcmFtcykge1xuICAgICAgdmFyIG9wY2lvbmVzID0ge1xuICAgICAgICAxOiAnRGVzbWFsZXphbWllbnRvJyxcbiAgICAgICAgMjogJ1JpZWdvJyxcbiAgICAgICAgMzogJ0ZlcnRpbGl6YWNpb24nLFxuICAgICAgICA0OiAnUGxhZ3VpY2lkYScsXG4gICAgICAgIDU6ICdMaW1waWV6YSdcbiAgICAgIH1cbiAgICAgIHJldHVybiBvcGNpb25lc1twYXJhbXNdO1xuICAgIH1cbiAgfVxufSkoKTtcbiIsIi8qKlxuICogQG5nZG9jIGNvbnRyb2xsZXJcbiAqIEBuYW1lIEhvbWVDb250cm9sbGVyXG4gKiBAcmVxdWlyZXMgJHJvb3RTY29wZVxuICogQGRlc2NyaXB0aW9uXG4gKlxuICogTWFuZWphIGVsIGNvbXBvcnRhbWllbnRvIGRlIGxhIHZpc3RhIHByaW5jaXBhbFxuICpcbiAqL1xuXG4oZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmNvbnRyb2xsZXIoJ0hvbWVDb250cm9sbGVyJywgSG9tZUNvbnRyb2xsZXIpO1xuXG4gIEhvbWVDb250cm9sbGVyLiRpbmplY3QgPSBbJyRyb290U2NvcGUnLCAnalF1ZXJ5JywgXTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gSG9tZUNvbnRyb2xsZXIoJHJvb3RTY29wZSwgalF1ZXJ5KSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICB2bS50aXRsZSA9ICdIb21lIENvbnRyb2xsZXInO1xuICAgIHZtLnNjcm9sbFRvID0gc2Nyb2xsVG87XG4gICAgdm0uYWN0aXZpZGFkZXMgPSBbXTtcblxuICAgIGFjdGl2YXRlKCk7XG5cbiAgICAvLy8vLy8vLy8vLy8vLy8vXG5cbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdIb21lQ29udHJvbGxlcicpO1xuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gc2Nyb2xsVG8oZWxlbWVudCkge1xuICAgICAgalF1ZXJ5KCdodG1sLCBib2R5JykuYW5pbWF0ZSh7XG4gICAgICAgIHNjcm9sbFRvcDogalF1ZXJ5KGVsZW1lbnQpLm9mZnNldCgpLnRvcFxuICAgICAgfSwgMTAwMCk7XG4gICAgfVxuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5jb250cm9sbGVyKCdMb2dpbkNvbnRyb2xsZXInLCBMb2dpbkNvbnRyb2xsZXIpO1xuXG4gIExvZ2luQ29udHJvbGxlci4kaW5qZWN0ID0gWyckc3RhdGUnLCAnQXV0aCddO1xuXG4gIGZ1bmN0aW9uIExvZ2luQ29udHJvbGxlcigkc3RhdGUsIEF1dGgpIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIHZtLmxvYWRpbmcgPSBmYWxzZTtcblxuICAgIC8vLy8vLy8vLy8vLy8vLy9cblxuICAgIHZtLmF1dGggPSBmdW5jdGlvbigpIHtcbiAgICBcdGNvbnNvbGUubG9nKCdMT0dJTicsIHZtLnVzZXIpO1xuICAgICAgdm0ubG9hZGluZyA9IHRydWU7XG4gICAgICBBdXRoLmxvZ2luKHZtLnVzZXIpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgICAgJHN0YXRlLmdvKCdkYXNoYm9hcmQnKTtcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSkuZmluYWxseShmdW5jdGlvbigpIHtcbiAgICAgICAgdm0ubG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSk7XG4gICAgfTtcblxuICB9XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmNvbnRyb2xsZXIoJ1NpZ251cENvbnRyb2xsZXInLCBTaWdudXBDb250cm9sbGVyKTtcblxuICBTaWdudXBDb250cm9sbGVyLiRpbmplY3QgPSBbJyRyb290U2NvcGUnLCAnJG1kRGlhbG9nJywgJyRzY29wZScsICdBdXRoJywgJyR1dGlsJ107XG5cbiAgZnVuY3Rpb24gU2lnbnVwQ29udHJvbGxlcigkcm9vdFNjb3BlLCAkbWREaWFsb2csICRzY29wZSwgQXV0aCwgJHV0aWwpIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIHZtLmRhdGEgPSB7XG4gICAgICBjb3VudHJ5OiBudWxsXG4gICAgfTtcblxuICAgIHZtLmxvYWRpbmcgPSBmYWxzZTtcbiAgICB2bS5pc0NvbmZpcm0gPSB0cnVlO1xuICAgIHZtLmF2YWlsYWJpbGl0eSA9IHRydWU7XG4gICAgdm0uY291bnRyaWVzID0gJHV0aWwuZ2V0Q291bnRyaWVzKCk7XG5cbiAgICAvLy8vLy8vLy8vLy8vLy8vXG5cbiAgICBhY3RpdmF0ZSgpO1xuXG5cbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdzaWdudXAgY29udHJvbGxlcicpO1xuICAgIH1cblxuICAgIHZtLmF1dG9jb21wbGV0ZUNvdW50cnkgPSBmdW5jdGlvbihxdWVyeSkge1xuICAgICAgcmV0dXJuIGF1dG9jb21wbGV0ZUNvdW50cnkocXVlcnkpO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBhdXRvY29tcGxldGVDb3VudHJ5KHF1ZXJ5KSB7XG4gICAgICB2YXIgcmVzdWx0cyA9IHF1ZXJ5ID8gdm0uY291bnRyaWVzLmZpbHRlcihjcmVhdGVGaWx0ZXJGb3IocXVlcnkpKSA6IHZtLmNvdW50cmllcztcbiAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUZpbHRlckZvcihxdWVyeSkge1xuICAgICAgdmFyIGNhcGl0YWxpemVRdWVyeSA9IF8uY2FwaXRhbGl6ZShxdWVyeSk7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gZmlsdGVyRm4oY291bnRyeSkge1xuICAgICAgICByZXR1cm4gKGNvdW50cnkubmFtZS5pbmRleE9mKGNhcGl0YWxpemVRdWVyeSkgPT09IDApO1xuICAgICAgfTtcbiAgICB9XG5cbiAgICB2bS5zaWdudXBBdHRlbXB0ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2bS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgIHZhciBjb3VudHJ5ID0gdm0uZGF0YS5jb3VudHJ5O1xuICAgICAgdm0uZGF0YS5jb3VudHJ5ID0gY291bnRyeS5pZDtcbiAgICAgIEF1dGgucmVnaXN0ZXIodm0uZGF0YSkudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgQXV0aC5zZXRDcmVkZW50aWFscyhyZXMpO1xuICAgICAgICAkbWREaWFsb2cuaGlkZSgpO1xuICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIHZtLmVycm9yID0gdHJ1ZTtcbiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZtLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIH0pO1xuICAgIH07XG5cblxuICAgIHZtLmNoZWNrQ3JlZGVudGFpbHNBdmFpbGFiaWxpdHkgPSBmdW5jdGlvbihjcmVkZW50aWFsKSB7XG4gICAgICB2YXIgcXVlcnkgPSB7fTtcbiAgICAgIHZtLmF2YWlsYWJpbGl0eSA9IHRydWU7XG5cbiAgICAgIGlmICghdm0uZGF0YVtjcmVkZW50aWFsXSkgcmV0dXJuO1xuXG4gICAgICB2bS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgIHF1ZXJ5W2NyZWRlbnRpYWxdID0gdm0uZGF0YVtjcmVkZW50aWFsXTtcbiAgICAgIEF1dGguY3JlZGVudGlhbEF2YWxpYWJpbGl0eShxdWVyeSkudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgdm0uYXZhaWxhYmlsaXR5ID0gcmVzLmF2YWlsYWJpbGl0eTtcbiAgICAgICAgdm0ubG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSwgZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIHZtLmVycm9yID0gdHJ1ZTtcbiAgICAgICAgdm0ubG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIHZtLmNvbXBhcmUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHZtLmlzQ29uZmlybSA9IHZtLmRhdGEuY29uZmlybVBhc3N3b3JkID09IHZtLmRhdGEucGFzc3dvcmQ7XG4gICAgfTtcblxuXG4gICAgdm0uY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgICAgICRtZERpYWxvZy5jYW5jZWwoKTtcbiAgICB9O1xuXG4gICAgJHNjb3BlLiR3YXRjaCgndm0uZGF0YScsIGZ1bmN0aW9uKGMsIG8pIHtcbiAgICAgIGNvbnNvbGUubG9nKGMpO1xuICAgIH0sIHRydWUpXG4gIH1cblxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuZGlyZWN0aXZlKCdhZGJPcmRlcnNDYW1wYWlnbicsIGRpcmVjdGl2ZSk7XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIGRpcmVjdGl2ZSgpIHtcbiAgICB2YXIgZGlyZWN0aXZlID0ge1xuICAgICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgICB0ZW1wbGF0ZVVybDogJ2Fzc2V0cy92aWV3cy9vcmRlcnMvb3JkZXJzLmNhbXBhaWduLmh0bWwnLFxuICAgICAgc2NvcGU6IHtcbiAgICAgICAgb3B0aW9uczogJz0nLFxuICAgICAgICBmb3JtOiAnPScsXG4gICAgICAgIHRvdGFsOiAnPScsXG4gICAgICAgIGNvbnRyb2w6ICc9J1xuICAgICAgfSxcbiAgICAgIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlXG4gICAgfTtcblxuICAgIHJldHVybiBkaXJlY3RpdmU7XG4gIH1cblxuICBDb250cm9sbGVyLiRpbmplY3QgPSBbJyRzY29wZScsICckcScsICdDYXRlZ29yeVNlcnZpY2UnLCAndWlHbWFwR29vZ2xlTWFwQXBpJ107XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIENvbnRyb2xsZXIoJHNjb3BlLCAkcSwgQ2F0ZWdvcnlTZXJ2aWNlLCB1aUdtYXBHb29nbGVNYXBBcGkpIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuICAgIHZhciBQbGFjZXMgPSBudWxsO1xuICAgIHZhciBQbGFjZXNBdXRvY29tcGxldGUgPSBudWxsO1xuXG4gICAgdm0uaW50ZXJlc3RzID0gW107XG4gICAgdm0uY2F0ZWdvcmllcyA9IFtdO1xuICAgIHZtLmNhdGVnb3JpZXNSZWFkeSA9IGZhbHNlO1xuICAgIGFjdGl2YXRlKCk7XG5cbiAgICAvLy8vLy8vLy8vLy8vLy8vXG5cbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdjYW1wYWlnbiBkaXJlY3RpdmUnKTtcblxuICAgICAgdWlHbWFwR29vZ2xlTWFwQXBpLnRoZW4oZnVuY3Rpb24obWFwcykge1xuICAgICAgICBjb25zb2xlLmxvZyhtYXBzKTtcbiAgICAgICAgUGxhY2VzQXV0b2NvbXBsZXRlID0gbmV3IG1hcHMucGxhY2VzLkF1dG9jb21wbGV0ZVNlcnZpY2UoKTtcbiAgICAgICAgdm0ucGxhY2VzUmVhZHkgPSB0cnVlO1xuICAgICAgfSk7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBnZXRDYXRlZ29yaWVzKCkge1xuICAgICAgdm0ubG9hZGluZyA9IHRydWU7XG4gICAgICBDYXRlZ29yeVNlcnZpY2UuZ2V0Q2F0ZWdvcmllcygnYWxsJywge1xuICAgICAgICBhbGw6IHRydWUsXG4gICAgICAgIG9mZmljaWFsOiB0cnVlLFxuICAgICAgICBjb3VudHJ5OiB2bS5mb3JtLmNvdW50cnlcbiAgICAgIH0pLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIHZtLmNhdGVnb3JpZXMgPSByZXM7XG4gICAgICB9KS5maW5hbGx5KGZ1bmN0aW9uKCkge1xuICAgICAgICB2bS5sb2FkaW5nID0gZmFsc2U7XG4gICAgICB9KTtcbiAgICB9XG5cbiAgICB2bS5hdXRvY29tcGxldGVDaXRpZXMgPSBmdW5jdGlvbihhZGRyZXNzKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICBQbGFjZXNBdXRvY29tcGxldGUuZ2V0UXVlcnlQcmVkaWN0aW9ucyh7XG4gICAgICAgIGlucHV0OiBhZGRyZXNzLFxuICAgICAgfSwgZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEgPyBfLmZpbHRlcihfLmZpbHRlcihkYXRhLCAncGxhY2VfaWQnKSwgZnVuY3Rpb24oaSkge1xuICAgICAgICAgIHJldHVybiBfLmluY2x1ZGVzKGkudHlwZXMsICdsb2NhbGl0eScpIHx8IF8uaW5jbHVkZXMoaS50eXBlcywgJ2FkbWluaXN0cmF0aXZlX2FyZWFfbGV2ZWxfMycpO1xuICAgICAgICB9KSA6IFtdKTtcbiAgICAgIH0pO1xuXG4gICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICB9O1xuXG4gICAgdm0uYXV0b2NvbXBsZXRlU3RhdGVzID0gZnVuY3Rpb24oYWRkcmVzcykge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcblxuICAgICAgUGxhY2VzQXV0b2NvbXBsZXRlLmdldFF1ZXJ5UHJlZGljdGlvbnMoe1xuICAgICAgICBpbnB1dDogYWRkcmVzcyxcbiAgICAgIH0sIGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhID8gXy5maWx0ZXIoXy5maWx0ZXIoZGF0YSwgJ3BsYWNlX2lkJyksIGZ1bmN0aW9uKGkpIHtcbiAgICAgICAgICByZXR1cm4gXy5pbmNsdWRlcyhpLnR5cGVzLCAnYWRtaW5pc3RyYXRpdmVfYXJlYV9sZXZlbF8xJykgfHwgXy5pbmNsdWRlcyhpLnR5cGVzLCAnYWRtaW5pc3RyYXRpdmVfYXJlYV9sZXZlbF8yJyk7XG4gICAgICAgIH0pIDogW10pO1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH07XG5cbiAgICB2bS5hdXRvY29tcGxldGVDb3VudHJpZXMgPSBmdW5jdGlvbihhZGRyZXNzKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICBQbGFjZXNBdXRvY29tcGxldGUuZ2V0UXVlcnlQcmVkaWN0aW9ucyh7XG4gICAgICAgIGlucHV0OiBhZGRyZXNzLFxuICAgICAgfSwgZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEgPyBfLmZpbHRlcihfLmZpbHRlcihkYXRhLCAncGxhY2VfaWQnKSwgZnVuY3Rpb24oaSkge1xuICAgICAgICAgIHJldHVybiBfLmluY2x1ZGVzKGkudHlwZXMsICdjb3VudHJ5Jyk7XG4gICAgICAgIH0pIDogW10pO1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH07XG5cblxuICAgICRzY29wZS4kd2F0Y2goJ3ZtLmNvbnRyb2wuc2VsZWN0ZWRUYWInLCBmdW5jdGlvbihjLCBvKSB7XG4gICAgICBpZiAoIXZtLmNhdGVnb3JpZXNSZWFkeSAmJiBjID09PSAyKSBnZXRDYXRlZ29yaWVzKCk7XG4gICAgfSwgdHJ1ZSk7XG5cbiAgfVxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuZGlyZWN0aXZlKCdhZGJPcmRlcnNDaGVja291dCcsIGRpcmVjdGl2ZSk7XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIGRpcmVjdGl2ZSgpIHtcbiAgICB2YXIgZGlyZWN0aXZlID0ge1xuICAgICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgICB0ZW1wbGF0ZVVybDogJ2Fzc2V0cy92aWV3cy9vcmRlcnMvb3JkZXJzLmNoZWNrb3V0Lmh0bWwnLFxuICAgICAgc2NvcGU6IHtcbiAgICAgICAgb3B0aW9uczogJz0nLFxuICAgICAgICBmb3JtOiAnPScsXG4gICAgICAgIHRvdGFsOiAnPScsXG4gICAgICAgIHN1Y2Nlc3M6ICc9JyxcbiAgICAgICAgY29udHJvbDonPSdcbiAgICAgIH0sXG4gICAgICBjb250cm9sbGVyOiBDb250cm9sbGVyLFxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxuICAgIH07XG5cbiAgICByZXR1cm4gZGlyZWN0aXZlO1xuICB9XG5cbiAgQ29udHJvbGxlci4kaW5qZWN0ID0gW1xuICAgICdfJyxcbiAgICAnYnJhaW50cmVlJyxcbiAgICAnJHNjb3BlJyxcbiAgICAnJHJvb3RTY29wZScsXG4gICAgJyRodHRwJyxcbiAgICAnJHEnLFxuICAgICdEYXRhU2VydmljZSdcbiAgXTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gQ29udHJvbGxlcihfLCBicmFpbnRyZWUsICRzY29wZSwgJHJvb3RTY29wZSwgJGh0dHAsICRxLCBEYXRhU2VydmljZSkge1xuICAgIHZhciB2bSA9IHRoaXM7XG4gICAgdm0uY2hlY2tvdXQgPSB7fTtcbiAgICB2bS5sb2FkaW5nID0gZmFsc2U7XG4gICAgdm0uYXV0aG9yaXphdGlvbiA9IGZhbHNlO1xuXG5cbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgIERhdGFTZXJ2aWNlLmdldENsaWVudFRva2VuKCkudGhlbihmdW5jdGlvbihyZXMpIHtcbiAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgc2V0dXBHYXRld2F5KHJlcy5jbGllbnRUb2tlbik7XG4gICAgICB9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgY29uc29sZS5sb2coZXJyKTtcbiAgICAgIH0pXG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2V0dXBHYXRld2F5KHRva2VuKSB7XG4gICAgICBicmFpbnRyZWUuc2V0dXAodG9rZW4sICdjdXN0b20nLCB7XG4gICAgICAgIHBheXBhbDoge1xuICAgICAgICAgIGNvbnRhaW5lcjogJ3BheXBhbC1jb250YWluZXInLFxuICAgICAgICAgIHNpbmdsZVVzZTogdHJ1ZSxcbiAgICAgICAgICBhbW91bnQ6ICcwJyxcbiAgICAgICAgICBjdXJyZW5jeTogJ1VTRCcsXG4gICAgICAgICAgbG9jYWxlOiAnZW5fdXMnLFxuICAgICAgICAgIGVuYWJsZVNoaXBwaW5nQWRkcmVzczogZmFsc2VcbiAgICAgICAgfSxcbiAgICAgICAgb25QYXltZW50TWV0aG9kUmVjZWl2ZWQ6IGZ1bmN0aW9uKG9iaikge1xuICAgICAgICAgIGRvU29tZXRoaW5nV2l0aFRoZU5vbmNlKG9iai5ub25jZSk7XG4gICAgICAgIH0sXG4gICAgICAgIG9uUmVhZHk6IGZ1bmN0aW9uKGludGVncmF0aW9uKSB7XG4gICAgICAgICAgdm0uY2hlY2tvdXQgPSBpbnRlZ3JhdGlvbjtcbiAgICAgICAgfVxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgdm0ubGF1bmNoID0gZnVuY3Rpb24oKSB7XG4gICAgICB2bS5sb2FkaW5nID0gdHJ1ZTtcbiAgICAgIHZtLmZvcm0uYW1vdW50ID0gcGFyc2VGbG9hdCh2bS50b3RhbCkudG9GaXhlZCgyKTtcbiAgICAgIERhdGFTZXJ2aWNlLmNyZWF0ZUNhbXBhaWduKHZtLmZvcm0pLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgIHZtLnN1Y2Nlc3MgPSB0cnVlO1xuICAgICAgICAkcm9vdFNjb3BlLmZpbGwgPSB0cnVlO1xuICAgICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICAgIHZtLnN1Y2Nlc3MgPSBmYWxzZTtcbiAgICAgIH0pLmZpbmFsbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZtLmxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICBmdW5jdGlvbiBkb1NvbWV0aGluZ1dpdGhUaGVOb25jZShyZXMpIHtcbiAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG5cbiAgICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgIHZtLmZvcm0ubm9uY2UgPSByZXM7XG4gICAgICAgIHZtLmF1dGhvcml6YXRpb24gPSB0cnVlO1xuICAgICAgfSlcbiAgICB9XG5cblxuICAgIC8vIC8vIFdoZW4geW91IGFyZSByZWFkeSB0byB0ZWFyIGRvd24geW91ciBpbnRlZ3JhdGlvblxuICAgIC8vIGNoZWNrb3V0LnRlYXJkb3duKGZ1bmN0aW9uKCkge1xuICAgIC8vICAgY2hlY2tvdXQgPSBudWxsO1xuICAgIC8vICAgLy8gYnJhaW50cmVlLnNldHVwIGNhbiBzYWZlbHkgYmUgcnVuIGFnYWluIVxuICAgIC8vIH0pO1xuXG4gICAgJHNjb3BlLiR3YXRjaCgndm0uZm9ybScsIGZ1bmN0aW9uKGMsIG8pIHtcbiAgICAgIGlmICghYykgcmV0dXJuO1xuXG4gICAgICBjb25zb2xlLmxvZyhjKTtcbiAgICB9KTtcblxuICAgICRzY29wZS4kd2F0Y2goJ3ZtLmNvbnRyb2wuc2VsZWN0ZWRUYWInLCBmdW5jdGlvbihjLCBvKSB7XG4gICAgICBjb25zb2xlLmxvZygnY3VycmVudCB0YWIgJywgYyk7XG4gICAgICBpZihjID09IDMpIGFjdGl2YXRlKCk7XG4gICAgfSwgdHJ1ZSlcblxuICAgICRzY29wZS4kd2F0Y2goJ3ZtLmNoZWNrb3V0JywgZnVuY3Rpb24oYywgbykge1xuICAgICAgaWYgKCFjKSByZXR1cm47XG5cbiAgICAgIGNvbnNvbGUubG9nKGMpO1xuICAgIH0pO1xuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5kaXJlY3RpdmUoJ2FkYk9yZGVyc0N1c3RvbWVyJywgZGlyZWN0aXZlKTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gZGlyZWN0aXZlKCkge1xuICAgIHZhciBkaXJlY3RpdmUgPSB7XG4gICAgICByZXN0cmljdDogJ0VBJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL29yZGVycy9vcmRlcnMuY3VzdG9tZXIuaHRtbCcsXG4gICAgICBzY29wZToge1xuICAgICAgICBmb3JtOiAnPScsXG4gICAgICAgIGNvbnRyb2w6ICc9J1xuICAgICAgfSxcbiAgICAgIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlXG4gICAgfTtcblxuICAgIHJldHVybiBkaXJlY3RpdmU7XG4gIH1cblxuICBDb250cm9sbGVyLiRpbmplY3QgPSBbJyRodHRwJywgJyRxJywgJyRyb290U2NvcGUnLCAnJG1kRGlhbG9nJywgJ0F1dGgnXTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gQ29udHJvbGxlcigkaHR0cCwgJHEsICRyb290U2NvcGUsICRtZERpYWxvZywgQXV0aCkge1xuICAgIHZhciB2bSA9IHRoaXM7XG4gICAgdm0ubmV4dFRhYiA9IG5leHRUYWI7XG5cbiAgICBmdW5jdGlvbiBuZXh0VGFiKCkge1xuICAgICAgdm0uY29udHJvbC50YWJzWzBdLnZhbGlkID0gZmFsc2U7XG4gICAgICB2bS5jb250cm9sLnRhYnNbMV0udmFsaWQgPSB0cnVlO1xuICAgICAgdm0uY29udHJvbC5zZWxlY3RlZFRhYiArPSAxO1xuICAgIH1cblxuICAgIHZtLmF1dGggPSBmdW5jdGlvbigpIHtcbiAgICAgIHZtLmxvYWRpbmcgPSB0cnVlO1xuICAgICAgQXV0aC5sb2dpbih2bS5mb3JtLmF1dGgpLnRoZW4oZnVuY3Rpb24ocmVzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgIG5leHRUYWIoKTtcbiAgICAgIH0pLmNhdGNoKGZ1bmN0aW9uKGVycikge1xuICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgfSkuZmluYWxseShmdW5jdGlvbigpIHtcbiAgICAgICAgdm0ubG9hZGluZyA9IGZhbHNlO1xuICAgICAgfSk7XG4gICAgfTtcblxuICAgIHZtLnNpZ251cCA9IGZ1bmN0aW9uKCkge1xuICAgICAgJG1kRGlhbG9nLnNob3coe1xuICAgICAgICBmdWxsc2NyZWVuOiB0cnVlLFxuICAgICAgICBjb250cm9sbGVyQXM6ICd2bScsXG4gICAgICAgIGNvbnRyb2xsZXI6ICdTaWdudXBDb250cm9sbGVyJyxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3MvbW9kYWwvc2lnbnVwLmh0bWwnLFxuICAgICAgfSkudGhlbihmdW5jdGlvbiAoKSB7XG4gICAgICAgIG5leHRUYWIoKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgfVxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuY29udHJvbGxlcignT3JkZXJzQ29udHJvbGxlcicsIENvbnRyb2xsZXIpO1xuXG4gIENvbnRyb2xsZXIuJGluamVjdCA9IFtcbiAgICAnXycsXG4gICAgJyRzY29wZScsXG4gICAgJyRyb290U2NvcGUnLFxuICAgICckbWREaWFsb2cnLFxuICAgICckbWRUb2FzdCcsXG4gICAgJ0RhdGFTZXJ2aWNlJyxcbiAgICAnJHV0aWwnXG4gIF07XG5cbiAgZnVuY3Rpb24gQ29udHJvbGxlcihfLCAkc2NvcGUsICRyb290U2NvcGUsICRtZERpYWxvZywgJG1kVG9hc3QsIERhdGFTZXJ2aWNlLCAkdXRpbCkge1xuICAgIHZhciB2bSA9IHRoaXM7XG5cbiAgICB2bS5vcGVuSW1hZ2UgPSBvcGVuSW1hZ2U7XG4gICAgdm0uYWRkID0gYWRkO1xuICAgIHZtLnRvdGFsID0gMDtcbiAgICB2bS5zdWNjZXNzID0gZmFsc2U7XG5cbiAgICB2bS5jb250cm9sID0ge1xuICAgICAgc2VsZWN0ZWRUYWI6ICRyb290U2NvcGUudXNlciA/IDEgOiAwLFxuICAgICAgdGFiczogW3tcbiAgICAgICAgdmFsaWQ6ICRyb290U2NvcGUudXNlciA/IGZhbHNlIDogdHJ1ZSxcbiAgICAgICAgc2hvdzogdHJ1ZVxuICAgICAgfSwge1xuICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICAgIHNob3c6IHRydWUsXG4gICAgICB9LCB7XG4gICAgICAgIHZhbGlkOiBmYWxzZSxcbiAgICAgICAgc2hvdzogdHJ1ZVxuICAgICAgfSwge1xuICAgICAgICB2YWxpZDogZmFsc2UsXG4gICAgICAgIHNob3c6IHRydWVcbiAgICAgIH1dXG4gICAgfTtcblxuICAgIHZtLm9wdGlvbnMgPSB7XG4gICAgICB0YXJnZXQ6IHtcbiAgICAgICAgZGlzcGxheTogW10sXG4gICAgICAgIG1lZGlhOiBbXSxcbiAgICAgICAgaW1wcmVzc2lvbnNVbml0czogW10sXG4gICAgICAgIGltcHJlc3Npb25zVGltZTogW10sXG4gICAgICAgIGRpc3RhbmNlOiBbXSxcbiAgICAgICAgYWdlOiBbXSxcbiAgICAgICAgZ2VuZGVyOiBbXVxuICAgICAgfVxuICAgIH07XG5cbiAgICB2bS5mb3JtID0ge1xuICAgICAgbWVkaWE6IHt9LFxuICAgICAgYmFubmVyOiB7fSxcbiAgICAgIG1hcmtlcjoge30sXG4gICAgICBvcHRpb25zOiB7XG4gICAgICAgIGRpc3BsYXk6IHt9LFxuICAgICAgICBpbXByZXNzaW9uczoge30sXG4gICAgICAgIGRpc3RhbmNlOiB7fSxcbiAgICAgICAgYWdlOiB7fSxcbiAgICAgICAgZ2VuZGVyOiB7fSxcbiAgICAgICAgaW50ZXJlc3RzOiB7fSxcbiAgICAgICAgYWN0aXZpdGllczogW11cbiAgICAgIH0sXG4gICAgICBjdXN0b21lcjoge30sXG4gICAgICBjb3VudHJ5OiAkcm9vdFNjb3BlLnVzZXIgPyAoXy5maW5kKCR1dGlsLmdldENvdW50cmllcygpLCBmdW5jdGlvbihpKSB7XG4gICAgICAgIHJldHVybiBpLm5hbWUgPT09ICRyb290U2NvcGUudXNlci5jb3VudHJ5IHx8IGkuaWQgPT09ICRyb290U2NvcGUudXNlci5jb3VudHJ5O1xuICAgICAgfSkgfHwgJ0NBJykgOiAnQ0EnLFxuICAgICAgc3RhdGU6IG51bGwsXG4gICAgICBjaXR5Om51bGwsXG4gICAgICBjYXRlZ29yaWVzOiBbXVxuICAgIH07XG5cbiAgICBhY3RpdmF0ZSgpO1xuXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG5cbiAgICAgIERhdGFTZXJ2aWNlLmdldE9wdGlvbnMoKS50aGVuKGZ1bmN0aW9uKHJlc3ApIHtcbiAgICAgICAgY29uc29sZS5sb2cocmVzcCk7XG4gICAgICAgIHZtLm9wdGlvbnMudGFyZ2V0ID0gZG9fbWVyZ2UocmVzcCk7XG4gICAgICAgIGNvbnNvbGUubG9nKHZtLmZvcm0pO1xuICAgICAgfSkuY2F0Y2goZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKGVycik7XG4gICAgICB9KVxuICAgIH1cblxuICAgIHZtLnNlbGVjdGVkVGFiID0gZnVuY3Rpb24oKSB7XG4gICAgICByZXR1cm4gJHJvb3RTY29wZS51c2VyID8gdm0uY29udHJvbC5zZWxlY3RlZFRhYiA6IDA7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZG9fbWVyZ2Uocm9sZXMpIHtcblxuICAgICAgLy8gQ3VzdG9tIG1lcmdlIGZ1bmN0aW9uIE9ScyB0b2dldGhlciBub24tb2JqZWN0IHZhbHVlcywgcmVjdXJzaXZlbHlcbiAgICAgIC8vIGNhbGxzIGl0c2VsZiBvbiBPYmplY3RzLlxuICAgICAgdmFyIG1lcmdlciA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgICAgaWYgKF8uaXNPYmplY3QoYSkpIHtcbiAgICAgICAgICByZXR1cm4gXy5tZXJnZSh7fSwgYSwgYiwgbWVyZ2VyKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICByZXR1cm4gYSB8fCBiO1xuICAgICAgICB9XG4gICAgICB9O1xuXG4gICAgICAvLyBBbGxvdyByb2xlcyB0byBiZSBwYXNzZWQgdG8gXy5tZXJnZSBhcyBhbiBhcnJheSBvZiBhcmJpdHJhcnkgbGVuZ3RoXG4gICAgICB2YXIgYXJncyA9IF8uZmxhdHRlbihbe30sIHJvbGVzLCBtZXJnZXJdKTtcbiAgICAgIHJldHVybiBfLm1lcmdlLmFwcGx5KF8sIGFyZ3MpO1xuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gb3BlbkltYWdlKCRldmVudCwgaW1hZ2UpIHtcbiAgICAgICRtZERpYWxvZy5zaG93KHtcbiAgICAgICAgZnVsbHNjcmVlbjogdHJ1ZSxcbiAgICAgICAgdGFyZ2V0RXZlbnQ6ICRldmVudCxcbiAgICAgICAgY2xpY2tPdXRzaWRlVG9DbG9zZTogdHJ1ZSxcbiAgICAgICAgdGVtcGxhdGVVcmw6ICdhcHAvc2hhcmVkL2xheW91dC9pbWFnZU1vZGFsLmh0bWwnLFxuICAgICAgICBsb2NhbHM6IHtcbiAgICAgICAgICBpbWFnZTogaW1hZ2VcbiAgICAgICAgfSxcbiAgICAgICAgY29udHJvbGxlcjogWyckc2NvcGUnLCAnaW1hZ2UnLCBmdW5jdGlvbihzY29wZSwgaW1hZ2UpIHtcbiAgICAgICAgICBzY29wZS5pbWFnZSA9IGltYWdlO1xuICAgICAgICB9XVxuICAgICAgfSk7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBhZGQoKSB7XG4gICAgICAkbWREaWFsb2cuc2hvdyh7XG4gICAgICAgIHRlbXBsYXRlVXJsOiAnYXBwL2NvbXBvbmVudHMvYWQvYWR2ZXJ0aXNlbWVudE1vZGFsLmh0bWwnLFxuICAgICAgICBjbGlja091dHNpZGVUb0Nsb3NlOiB0cnVlLFxuICAgICAgICBmdWxsc2NyZWVuOiB0cnVlXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzaG93VmFsaWROb3RpZmljYXRpb24oKSB7XG4gICAgICAkbWRUb2FzdC5zaG93KFxuICAgICAgICAkbWRUb2FzdC5zaW1wbGUoKVxuICAgICAgICAudGV4dENvbnRlbnQoJ0F3ZXNvbWUsIHlvdSBjYW4gbm93IGdvIHRvIG5leHQgc3RlcCEnKVxuICAgICAgICAucG9zaXRpb24oJ2JvdHRvbSByaWdodCcpXG4gICAgICAgIC5oaWRlRGVsYXkoMzAwMClcbiAgICAgICk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdmFsaWRhdGVCYW5uZXIoZGlzcGxheSkge1xuICAgICAgdmFyIGNoZWNrID0gZmFsc2U7XG4gICAgICBpZiAoZGlzcGxheSA9PT0gJ2JvdGgnKSB7XG4gICAgICAgIGNoZWNrID0gXy5pc0VtcHR5KF8ucGlja0J5KHZtLmZvcm0uYmFubmVyLCBfLmlzTnVsbCkpID8gdHJ1ZSA6IGZhbHNlO1xuICAgICAgICByZXR1cm4gY2hlY2s7XG4gICAgICB9XG5cbiAgICAgIGNoZWNrID0gKHZtLmZvcm0uYmFubmVyLmRlc2NyaXB0aW9uICYmIHZtLmZvcm0uYmFubmVyLnVybCAmJiB2bS5mb3JtLmJhbm5lcltkaXNwbGF5XSkgPyB0cnVlIDogZmFsc2U7XG4gICAgICByZXR1cm4gY2hlY2s7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdmFsaWRhdGVNYXAoKSB7XG4gICAgICByZXR1cm4gIV8uaXNFbXB0eSh2bS5mb3JtLm1hcmtlcik7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdmFsaWRhdGVTdGVwWmVybygpIHtcbiAgICAgIHZhciBtZWRpYSA9IHZtLmZvcm0ubWVkaWEuZGlzcGxheVxuICAgICAgdmFyIGRpc3BsYXkgPSB2bS5mb3JtLm9wdGlvbnMuZGlzcGxheS5kaXNwbGF5O1xuXG4gICAgICBzd2l0Y2ggKGRpc3BsYXkpIHtcbiAgICAgICAgY2FzZSAnYmFubmVyJzpcbiAgICAgICAgICByZXR1cm4gdmFsaWRhdGVCYW5uZXIobWVkaWEpXG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ21hcCc6XG4gICAgICAgICAgcmV0dXJuIHZhbGlkYXRlTWFwKClcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcblxuICAgICAgfVxuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHZhbGlkYXRlRm9ybSgpIHtcbiAgICAgIHN3aXRjaCAodm0uY29udHJvbC5zZWxlY3RlZFRhYikge1xuICAgICAgICBjYXNlIDE6XG4gICAgICAgICAge1xuICAgICAgICAgICAgaWYgKHZtLmZvcm0ubWVkaWEuaGFzT3duUHJvcGVydHkoJ2lkJykgJiYgdm0uZm9ybS5vcHRpb25zLmRpc3BsYXkuaGFzT3duUHJvcGVydHkoJ2lkJykgJiYgdmFsaWRhdGVTdGVwWmVybygpKSB7XG4gICAgICAgICAgICAgIHZtLmNvbnRyb2wudGFic1syXS52YWxpZCA9IHRydWU7XG4gICAgICAgICAgICAgIHNob3dWYWxpZE5vdGlmaWNhdGlvbigpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgdm0uY29udHJvbC50YWJzWzJdLnZhbGlkID0gZmFsc2U7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgICB9XG4gICAgICAgIGNhc2UgMjpcbiAgICAgICAgICB7XG4gICAgICAgICAgICBpZiAodm0uZm9ybS5vcHRpb25zLmltcHJlc3Npb25zLmhhc093blByb3BlcnR5KCdpZCcpKSB7XG4gICAgICAgICAgICAgIHZtLmNvbnRyb2wudGFic1szXS52YWxpZCA9IHRydWU7XG5cbiAgICAgICAgICAgICAgc2hvd1ZhbGlkTm90aWZpY2F0aW9uKCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICB2bS5jb250cm9sLnRhYnNbM10udmFsaWQgPSBmYWxzZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgIH1cbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICBjb25zb2xlLmxvZyh2bS5jb250cm9sLnNlbGVjdGVkVGFiKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuJHdhdGNoKGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuICRyb290U2NvcGUudXNlcjtcbiAgICB9LCBmdW5jdGlvbigpIHtcbiAgICAgIGlmICghJHJvb3RTY29wZS51c2VyKSByZXR1cm47XG5cbiAgICAgIHZtLmZvcm0uY291bnRyeSA9IF8uZmluZCgkdXRpbC5nZXRDb3VudHJpZXMoKSwgZnVuY3Rpb24oaSkge1xuICAgICAgICByZXR1cm4gaS5uYW1lID09PSAkcm9vdFNjb3BlLnVzZXIuY291bnRyeSB8fCBpLmlkID09PSAkcm9vdFNjb3BlLnVzZXIuY291bnRyeTtcbiAgICAgIH0pLmlkO1xuICAgIH0sIHRydWUpO1xuXG4gICAgJHNjb3BlLiR3YXRjaCgndm0uZm9ybScsIGZ1bmN0aW9uKGMsIG8pIHtcbiAgICAgIGNvbnNvbGUubG9nKGMpO1xuXG4gICAgICB2YWxpZGF0ZUZvcm0oKTtcblxuICAgICAgdm0udG90YWwgPSBjLm1lZGlhLmhhc093blByb3BlcnR5KCdmZWUnKSA/IGMubWVkaWEuZmVlIDogMDtcblxuICAgICAgXy5tYXAoYy5vcHRpb25zLCBmdW5jdGlvbihpdGVtKSB7XG4gICAgICAgIGlmIChpdGVtLmhhc093blByb3BlcnR5KCdmZWUnKSkge1xuICAgICAgICAgIHZtLnRvdGFsICs9IHZtLnRvdGFsICogaXRlbS5mZWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAoaXRlbS5oYXNPd25Qcm9wZXJ0eSgnZGlzY291bnQnKSkge1xuICAgICAgICAgIHZtLnRvdGFsIC09IHZtLnRvdGFsICogaXRlbS5kaXNjb3VudDtcbiAgICAgICAgfVxuXG4gICAgICB9KVxuICAgIH0sIHRydWUpXG5cbiAgfVxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuZGlyZWN0aXZlKCdhZGJPcmRlcnNSZXN1bWUnLCBkaXJlY3RpdmUpO1xuXG4gIC8qIEBuZ0luamVjdCAqL1xuICBmdW5jdGlvbiBkaXJlY3RpdmUoKSB7XG4gICAgdmFyIGRpcmVjdGl2ZSA9IHtcbiAgICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgICAgdGVtcGxhdGVVcmw6ICdhc3NldHMvdmlld3Mvb3JkZXJzL29yZGVycy5yZXN1bWUuaHRtbCcsXG4gICAgICBzY29wZToge1xuICAgICAgICBvcHRpb25zOiAnPScsXG4gICAgICAgIGZvcm06ICc9JyxcbiAgICAgICAgdG90YWw6ICc9JyxcbiAgICAgIH0sXG4gICAgICBsaW5rOiBsaW5rRnVuYyxcbiAgICAgIGNvbnRyb2xsZXI6IENvbnRyb2xsZXIsXG4gICAgICBjb250cm9sbGVyQXM6ICd2bScsXG4gICAgICBiaW5kVG9Db250cm9sbGVyOiB0cnVlXG4gICAgfTtcblxuICAgIHJldHVybiBkaXJlY3RpdmU7XG5cbiAgICBmdW5jdGlvbiBsaW5rRnVuYyhzY29wZSwgZWwsIGF0dHIsIGN0cmwpIHtcblxuICAgIH1cbiAgfVxuXG4gIENvbnRyb2xsZXIuJGluamVjdCA9IFsnXycsICckaHR0cCcsICckcSddO1xuXG4gIC8qIEBuZ0luamVjdCAqL1xuICBmdW5jdGlvbiBDb250cm9sbGVyKF8sICRodHRwLCAkcSkge1xuICAgIHZhciB2bSA9IHRoaXM7XG5cbiAgICBhY3RpdmF0ZSgpO1xuXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG5cbiAgICB9XG5cbiAgICB2bS5mb3JtYXRJbXByZXNzaW9ucyA9IGZ1bmN0aW9uKCkge1xuXG4gICAgICBpZiAoIXZtLmZvcm0uaW1wcmVzc2lvblR5cGUgfHwgIXZtLmZvcm0ub3B0aW9ucy5pbXByZXNzaW9ucy5oYXNPd25Qcm9wZXJ0eSgnaWQnKSkgcmV0dXJuO1xuXG4gICAgICB2YXIgdHlwZXMgPSB7XG4gICAgICAgIGltcHJlc3Npb25zVW5pdHM6IF8uam9pbihbdm0uZm9ybS5vcHRpb25zLmltcHJlc3Npb25zLnF1YW50aXR5LCB2bS5mb3JtLm9wdGlvbnMuaW1wcmVzc2lvbnMudHlwZV0sIFwiIFwiKSxcbiAgICAgICAgaW1wcmVzc2lvbnNUaW1lOiBfLmpvaW4oW3ZtLmZvcm0ub3B0aW9ucy5pbXByZXNzaW9ucy50aW1lLCB2bS5mb3JtLm9wdGlvbnMuaW1wcmVzc2lvbnMucGVyaW9kXSwgXCIgXCIpLFxuICAgICAgfVxuXG4gICAgICByZXR1cm4gdHlwZXNbdm0uZm9ybS5pbXByZXNzaW9uVHlwZV07XG4gICAgfVxuXG4gICAgdm0uZm9ybWF0VGFyZ2V0ID0gZnVuY3Rpb24oKSB7XG4gICAgICB2YXIgdGFyZ2V0ID0ge1xuICAgICAgICBkaXN0YW5jZTogIHtcbiAgICAgICAgICB2YWx1ZTogdm0uZm9ybS5vcHRpb25zLmRpc3RhbmNlLFxuICAgICAgICAgIHJlbmRlcjogXy5qb2luKFsnRGlzdGFuY2U6JywgKHZtLmZvcm0ub3B0aW9ucy5kaXN0YW5jZS5kaXN0YW5jZSB8fCAnJyksICdLbSddLCAnICcpXG4gICAgICAgIH0sXG4gICAgICAgIGFnZToge1xuICAgICAgICAgIHZhbHVlOiB2bS5mb3JtLm9wdGlvbnMuYWdlLFxuICAgICAgICAgIHJlbmRlcjogXy5qb2luKFsnQWdlIGJldHdlZW46JywgXy5qb2luKHZtLmZvcm0ub3B0aW9ucy5hZ2UucmFuZ2UsICctJykgXSwgJyAnKVxuICAgICAgICB9LFxuICAgICAgICBnZW5kZXI6ICB7XG4gICAgICAgICAgdmFsdWU6IHZtLmZvcm0ub3B0aW9ucy5nZW5kZXIsXG4gICAgICAgICAgcmVuZGVyOiBfLmpvaW4oWydHZW5kZXI6Jywgdm0uZm9ybS5vcHRpb25zLmdlbmRlci5nZW5kZXIgXSwgJyAnKVxuICAgICAgICB9LFxuICAgICAgICBpbnRlcmVzdHM6IHtcbiAgICAgICAgICB2YWx1ZTogdm0uZm9ybS5vcHRpb25zLmludGVyZXN0cyxcbiAgICAgICAgICByZW5kZXI6IF8uam9pbihbJ0ludGVyZXN0czonLCB2bS5mb3JtLm9wdGlvbnMuaW50ZXJlc3RzLnF1YW50aXR5IF0sICcgJylcbiAgICAgICAgfVxuICAgICAgfVxuXG4gICAgICB2YXIgc2VsZWN0ZWQgPSBfLnBpY2tCeSh0YXJnZXQsIGZ1bmN0aW9uKGkpIHtcbiAgICAgICAgcmV0dXJuIGkudmFsdWUuaGFzT3duUHJvcGVydHkoJ2lkJyk7XG4gICAgICB9KTtcblxuICAgICAgaWYgKF8uaXNFbXB0eShzZWxlY3RlZCkpIHJldHVybiAnJztcblxuICAgICAgcmV0dXJuIF8uam9pbihbJ1RhcmdldDogJywgXy5tYXAoT2JqZWN0LmtleXMoc2VsZWN0ZWQpLCBmdW5jdGlvbihrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRhcmdldFtrZXldLnJlbmRlcjtcbiAgICAgIH0pXSwgJycpO1xuXG4gICAgfVxuXG5cbiAgICB2bS5mb3JtYXRSZXN1bWUgPSBmdW5jdGlvbigpIHtcbiAgICAgIHJldHVybiByZXN1bWU7XG4gICAgfVxuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5kaXJlY3RpdmUoJ2FkYkRpc3BsYXlDaG9vc2VyJywgZGlyZWN0aXZlKTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gZGlyZWN0aXZlKCkge1xuICAgIHZhciBkaXJlY3RpdmUgPSB7XG4gICAgICByZXN0cmljdDogJ0VBJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL29yZGVycy9vcmRlcnMuZGlzcGxheS5odG1sJyxcbiAgICAgIHNjb3BlOiB7XG4gICAgICAgIG9wdGlvbnM6ICc9JyxcbiAgICAgICAgZm9ybTogJz0nLFxuICAgICAgICB0b3RhbDogJz0nXG4gICAgICB9LFxuICAgICAgY29udHJvbGxlcjogQ29udHJvbGxlcixcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWVcbiAgICB9O1xuXG4gICAgcmV0dXJuIGRpcmVjdGl2ZTtcbiAgfVxuXG4gIENvbnRyb2xsZXIuJGluamVjdCA9IFsndWlHbWFwR29vZ2xlTWFwQXBpJyxcbiAgICAndWlHbWFwSXNSZWFkeScsXG4gICAgJyRxJyxcbiAgICAnJHNjb3BlJyxcbiAgICAnJHRpbWVvdXQnLFxuICAgICdEcm9wem9uZVNlcnZpY2UnXG4gIF07XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIENvbnRyb2xsZXIodWlHbWFwR29vZ2xlTWFwQXBpLCB1aUdtYXBJc1JlYWR5LCAkcSwgJHNjb3BlLCAkdGltZW91dCwgRHJvcHpvbmVTZXJ2aWNlKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICB2YXIgUGxhY2VzID0gbnVsbDtcbiAgICB2YXIgRGlyZWN0aW9uUmVuZGVyZXIgPSBudWxsO1xuICAgIHZhciBEaXJlY3Rpb25zU2VydmljZSA9IG51bGw7XG4gICAgdmFyIFBsYWNlc0F1dG9jb21wbGV0ZSA9IG51bGw7XG4gICAgdm0ubWFya2VyQ29uZmlybWVkID0gZmFsc2U7XG4gICAgdm0ucGxhY2VzUmVhZHkgPSBmYWxzZTtcblxuICAgIHZtLmNvbnRyb2wgPSB7XG4gICAgICB1cGxvYWRpbmc6IGZhbHNlXG4gICAgfVxuICAgIHZtLm1hcCA9IHtcbiAgICAgIGNlbnRlcjoge1xuICAgICAgICBsYXRpdHVkZTogNDUuNTAxNzQ1MDI4MTY2NjcsXG4gICAgICAgIGxvbmdpdHVkZTogLTczLjU3MDM4ODE4Mjk5NzdcbiAgICAgIH0sXG4gICAgICB6b29tOiAxNCxcbiAgICAgIG9wdGlvbnM6IHtcbiAgICAgICAgc2Nyb2xsd2hlZWw6IHRydWVcbiAgICAgIH0sXG4gICAgICBtYXBNYXJrZXI6IHRydWUsXG4gICAgICBkaXNhYmxlRGVmYXVsdFVJOiB0cnVlLFxuICAgICAgY29udHJvbDoge30sXG4gICAgICBldmVudHM6IHtcbiAgICAgICAgY2xpY2s6IGNsaWNrTWFwLFxuICAgICAgICBpZGxlOiBib3VuZHNDaGFuZ2VkXG4gICAgICB9XG4gICAgfTtcblxuICAgIHZtLmluZm8gPSB7XG4gICAgICBuYW1lOiAnJyxcbiAgICAgIGFkZHJlc3M6ICcnLFxuICAgICAgaWNvbjogJycsXG4gICAgfVxuXG4gICAgdm0ubWFya2VyID0ge1xuICAgICAgaWQ6IDAsXG4gICAgICBsb2NhdGlvbjoge1xuICAgICAgICBsYXRpdHVkZTogNDUuNTAxNzQ1MDI4MTY2NjcsXG4gICAgICAgIGxvbmdpdHVkZTogLTczLjU3MDM4ODE4Mjk5NzdcbiAgICAgIH0sXG4gICAgICBzaG93OiBmYWxzZSxcbiAgICB9XG5cbiAgICB2bS5kZXNrdG9wRHJvcHpvbmUgPSBEcm9wem9uZVNlcnZpY2UuY3JlYXRlKCdkZXNrdG9wJywgZnVuY3Rpb24oZmlsZSwgcmVzcG9uc2UpIHtcbiAgICAgICRzY29wZS4kYXBwbHkoZnVuY3Rpb24oKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLnNlY3VyZV91cmwpO1xuICAgICAgICB2bS5mb3JtLmJhbm5lci53ZWJzaXRlID0gcmVzcG9uc2Uuc2VjdXJlX3VybDtcbiAgICAgICAgdm0uY29udHJvbC51cGxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIH0pO1xuICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgJHNjb3BlLiRhcHBseShmdW5jdGlvbigpIHtcbiAgICAgICAgdm0uY29udHJvbC51cGxvYWRpbmcgPSB0cnVlO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICB2bS5tb2JpbGVEcm9wem9uZSA9IERyb3B6b25lU2VydmljZS5jcmVhdGUoJ21vYmlsZScsIGZ1bmN0aW9uKGZpbGUsIHJlc3BvbnNlKSB7XG4gICAgICAkc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCkge1xuICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5zZWN1cmVfdXJsKTtcbiAgICAgICAgdm0uZm9ybS5iYW5uZXIuYXBwID0gcmVzcG9uc2Uuc2VjdXJlX3VybDtcbiAgICAgICAgdm0uY29udHJvbC51cGxvYWRpbmcgPSBmYWxzZTtcbiAgICAgIH0pO1xuICAgIH0sIGZ1bmN0aW9uKCkge1xuICAgICAgJHNjb3BlLiRhcHBseShmdW5jdGlvbigpIHtcbiAgICAgICAgdm0uY29udHJvbC51cGxvYWRpbmcgPSB0cnVlO1xuICAgICAgfSk7XG4gICAgfSk7XG5cbiAgICBhY3RpdmF0ZSgpO1xuXG4gICAgLy8vLy8vLy8vLy8vLy8vL1xuXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICBjb25zb2xlLmxvZygnYWN0aXZhdGUnKTtcbiAgICAgIHByZXBhcmVNYXAoKTtcbiAgICB9XG5cbiAgICB2bS5jbGlja01hcmtlciA9IGZ1bmN0aW9uKCkge1xuICAgICAgY29uc29sZS5sb2coJ2NsaWNrJyk7XG4gICAgICB2bS5tYXJrZXIuc2hvdyA9ICF2bS5tYXJrZXIuc2hvdztcbiAgICAgICRzY29wZS4kYXBwbHkoKTtcblxuICAgIH1cblxuICAgIHZtLmF1dG9jb21wbGV0ZUFkZHJlc3MgPSBmdW5jdGlvbihhZGRyZXNzKSB7XG5cbiAgICAgIHZtLm1hcmtlckNvbmZpcm1lZCA9IGZhbHNlO1xuXG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICBQbGFjZXNBdXRvY29tcGxldGUuZ2V0UXVlcnlQcmVkaWN0aW9ucyh7XG4gICAgICAgIGlucHV0OiBhZGRyZXNzXG4gICAgICB9LCBmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSA/IF8uZmlsdGVyKGRhdGEsICdwbGFjZV9pZCcpIDogW10pO1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH07XG5cbiAgICB2bS5nZXRQbGFjZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgY29uc29sZS5sb2codm0uaW5mby5wbGFjZSk7XG5cbiAgICAgIGlmICghdm0uaW5mby5wbGFjZSkge1xuICAgICAgICB2bS5tYXJrZXJDb25maXJtZWQgPSBmYWxzZTtcbiAgICAgICAgcmV0dXJuO1xuICAgICAgfTtcblxuICAgICAgUGxhY2VzLmdldERldGFpbHMoe1xuICAgICAgICBwbGFjZUlkOiB2bS5pbmZvLnBsYWNlLnBsYWNlX2lkXG4gICAgICB9LCBmdW5jdGlvbihwbGFjZSwgc3RhdHVzKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKHBsYWNlLCBzdGF0dXMpO1xuXG4gICAgICAgIHZtLm1hcmtlciA9IHtcbiAgICAgICAgICBpZDogRGF0ZS5ub3coKSxcbiAgICAgICAgICBhZGRyZXNzOiBwbGFjZS5mb3JtYXR0ZWRfYWRkcmVzcyxcbiAgICAgICAgICBuYW1lOiB2bS5pbmZvLm5hbWUsXG4gICAgICAgICAgbG9jYXRpb246IHtcbiAgICAgICAgICAgIGxhdGl0dWRlOiBwYXJzZUZsb2F0KHBsYWNlLmdlb21ldHJ5LmxvY2F0aW9uLmxhdCgpKSxcbiAgICAgICAgICAgIGxvbmdpdHVkZTogcGFyc2VGbG9hdChwbGFjZS5nZW9tZXRyeS5sb2NhdGlvbi5sbmcoKSksXG4gICAgICAgICAgfSxcbiAgICAgICAgICBzaG93OiB0cnVlLFxuICAgICAgICAgIGNvdW50cnk6IF8uZmlsdGVyKHBsYWNlLmFkZHJlc3NfY29tcG9uZW50cywgZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgICAgICAgIHJldHVybiBfLmluY2x1ZGVzKGl0ZW0udHlwZXMsICdjb3VudHJ5Jyk7XG4gICAgICAgICAgfSlbMF0ubG9uZ19uYW1lLFxuICAgICAgICAgIGFkZHJlc3NfY29tcG9uZW50czogcGxhY2UuYWRkcmVzc19jb21wb25lbnRzXG4gICAgICAgIH07XG4gICAgICAgIGNlbnRlck1hcCh2bS5tYXAuaW5zdGFuY2UsIHZtLm1hcmtlci5sb2NhdGlvbiwgbnVsbCwgdHJ1ZSk7XG4gICAgICAgICRzY29wZS4kYXBwbHkoKTtcbiAgICAgIH0pO1xuICAgIH07XG5cbiAgICB2bS5jb25maXJtTWFya2VyID0gZnVuY3Rpb24oKSB7XG4gICAgICBpZiAoIXZtLmluZm8ubmFtZSkgcmV0dXJuO1xuXG4gICAgICB2bS5mb3JtLm1hcmtlciA9IHtcbiAgICAgICAgaWQ6IHZtLm1hcmtlci5pZCxcbiAgICAgICAgYWRkcmVzczogdm0ubWFya2VyLmFkZHJlc3MsXG4gICAgICAgIG5hbWU6IHZtLmluZm8ubmFtZSxcbiAgICAgICAgbG9jYXRpb246IHZtLm1hcmtlci5sb2NhdGlvbixcbiAgICAgICAgc2hvdzogdHJ1ZSxcbiAgICAgICAgY291bnRyeTogdm0ubWFya2VyLmNvdW50cnksXG4gICAgICAgIGFkZHJlc3NfY29tcG9uZW50czogdm0ubWFya2VyLmFkZHJlc3NfY29tcG9uZW50c1xuICAgICAgfVxuICAgICAgdm0ubWFya2VyQ29uZmlybWVkID0gdHJ1ZTtcbiAgICAgIGNvbnNvbGUubG9nKHZtLmZvcm0ubWFya2VyKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBjZW50ZXJNYXAobWFwLCBsb2NhdGlvbiwgb2Zmc2V0LCBzY3JvbGwpIHtcbiAgICAgIGNvbnNvbGUubG9nKGxvY2F0aW9uKTtcbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBtYXAucGFuVG8obmV3IGdvb2dsZS5tYXBzLkxhdExuZyhsb2NhdGlvbi5sYXRpdHVkZSwgbG9jYXRpb24ubG9uZ2l0dWRlKSk7XG4gICAgICAgIGlmIChvZmZzZXQpIG1hcC5wYW5CeSgwLCAtMjAwKTtcbiAgICAgIH0sIDEwMCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY2xpY2tNYXAobWFwLCBldmVudE5hbWUsIG9yaWdpbmFsRXZlbnRBcmdzKSB7XG4gICAgICB2YXIgZSA9IG9yaWdpbmFsRXZlbnRBcmdzWzBdO1xuICAgICAgdmFyIGxhdCA9IGUubGF0TG5nLmxhdCgpLFxuICAgICAgICBsb24gPSBlLmxhdExuZy5sbmcoKTtcbiAgICAgIHZtLm1hcmtlciA9IHtcbiAgICAgICAgaWQ6IERhdGUubm93KCksXG4gICAgICAgIGxvY2F0aW9uOiB7XG4gICAgICAgICAgbGF0aXR1ZGU6IGxhdCxcbiAgICAgICAgICBsb25naXR1ZGU6IGxvblxuICAgICAgICB9LFxuICAgICAgICBzaG93OiBmYWxzZVxuICAgICAgfTtcbiAgICAgICRzY29wZS4kYXBwbHkoKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBib3VuZHNDaGFuZ2VkKCkge1xuICAgICAgY29uc29sZS5sb2coJ2JvdW5kcyBjaGFuZ2VkJyk7XG4gICAgICBjb25zb2xlLmxvZyh2bS5wbGFjZXNSZWFkeSk7XG5cbiAgICAgIGlmICghdm0ubWFwLmluc3RhbmNlKSB7XG4gICAgICAgIHByZXBhcmVNYXAoKTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBwcmVwYXJlTWFwKCkge1xuICAgICAgJHEuYWxsKFt1aUdtYXBHb29nbGVNYXBBcGksIHVpR21hcElzUmVhZHkucHJvbWlzZSgxKV0pLnRoZW4oZnVuY3Rpb24ocmVzcG9uc2UpIHtcbiAgICAgICAgdmFyIG1hcCA9IHJlc3BvbnNlWzBdO1xuICAgICAgICB2YXIgaW5zdGFuY2UgPSByZXNwb25zZVsxXVswXS5tYXA7XG5cbiAgICAgICAgdm0ud2luZG93ID0ge1xuICAgICAgICAgIHBpeGVsT2Zmc2V0OiBuZXcgbWFwLlNpemUoMCwgLTQwKSxcbiAgICAgICAgICBjbG9zZUNsaWNrOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICAgIHZtLm1hcmtlci5zaG93ID0gZmFsc2U7XG4gICAgICAgICAgfVxuICAgICAgICB9O1xuXG4gICAgICAgIFBsYWNlc0F1dG9jb21wbGV0ZSA9IG5ldyBtYXAucGxhY2VzLkF1dG9jb21wbGV0ZVNlcnZpY2UoKTtcbiAgICAgICAgRGlyZWN0aW9uc1NlcnZpY2UgPSBuZXcgbWFwLkRpcmVjdGlvbnNTZXJ2aWNlKCk7XG4gICAgICAgIERpcmVjdGlvblJlbmRlcmVyID0gbmV3IG1hcC5EaXJlY3Rpb25zUmVuZGVyZXIoKTtcbiAgICAgICAgdm0ubWFwLmluc3RhbmNlID0gaW5zdGFuY2U7XG4gICAgICAgIERpcmVjdGlvblJlbmRlcmVyLnNldE1hcCh2bS5tYXAuaW5zdGFuY2UpO1xuICAgICAgICBQbGFjZXMgPSBuZXcgbWFwLnBsYWNlcy5QbGFjZXNTZXJ2aWNlKHZtLm1hcC5pbnN0YW5jZSk7XG4gICAgICAgIHZtLnBsYWNlc1JlYWR5ID0gdHJ1ZTtcbiAgICAgICAgY29uc29sZS5sb2coJ3JlYWR5Jyk7XG4gICAgICAgIC8vZ2V0TG9jYXRpb24oKTtcblxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0TG9jYXRpb24oKSB7XG4gICAgICBpZiAodm0uZGF0YS5sb2NhdGlvbikge1xuICAgICAgICB2bS5sb2NhdGlvbiA9IHtcbiAgICAgICAgICBsYXQ6IHBhcnNlRmxvYXQodm0uZGF0YS5sb2NhdGlvblswXSksXG4gICAgICAgICAgbG5nOiBwYXJzZUZsb2F0KHZtLmRhdGEubG9jYXRpb25bMV0pXG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuO1xuICAgICAgfVxuICAgICAgLy9cbiAgICAgIC8vICR1dGlsLmdldExvY2F0aW9uKClcbiAgICAgIC8vICAgLnRoZW4oZnVuY3Rpb24obG9jYXRpb24pIHtcbiAgICAgIC8vICAgICB2bS5sb2NhdGlvbiA9IGxvY2F0aW9uO1xuICAgICAgLy8gICAgIC8vY2VudGVyTWFwKHZtLm1hcC5pbnN0YW5jZSwgdm0ubG9jYXRpb24pO1xuICAgICAgLy8gICB9KS5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgIC8vICAgICBpZiAoJHJvb3RTY29wZS51c2VyLmFkZHJlc3NQbGFjZSlcbiAgICAgIC8vICAgICAgIGdldFBsYWNlKCRyb290U2NvcGUudXNlci5hZGRyZXNzUGxhY2UucGxhY2VfaWQpO1xuICAgICAgLy9cbiAgICAgIC8vICAgfSkuZmluYWxseShmdW5jdGlvbigpIHtcbiAgICAgIC8vICAgICAvL3ZtLm1hcFZpc2libGUgPSB0cnVlO1xuICAgICAgLy8gICAgIC8vdm0uYWN0aXZpdGllcy5wdXNoKGxvY2F0aW9uTWFya2VyKCkpO1xuICAgICAgLy8gICAgIGNvbnNvbGUubG9nKCdsb2NhdGlvbicpO1xuICAgICAgLy8gICB9KTtcbiAgICAgIC8vXG4gICAgXG4gICAgfVxuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuc2VydmljZSgnQ2F0ZWdvcnlTZXJ2aWNlJywgQ2F0ZWdvcnlTZXJ2aWNlKTtcblxuICBDYXRlZ29yeVNlcnZpY2UuJGluamVjdCA9IFsnJGh0dHAnLCAnJHEnLCAnYmFzZUFwaSddO1xuXG4gIGZ1bmN0aW9uIENhdGVnb3J5U2VydmljZSgkaHR0cCwgJHEsIGJhc2VBcGkpIHtcbiAgICB2YXIgc2VydmljZSA9IHtcbiAgICAgIGNhdGVnb3JpZXM6IFtdLFxuICAgICAgZ2V0Q2F0ZWdvcmllczogZ2V0Q2F0ZWdvcmllc1xuICAgIH07XG5cbiAgICByZXR1cm4gc2VydmljZTtcblxuICAgIGZ1bmN0aW9uIGdldENhdGVnb3JpZXMocGFyZW50LCBvcHRpb25zKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAkaHR0cC5nZXQoYmFzZUFwaSArICcvY2FtcGFpZ24vY2F0ZWdvcmllcy8nLCB7XG4gICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBjb3VudHJ5OiBvcHRpb25zLmNvdW50cnlcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKHJlcykge1xuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUocmVzKTtcbiAgICAgICAgICBjb25zb2xlLmxvZyhyZXMubGVuZ3RoKTtcbiAgICAgICAgICBhbmd1bGFyLmNvcHkocmVzLCBzZXJ2aWNlLmNhdGVnb3JpZXMpO1xuICAgICAgICB9KVxuICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuXG4gIH1cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmZhY3RvcnkoJ0F1dGgnLCBBdXRoKVxuICAgIC5mYWN0b3J5KCdBdXRoSW50ZXJjZXB0b3InLCBBdXRoSW50ZXJjZXB0b3IpXG4gICAgLmNvbmZpZyhmdW5jdGlvbigkaHR0cFByb3ZpZGVyKSB7XG4gICAgICAkaHR0cFByb3ZpZGVyLmludGVyY2VwdG9ycy5wdXNoKCdBdXRoSW50ZXJjZXB0b3InKTtcbiAgICAgICRodHRwUHJvdmlkZXIuZGVmYXVsdHMud2l0aENyZWRlbnRpYWxzID0gZmFsc2U7XG4gICAgfSk7XG5cbiAgQXV0aC4kaW5qZWN0ID0gW1xuICAgICdiYXNlQXBpJyxcbiAgICAnJHdpbmRvdycsXG4gICAgJyRodHRwJyxcbiAgICAnJHEnLFxuICAgICckc3RhdGUnLFxuICAgICckcm9vdFNjb3BlJyxcbiAgICAnJGxvY2Fsc3RvcmFnZSdcbiAgXTtcblxuICBmdW5jdGlvbiBBdXRoKGJhc2VBcGksICR3aW5kb3csICRodHRwLCAkcSwgJHN0YXRlLCAkcm9vdFNjb3BlLCAkbG9jYWxzdG9yYWdlKSB7XG5cbiAgICB2YXIgQXV0aCA9IHtcbiAgICAgIGdldFVzZXI6IGdldFVzZXIsXG4gICAgICB2YWxpZGF0ZTogdmFsaWRhdGUsXG4gICAgICBpc0F1dGhlbnRpY2F0ZWQ6IGlzQXV0aGVudGljYXRlZCxcbiAgICAgIGxvZ2luOiBsb2dpbixcbiAgICAgIGxvZ291dDogbG9nb3V0LFxuICAgICAgcmVnaXN0ZXI6IHJlZ2lzdGVyLFxuICAgICAgZm9yZ290OiBmb3Jnb3QsXG4gICAgICByZXNldDogcmVzZXQsXG4gICAgICBzZXRDcmVkZW50aWFsczogc2V0Q3JlZGVudGlhbHMsXG4gICAgICBjcmVkZW50aWFsQXZhbGlhYmlsaXR5OiBjcmVkZW50aWFsQXZhbGlhYmlsaXR5XG4gICAgfTtcblxuICAgIHJldHVybiBBdXRoO1xuXG4gICAgLy8vLy8vLy8vLy8vLy8vL1xuXG4gICAgZnVuY3Rpb24gZ2V0VXNlcigpIHtcbiAgICAgIHJldHVybiAkbG9jYWxzdG9yYWdlLmdldE9iamVjdCgndXNlcicsIG51bGwpIHx8ICRsb2NhbHN0b3JhZ2UuZ2V0KCdhY2Nlc3NfdG9rZW4nLCBudWxsKSA7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gdmFsaWRhdGUodG9rZW4pIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAkaHR0cC5wb3N0KGJhc2VBcGkgKyAnL2F1dGgvdmFsaWRhdGUvJyArIHRva2VuKVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShyZXNwKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFtsb2dpbiBkZXNjcmlwdGlvbl1cbiAgICAgKiBAbWV0aG9kIGxvZ2luXG4gICAgICogQHJldHVybiB7W3R5cGVdfSBbZGVzY3JpcHRpb25dXG4gICAgICovXG4gICAgZnVuY3Rpb24gbG9naW4oY3JlZGVudGlhbHMpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG5cbiAgICAgICRodHRwLnBvc3QoYmFzZUFwaSArICcvcmVzdC1hdXRoL2xvZ2luLycsIGNyZWRlbnRpYWxzKVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZykge1xuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG5cbiAgICAgICAgICBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eSgndG9rZW4nKSkge1xuXG4gICAgICAgICAgICAkcm9vdFNjb3BlLnVzZXIgPSBhbmd1bGFyLmNvcHkoZGF0YS51c2VyKTtcbiAgICAgICAgICAgICRyb290U2NvcGUuJGVtaXQoJ2xvZ2luJywgZGF0YS51c2VyKTtcbiAgICAgICAgICAgICRsb2NhbHN0b3JhZ2Uuc2V0KCdhY2Nlc3NfdG9rZW4nLCBkYXRhLnRva2VuKTtcbiAgICAgICAgICAgICRsb2NhbHN0b3JhZ2Uuc2V0T2JqZWN0KCd1c2VyJywgZGF0YS51c2VyKTtcbiAgICAgICAgICB9XG5cbiAgICAgICAgICBpZiAoZGF0YS5oYXNPd25Qcm9wZXJ0eSgna2V5JykpIHtcbiAgICAgICAgICAgICAgJGxvY2Fsc3RvcmFnZS5zZXQoJ2FjY2Vzc190b2tlbicsIGRhdGEua2V5KTtcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5lcnJvcihmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZXJyKTtcbiAgICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIC8qKlxuICAgICAqIFtyZWdpc3RlciBkZXNjcmlwdGlvbl1cbiAgICAgKiBAbWV0aG9kIHJlZ2lzdGVyXG4gICAgICogQHJldHVybiB7W3R5cGVdfSBbZGVzY3JpcHRpb25dXG4gICAgICovXG4gICAgZnVuY3Rpb24gcmVnaXN0ZXIocGF5bG9hZCkge1xuXG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAkaHR0cC5wb3N0KGJhc2VBcGkgKyAnL2F1dGgvcmVnaXN0ZXInLCBwYXlsb2FkKVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZykge1xuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5lcnJvcihmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZXJyKTtcbiAgICAgICAgfSk7XG4gICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICB9XG5cblxuICAgIC8qKlxuICAgICAqIFtyZWdpc3RlciBkZXNjcmlwdGlvbl1cbiAgICAgKiBAbWV0aG9kIHJlc2V0XG4gICAgICogQHJldHVybiB7W3R5cGVdfSBbZGVzY3JpcHRpb25dXG4gICAgICovXG4gICAgZnVuY3Rpb24gcmVzZXQodG9rZW4sIHBhcmFtcykge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcblxuICAgICAgJGh0dHAucG9zdChiYXNlQXBpICsgJy9hdXRoL3Jlc2V0cGFzc3dvcmQvJyArIHRva2VuLCBwYXJhbXMpXG4gICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9KTtcblxuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogW3JlZ2lzdGVyIGRlc2NyaXB0aW9uXVxuICAgICAqIEBtZXRob2QgZm9yZ290XG4gICAgICogQHJldHVybiB7W3R5cGVdfSBbZGVzY3JpcHRpb25dXG4gICAgICovXG4gICAgZnVuY3Rpb24gZm9yZ290KHBheWxvYWQpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG5cbiAgICAgICRodHRwLnBvc3QoYmFzZUFwaSArICcvYXV0aC9yZXNldFBhc3N3b3JkUmVxdWVzdCcsIHBheWxvYWQpXG4gICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9KTtcblxuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogW2xvZ291dCBkZXNjcmlwdGlvbl1cbiAgICAgKiBAbWV0aG9kIGxvZ291dFxuICAgICAqIEByZXR1cm4ge1t0eXBlXX0gW2Rlc2NyaXB0aW9uXVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGxvZ291dCgpIHtcbiAgICAgICRsb2NhbHN0b3JhZ2UucmVtb3ZlKCd1c2VyJyk7XG4gICAgICAkbG9jYWxzdG9yYWdlLnJlbW92ZSgnYWNjZXNzX3Rva2VuJyk7XG4gICAgICAkbG9jYWxzdG9yYWdlLnJlbW92ZSgnb3JpZ2luYWxfdXNlcicpO1xuXG4gICAgICAkcm9vdFNjb3BlLmlzQXV0aGVudGljYXRlZCA9IGZhbHNlO1xuICAgICAgJHJvb3RTY29wZS51c2VyID0gbnVsbDtcbiAgICAgICRyb290U2NvcGUudmlldyA9ICdhdXRoJztcbiAgICAgICRyb290U2NvcGUuY3VycmVudFN0YXRlID0gJ2xvZ2luJztcbiAgICAgICR3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfVxuXG4gICAgLyoqXG4gICAgICogW3NldENyZWRlbnRpYWxzIGRlc2NyaXB0aW9uXVxuICAgICAqIEBtZXRob2QgYXV0aGVudGljYXRlXG4gICAgICogQHBhcmFtICB7W3R5cGVdfSAgICAgdXNlciBbZGVzY3JpcHRpb25dXG4gICAgICogQHJldHVybiB7W3R5cGVdfSAgICAgICAgICBbZGVzY3JpcHRpb25dXG4gICAgICovXG4gICAgZnVuY3Rpb24gc2V0Q3JlZGVudGlhbHMoZGF0YSwgZm9yY2UpIHtcbiAgICAgIGlmIChkYXRhLmhhc093blByb3BlcnR5KCd0b2tlbicpKSB7XG4gICAgICAgIGlmIChmb3JjZSB8fCAhJGxvY2Fsc3RvcmFnZS5nZXQoJ2FjY2Vzc190b2tlbicpKSB7XG4gICAgICAgICAgJGxvY2Fsc3RvcmFnZS5zZXQoJ2FjY2Vzc190b2tlbicsIGRhdGEudG9rZW4pO1xuICAgICAgICB9XG4gICAgICAgICRyb290U2NvcGUudXNlciA9IGRhdGEudXNlcjtcbiAgICAgICAgJGxvY2Fsc3RvcmFnZS5zZXRPYmplY3QoJ3VzZXInLCBkYXRhLnVzZXIpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgY29uc29sZS5sb2coJ0JhZCBEYXRlJywgZGF0YSk7XG4gICAgICB9XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBbaXNBdXRoZW50aWNhdGVkIGRlc2NyaXB0aW9uXVxuICAgICAqIEBtZXRob2QgaXNBdXRoZW50aWNhdGVkXG4gICAgICogQHJldHVybiB7Qm9vbGVhbn0gICAgICAgW2Rlc2NyaXB0aW9uXVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGlzQXV0aGVudGljYXRlZCgpIHtcbiAgICAgIHJldHVybiAkbG9jYWxzdG9yYWdlLmdldCgnYWNjZXNzX3Rva2VuJyk7XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBbY3JlZGVudGlhbEF2YWxpYWJpbGl0eSBkZXNjcmlwdGlvbl1cbiAgICAgKiBAbWV0aG9kIGNyZWRlbnRpYWxBdmFsaWFiaWxpdHlcbiAgICAgKiBAcmV0dXJuIHtbdHlwZV19ICAgICAgICAgICAgICAgW2Rlc2NyaXB0aW9uXVxuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNyZWRlbnRpYWxBdmFsaWFiaWxpdHkocGF5bG9hZCkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcblxuICAgICAgJGh0dHAuZ2V0KGJhc2VBcGkgKyAnL3VzZXIvYXZhaWxhYmlsaXR5LycsIHtcbiAgICAgICAgICBwYXJhbXM6IHBheWxvYWRcbiAgICAgICAgfSlcbiAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzLCBoZWFkZXJzLCBjb25maWcpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICB9KVxuICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuICB9XG5cblxuICAvKipcbiAgICogW0F1dGhJbnRlcmNlcHRvciBkZXNjcmlwdGlvbl1cbiAgICogQG1ldGhvZCBBdXRoSW50ZXJjZXB0b3JcbiAgICovXG4gIGZ1bmN0aW9uIEF1dGhJbnRlcmNlcHRvcigkcSwgJGxvY2Fsc3RvcmFnZSwgJGluamVjdG9yKSB7XG5cbiAgICB2YXIgQXV0aEludGVyY2VwdG9yID0ge1xuICAgICAgcmVxdWVzdDogcmVxdWVzdCxcbiAgICAgIHJlc3BvbnNlRXJyb3I6IHJlc3BvbnNlRXJyb3JcbiAgICB9O1xuXG4gICAgcmV0dXJuIEF1dGhJbnRlcmNlcHRvcjtcblxuICAgIGZ1bmN0aW9uIHJlcXVlc3QoY29uZmlnKSB7XG5cbiAgICAgIHZhciB0b2tlbjtcbiAgICAgIGlmICgkbG9jYWxzdG9yYWdlLmdldCgnYWNjZXNzX3Rva2VuJykpIHtcbiAgICAgICAgdG9rZW4gPSAkbG9jYWxzdG9yYWdlLmdldCgnYWNjZXNzX3Rva2VuJyk7XG4gICAgICB9XG4gICAgICBpZiAodG9rZW4pIHtcbiAgICAgICAgY29uZmlnLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9ICdCZWFyZXIgJyArIHRva2VuO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICB9XG5cbiAgICBmdW5jdGlvbiByZXNwb25zZUVycm9yKHJlc3BvbnNlKSB7XG4gICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzID09PSA0MDEgfHwgcmVzcG9uc2Uuc3RhdHVzID09PSA0MDMpIHtcbiAgICAgICAgJGxvY2Fsc3RvcmFnZS5yZW1vdmUoJ2FjY2Vzc190b2tlbicpO1xuICAgICAgICAkaW5qZWN0b3IuZ2V0KCckc3RhdGUnKS5nbygnbG9naW4nKTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAkcS5yZWplY3QocmVzcG9uc2UpO1xuICAgIH1cblxuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5zZXJ2aWNlKCdEYXRhU2VydmljZScsIGRhdGFTZXJ2aWNlKTtcblxuICBkYXRhU2VydmljZS4kaW5qZWN0ID0gWyckaHR0cCcsICckcScsICdiYXNlQXBpJ107XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIGRhdGFTZXJ2aWNlKCRodHRwLCAkcSwgYmFzZUFwaSkge1xuICAgIHZhciBkYXRhU2VydmljZSA9IHtcbiAgICAgIGdldE9wdGlvbnM6IGdldE9wdGlvbnMsXG4gICAgICBnZXRDbGllbnRUb2tlbjogZ2V0Q2xpZW50VG9rZW4sXG4gICAgICBjcmVhdGVDYW1wYWlnbjogY3JlYXRlQ2FtcGFpZ24sXG4gICAgICBnZXRDYW1wYWlnbnM6IGdldENhbXBhaWduc1xuICAgIH1cblxuICAgIHJldHVybiBkYXRhU2VydmljZTtcblxuICAgIGZ1bmN0aW9uIGdldE9wdGlvbnMoKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAkaHR0cCh7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIHVybDogYmFzZUFwaSArICcvY2FtcGFpZ24vb3B0aW9ucy8nXG4gICAgICB9KS5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEsIHN0YXR1cywgaGVhZGVycywgY29uZmlnKSB7XG4gICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgICB9KS5lcnJvcihmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICB9KTtcblxuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0Q2xpZW50VG9rZW4oKSB7XG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuXG4gICAgICAkaHR0cCh7XG4gICAgICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgICAgIHVybDogYmFzZUFwaSArICcvY29tbWVyY2UvY2xpZW50VG9rZW4vJ1xuICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZykge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gY3JlYXRlQ2FtcGFpZ24ocGF5bG9hZCkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICRodHRwLnBvc3QoYmFzZUFwaSArICcvY2FtcGFpZ24vY3JlYXRlLycsIHBheWxvYWQpXG4gICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICB9KVxuICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBnZXRDYW1wYWlnbnMoaWQpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAkaHR0cC5nZXQoYmFzZUFwaSArICcvY2FtcGFpZ24vJyArIGlkICsgJy8nKVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cbiAgfVxuXG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5zZXJ2aWNlKCdEcm9wem9uZVNlcnZpY2UnLCBEcm9wem9uZVNlcnZpY2UpO1xuXG4gIHZhciBUWVBFUyA9IHtcbiAgICBtb2JpbGU6IHtcbiAgICAgIHdpZHRoOiA3NTAsXG4gICAgICBoZWlnaHQ6IDEwMFxuICAgIH0sXG4gICAgZGVza3RvcDoge1xuICAgICAgd2lkdGg6IDg4MCxcbiAgICAgIGhlaWdodDogMTE1NlxuICAgIH1cbiAgfTtcblxuICBmdW5jdGlvbiBEcm9wem9uZVNlcnZpY2UoKSB7XG4gICAgdmFyIHNlcnZpY2UgPSB7XG4gICAgICBjcmVhdGU6IGNyZWF0ZSxcbiAgICAgIGNyZWF0ZU11bHRpcGxlOiBjcmVhdGVNdWx0aXBsZVxuICAgIH07XG5cbiAgICByZXR1cm4gc2VydmljZTtcblxuICAgIGZ1bmN0aW9uIGNyZWF0ZSh0eXBlLCBzdWNjZXNzLCBzZW5kaW5nLCByZW1vdmVkZmlsZSkge1xuICAgICAgcmV0dXJuIHtcbiAgICAgICAgb3B0aW9uczoge1xuICAgICAgICAgIHVybDogJ2h0dHBzOi8vYXBpLmNsb3VkaW5hcnkuY29tL3YxXzEvY2xvdWQ5L2ltYWdlL3VwbG9hZCcsXG4gICAgICAgICAgdXBsb2FkTXVsdGlwbGU6IGZhbHNlLFxuICAgICAgICAgIG1heEZpbGVzOiAxLFxuICAgICAgICAgIGFjY2VwdGVkRmlsZXM6ICdpbWFnZS8qJyxcbiAgICAgICAgICBkaWN0RGVmYXVsdE1lc3NhZ2U6ICdEcm9wIGZpbGUgb3IgY2xpY2sgaGVyZSB0byB1cGxvYWQnLFxuICAgICAgICAgIGFkZFJlbW92ZUxpbmtzOiB0cnVlLFxuICAgICAgICAgIGluaXQ6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgICAgdGhpcy5vbigndGh1bWJuYWlsJywgZnVuY3Rpb24oZmlsZSkge1xuICAgICAgICAgICAgICBpZiAoZmlsZS53aWR0aCAhPT0gVFlQRVNbdHlwZV0ud2lkdGggfHwgZmlsZS5oZWlnaHQgIT09IFRZUEVTW3R5cGVdLmhlaWdodCkge1xuICAgICAgICAgICAgICAgIGZpbGUucmVqZWN0RGltZW5zaW9ucygpXG4gICAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgZmlsZS5hY2NlcHREaW1lbnNpb25zKCk7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgYWNjZXB0OiBmdW5jdGlvbihmaWxlLCBkb25lKSB7XG4gICAgICAgICAgICBmaWxlLmFjY2VwdERpbWVuc2lvbnMgPSBkb25lO1xuICAgICAgICAgICAgZmlsZS5yZWplY3REaW1lbnNpb25zID0gZnVuY3Rpb24oKSB7IGRvbmUoJ0ludmFsaWQgZGltZW5zaW9uLicpOyB9O1xuICAgICAgICAgIH1cbiAgICAgICAgfSxcbiAgICAgICAgZXZlbnRIYW5kbGVyczoge1xuICAgICAgICAgIHNlbmRpbmc6IGZ1bmN0aW9uKGZpbGUsIHhociwgZm9ybURhdGEpIHtcbiAgICAgICAgICAgIGZvcm1EYXRhLmFwcGVuZCgnYXBpX2tleScsIDgzOTk4ODMzMzE1MzU2Nyk7XG4gICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ3RpbWVzdGFtcCcsIERhdGUubm93KCkgLyAxMDAwIHwgMCk7XG4gICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ3VwbG9hZF9wcmVzZXQnLCAnc20yZXY0bnUnKTtcbiAgICAgICAgICAgIGlmIChzZW5kaW5nKSBzZW5kaW5nKCk7XG4gICAgICAgICAgfSxcbiAgICAgICAgICBzdWNjZXNzOiBzdWNjZXNzLFxuICAgICAgICAgIHJlbW92ZWRmaWxlOiByZW1vdmVkZmlsZVxuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZU11bHRpcGxlKG1heEZpbGVzLCBzdWNjZXNzLCBzZW5kaW5nKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBvcHRpb25zOiB7XG4gICAgICAgICAgdXJsOiAnaHR0cHM6Ly9hcGkuY2xvdWRpbmFyeS5jb20vdjFfMS9jbG91ZDkvaW1hZ2UvdXBsb2FkJyxcbiAgICAgICAgICBtYXhGaWxlczogbWF4RmlsZXMsXG4gICAgICAgICAgYWNjZXB0ZWRGaWxlczogJ2ltYWdlLyonLFxuICAgICAgICAgIGRpY3REZWZhdWx0TWVzc2FnZTogJ0Ryb3AgZmlsZXMgb3IgY2xpY2sgaGVyZSB0byB1cGxvYWQnXG4gICAgICAgIH0sXG4gICAgICAgIGV2ZW50SGFuZGxlcnM6IHtcbiAgICAgICAgICBzZW5kaW5nOiBmdW5jdGlvbihmaWxlLCB4aHIsIGZvcm1EYXRhKSB7XG4gICAgICAgICAgICBmb3JtRGF0YS5hcHBlbmQoJ2FwaV9rZXknLCA4Mzk5ODgzMzMxNTM1NjcpO1xuICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCd0aW1lc3RhbXAnLCBEYXRlLm5vdygpIC8gMTAwMCB8IDApO1xuICAgICAgICAgICAgZm9ybURhdGEuYXBwZW5kKCd1cGxvYWRfcHJlc2V0JywgJ3NtMmV2NG51Jyk7XG4gICAgICAgICAgICBpZiAoc2VuZGluZykgc2VuZGluZygpO1xuICAgICAgICAgIH0sXG4gICAgICAgICAgc3VjY2Vzczogc3VjY2Vzc1xuICAgICAgICB9XG4gICAgICB9O1xuICAgIH1cbiAgfVxuXG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgICAgIC5mYWN0b3J5KCckaW5zdW1vcycsIGZhY3RvcnkpO1xuXG4gICAgZmFjdG9yeS4kaW5qZWN0ID0gWydiYXNlQXBpJywgJyRodHRwJywgJyRxJ107XG5cbiAgICAvKiBAbmdJbmplY3QgKi9cbiAgICBmdW5jdGlvbiBmYWN0b3J5KGJhc2VBcGksICRodHRwLCAkcSkge1xuICAgICAgICB2YXIgc2VydmljZSA9IHtcbiAgICAgICAgICAgIGdldEluc3Vtb3M6IGdldEluc3Vtb3MsXG4gICAgICAgICAgICBpbnN1bW9zOiBbXVxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBzZXJ2aWNlO1xuXG4gICAgICAgIGZ1bmN0aW9uIGdldEluc3Vtb3MocXVlcnkpIHtcbiAgICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgICAgICRodHRwLmdldChiYXNlQXBpICsgJy9pbnN1bW9zLycsIHtcbiAgICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgcGFnZTogcXVlcnkucGFnZSB8fCAxLFxuICAgICAgICAgICAgICAgIHBhZ2Vfc2l6ZTogcXVlcnkubGltaXQgfHwgNTAsXG4gICAgICAgICAgICAgICAgZm9ybWF0OiAnanNvbicsXG4gICAgICAgICAgICAgICAgb3JkZXJpbmc6IHF1ZXJ5Lm9yZGVyIHx8ICdpZCcsXG4gICAgICAgICAgICAgICAgc2VhcmNoOiBxdWVyeS5maWx0ZXIgfHwgJydcbiAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgYW5ndWxhci5jb3B5KGRhdGEucmVzdWx0cywgc2VydmljZS5pbnN1bW9zKTtcbiAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgICAgIH1cbiAgICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5mYWN0b3J5KCckbG9jYWxzdG9yYWdlJywgJGxvY2Fsc3RvcmFnZSk7XG5cbiAgJGxvY2Fsc3RvcmFnZS4kaW5qZWN0ID0gWyckd2luZG93J107XG5cbiAgZnVuY3Rpb24gJGxvY2Fsc3RvcmFnZSgkd2luZG93KSB7XG4gICAgdmFyIHNlcnZpY2UgPSB7XG4gICAgICBzZXQ6IHNldCxcbiAgICAgIGdldDogZ2V0LFxuICAgICAgc2V0T2JqZWN0OiBzZXRPYmplY3QsXG4gICAgICBnZXRPYmplY3Q6IGdldE9iamVjdCxcbiAgICAgIHJlbW92ZTogcmVtb3ZlXG4gICAgfTtcblxuICAgIHJldHVybiBzZXJ2aWNlO1xuXG4gICAgLy8vLy8vLy8vL1xuXG4gICAgZnVuY3Rpb24gc2V0KGtleSwgdmFsdWUpIHtcbiAgICAgICR3aW5kb3cubG9jYWxTdG9yYWdlW2tleV0gPSB2YWx1ZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXQoa2V5LCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIHJldHVybiAkd2luZG93LmxvY2FsU3RvcmFnZVtrZXldIHx8IGRlZmF1bHRWYWx1ZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBzZXRPYmplY3Qoa2V5LCB2YWx1ZSkge1xuICAgICAgJHdpbmRvdy5sb2NhbFN0b3JhZ2Vba2V5XSA9IEpTT04uc3RyaW5naWZ5KHZhbHVlKTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRPYmplY3Qoa2V5LCBkZWZhdWx0VmFsdWUpIHtcbiAgICAgIHJldHVybiBKU09OLnBhcnNlKCR3aW5kb3cubG9jYWxTdG9yYWdlW2tleV0gfHwgKGRlZmF1bHRWYWx1ZSAhPT0gdW5kZWZpbmVkID8gZGVmYXVsdFZhbHVlIDogJ3t9JykpO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHJlbW92ZShrZXkpIHtcbiAgICAgIHJldHVybiAkd2luZG93LmxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKGtleSk7XG4gICAgfVxuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIGFuZ3VsYXJcbiAgICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgICAgLmZhY3RvcnkoJyRwZWRpZG9zJywgZmFjdG9yeSk7XG5cbiAgICBmYWN0b3J5LiRpbmplY3QgPSBbJ2Jhc2VBcGknLCAnJGh0dHAnLCAnJHEnXTtcblxuICAgIC8qIEBuZ0luamVjdCAqL1xuICAgIGZ1bmN0aW9uIGZhY3RvcnkoYmFzZUFwaSwgJGh0dHAsICRxKSB7XG4gICAgICB2YXIgc2VydmljZSA9IHtcbiAgICAgICAgZ2V0Q2xpZW50ZXM6IGdldENsaWVudGVzLFxuICAgICAgICB1cGRhdGVDbGllbnRlOiB1cGRhdGVDbGllbnRlLFxuICAgICAgICBjcmVhdGVDbGllbnRlOiBjcmVhdGVDbGllbnRlLFxuICAgICAgICBkZWxldGVDbGllbnRlOiBkZWxldGVDbGllbnRlLFxuICAgICAgICBjbGllbnRlczogW11cbiAgICAgIH07XG5cbiAgICAgIHJldHVybiBzZXJ2aWNlO1xuXG4gICAgICBmdW5jdGlvbiBnZXRDbGllbnRlcyhxdWVyeSkge1xuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgICAkaHR0cC5nZXQoYmFzZUFwaSArICcvY2xpZW50ZXMvJywge1xuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgIHBhZ2U6IHF1ZXJ5LnBhZ2UgfHwgMSxcbiAgICAgICAgICAgICAgcGFnZV9zaXplOiBxdWVyeS5saW1pdCB8fCAxMCxcbiAgICAgICAgICAgICAgZm9ybWF0OiAnanNvbicsXG4gICAgICAgICAgICAgIG9yZGVyaW5nOiBxdWVyeS5vcmRlciB8fCAnJyxcbiAgICAgICAgICAgICAgc2VhcmNoOiBxdWVyeS5maWx0ZXIgfHwgJydcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KVxuICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgIGFuZ3VsYXIuY29weShkYXRhLnJlc3VsdHMsIHNlcnZpY2UuY2xpZW50ZXMpO1xuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5lcnJvcihmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgIH1cblxuXG4gICAgICBmdW5jdGlvbiB1cGRhdGVDbGllbnRlKHF1ZXJ5KSB7XG4gICAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAgICRodHRwLnB1dChiYXNlQXBpICsgJy9jbGllbnRlcy8nICsgcXVlcnkuaWQgKyAnLycsIHF1ZXJ5KVxuICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgICAgICAgfSlcbiAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZXJyKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgICB9XG5cbiAgICAgIGZ1bmN0aW9uIGNyZWF0ZUNsaWVudGUocGF5bG9hZCkge1xuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgICAkaHR0cC5wb3N0KGJhc2VBcGkgKyAnL2NsaWVudGVzLycsIHBheWxvYWQpXG4gICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgICB9KVxuICAgICAgICAgIC5lcnJvcihmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgIH1cblxuICAgICAgZnVuY3Rpb24gZGVsZXRlQ2xpZW50ZShpZCkge1xuICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgICAkaHR0cC5kZWxldGUoYmFzZUFwaSArICcvY2xpZW50ZXMvJyArIGlkICsgJy8nIClcbiAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICAgIH0pXG4gICAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgICAgfVxuICAgIH1cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgYW5ndWxhclxuICAgICAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAgICAgLmZhY3RvcnkoJyRwcm9vdmVkb3JlcycsIGZhY3RvcnkpO1xuXG4gICAgZmFjdG9yeS4kaW5qZWN0ID0gWyckaHR0cCcsICckcScsICdiYXNlQXBpJ107XG5cbiAgICAvKiBAbmdJbmplY3QgKi9cbiAgICBmdW5jdGlvbiBmYWN0b3J5KCRodHRwLCAkcSwgYmFzZUFwaSkge1xuICAgICAgICB2YXIgc2VydmljZSA9IHtcbiAgICAgICAgICAgIGNyZWF0ZVByb292ZWRvcjogY3JlYXRlUHJvb3ZlZG9yLFxuICAgICAgICAgICAgdXBkYXRlUHJvb3ZlZG9yOiB1cGRhdGVQcm9vdmVkb3IsXG4gICAgICAgICAgICBkZWxldGVQcm9vdmVkb3I6IGRlbGV0ZVByb292ZWRvclxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBzZXJ2aWNlO1xuXG4gICAgICAgIGZ1bmN0aW9uIHVwZGF0ZVByb292ZWRvcihxdWVyeSkge1xuICAgICAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAgICAgJGh0dHAucHV0KGJhc2VBcGkgKyAnL3Byb292ZWRvcmVzLycgKyBxdWVyeS5pZCArICcvJywgcXVlcnkpXG4gICAgICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgICAgICAgICB9KVxuICAgICAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZXJyKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgICAgICB9XG5cbiAgICAgICAgZnVuY3Rpb24gY3JlYXRlUHJvb3ZlZG9yKHBheWxvYWQpIHtcbiAgICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgICAgICRodHRwLnBvc3QoYmFzZUFwaSArICcvcHJvb3ZlZG9yZXMvJywgcGF5bG9hZClcbiAgICAgICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgICAgIH0pXG4gICAgICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgICAgIH1cblxuICAgICAgICBmdW5jdGlvbiBkZWxldGVQcm9vdmVkb3IoaWQpIHtcbiAgICAgICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgICAgICRodHRwLmRlbGV0ZShiYXNlQXBpICsgJy9wcm9vdmVkb3Jlcy8nICsgaWQgKyAnLycgKVxuICAgICAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICAgICAgfSlcbiAgICAgICAgICAgIC5lcnJvcihmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICAgICAgfVxuICAgIH1cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmZhY3RvcnkoJyRzZWd1aW1pZW50bycsIGZhY3RvcnkpO1xuXG4gIGZhY3RvcnkuJGluamVjdCA9IFsnYmFzZUFwaScsICckaHR0cCcsICckcSddO1xuXG4gIC8qIEBuZ0luamVjdCAqL1xuICBmdW5jdGlvbiBmYWN0b3J5KGJhc2VBcGksICRodHRwLCAkcSkge1xuICAgIHZhciBzZXJ2aWNlID0ge1xuICAgICAgZ2V0QWN0aXZpZGFkZXM6IGdldEFjdGl2aWRhZGVzLFxuICAgICAgY3JlYXRlQWN0aXZpZGFkZXM6IGNyZWF0ZUFjdGl2aWRhZGVzLFxuICAgICAgYWN0aXZpZGFkZXM6IFtdXG4gICAgfTtcblxuICAgIHJldHVybiBzZXJ2aWNlO1xuXG4gICAgZnVuY3Rpb24gZ2V0QWN0aXZpZGFkZXMocXVlcnkpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAkaHR0cC5nZXQoYmFzZUFwaSArICcvYWN0aXZpZGFkZXMvJywge1xuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgcGFnZTogcXVlcnkucGFnZSxcbiAgICAgICAgICAgIHBhZ2Vfc2l6ZTogcXVlcnkubGltaXQsXG4gICAgICAgICAgICBmb3JtYXQ6ICdqc29uJyxcbiAgICAgICAgICAgIG9yZGVyaW5nOiBxdWVyeS5vcmRlcixcbiAgICAgICAgICAgIHNlYXJjaDogcXVlcnkuZmlsdGVyXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgYW5ndWxhci5jb3B5KGRhdGEucmVzdWx0cywgc2VydmljZS5zZW1pbGxhcyk7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGNyZWF0ZUFjdGl2aWRhZGVzKHBheWxvYWQpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAkaHR0cC5wb3N0KGJhc2VBcGkgKyAnL2FjdGl2aWRhZGVzLycsIHBheWxvYWQpXG4gICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICB9KVxuICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5mYWN0b3J5KCckc2llbWJyYXMnLCBmYWN0b3J5KTtcblxuICBmYWN0b3J5LiRpbmplY3QgPSBbJyRodHRwJywgJyRxJywgJyR0aW1lb3V0JywgJ2Jhc2VBcGknLCAnbW9tZW50J107XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIGZhY3RvcnkoJGh0dHAsICRxLCAkdGltZW91dCwgYmFzZUFwaSwgbW9tZW50KSB7XG4gICAgdmFyIHNlcnZpY2UgPSB7XG4gICAgICBnZXRTZW1pbGxhczogZ2V0U2VtaWxsYXMsXG4gICAgICBnZXRDdWx0aXZvczogZ2V0Q3VsdGl2b3MsXG4gICAgICBnZXRSdWJyb3M6IGdldFJ1YnJvcyxcbiAgICAgIGdldExvdGVzOiBnZXRMb3RlcyxcbiAgICAgIGdldFByb292ZWRvcmVzOiBnZXRQcm9vdmVkb3JlcyxcbiAgICAgIGdldFByb292ZWRvckNhdGVnb3JpYTogZ2V0UHJvb3ZlZG9yQ2F0ZWdvcmlhLFxuICAgICAgZ2V0VW5pZGFkZXM6IGdldFVuaWRhZGVzLFxuICAgICAgY3JlYXRlU2VtaWxsYTogY3JlYXRlU2VtaWxsYSxcbiAgICAgIHVwZGF0ZVNlbWlsbGE6IHVwZGF0ZVNlbWlsbGEsXG4gICAgICBjdWx0aXZvczogW10sXG4gICAgICBzZW1pbGxhczogW10sXG4gICAgICBsb3RlczogW11cbiAgICB9O1xuXG4gICAgcmV0dXJuIHNlcnZpY2U7XG5cbiAgICBmdW5jdGlvbiBnZXRTZW1pbGxhcyhxdWVyeSkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICRodHRwLmdldChiYXNlQXBpICsgJy9zZW1pbGxhcy8nLCB7XG4gICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBwYWdlOiBxdWVyeS5wYWdlIHx8IDEsXG4gICAgICAgICAgICBwYWdlX3NpemU6IHF1ZXJ5LmxpbWl0IHx8IDEwMCxcbiAgICAgICAgICAgIGZvcm1hdDogJ2pzb24nLFxuICAgICAgICAgICAgb3JkZXJpbmc6IHF1ZXJ5Lm9yZGVyIHx8ICctaWQnLFxuICAgICAgICAgICAgc2VhcmNoOiBxdWVyeS5maWx0ZXIgfHwgJydcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBhbmd1bGFyLmNvcHkoZGF0YS5yZXN1bHRzLCBzZXJ2aWNlLnNlbWlsbGFzKTtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICB9KVxuICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBjcmVhdGVTZW1pbGxhKHBheWxvYWQpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG5cbiAgICAgIC8vZmllbGQgZm9ybWF0dGluZ1xuICAgICAgcGF5bG9hZFsnZmVjaGFfY29tcHJhJ10gPSBtb21lbnQocGF5bG9hZFsnZmVjaGFfY29tcHJhJ10pXG4gICAgICAgIC5mb3JtYXQoJ1lZWVktTU0tREQnKTtcblxuICAgICAgdmFyIHF1ZXJ5ID0gXy5tYXBWYWx1ZXMocGF5bG9hZCwgZnVuY3Rpb24obykge1xuICAgICAgICByZXR1cm4gIF8uaXNPYmplY3QobykgID8gby5pZCA6IG87XG4gICAgICB9KTtcblxuICAgICAgY29uc29sZS5sb2cocXVlcnkpO1xuXG4gICAgICAkaHR0cC5wb3N0KGJhc2VBcGkgKyAnL3NlbWlsbGFzLycsIHF1ZXJ5KVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZVNlbWlsbGEocGF5bG9hZCkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgIC8vZmllbGRGb3JtYXR0aW5nXG4gICAgICBwYXlsb2FkWydmZWNoYV9jb21wcmEnXSA9IG1vbWVudChwYXlsb2FkWydmZWNoYV9jb21wcmEnXSlcbiAgICAgICAgLmZvcm1hdCgnWVlZWS1NTS1ERCcpO1xuXG4gICAgICAkaHR0cC5wdXQoYmFzZUFwaSArICcvc2VtaWxsYXMvJyArIHBheWxvYWQuaWQgKyAnLycsIHBheWxvYWQpXG4gICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICB9KVxuICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuXG5cbiAgICBmdW5jdGlvbiBnZXRDdWx0aXZvcyhxdWVyeSkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICRodHRwLmdldChiYXNlQXBpICsgJy9jdWx0aXZvcy8nLCB7XG4gICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICBwYWdlOiBxdWVyeS5wYWdlLFxuICAgICAgICAgICAgcGFnZV9zaXplOiBxdWVyeS5saW1pdCxcbiAgICAgICAgICAgIGZvcm1hdDogJ2pzb24nLFxuICAgICAgICAgICAgb3JkZXJpbmc6IHF1ZXJ5Lm9yZGVyLFxuICAgICAgICAgICAgc2VhcmNoOiBxdWVyeS5maWx0ZXJcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICAgIC5zdWNjZXNzKGZ1bmN0aW9uKGRhdGEpIHtcbiAgICAgICAgICBhbmd1bGFyLmNvcHkoZGF0YS5yZXN1bHRzLCBzZXJ2aWNlLmN1bHRpdm9zKTtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICB9KVxuICAgICAgICAuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVqZWN0KGVycik7XG4gICAgICAgIH0pO1xuICAgICAgcmV0dXJuIGRlZmVycmVkLnByb21pc2U7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gZ2V0TG90ZXMocXVlcnkpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAkaHR0cC5nZXQoYmFzZUFwaSArICcvbG90ZXMvJywge1xuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgcGFnZTogcXVlcnkucGFnZSB8fCAxLFxuICAgICAgICAgICAgcGFnZV9zaXplOiBxdWVyeS5saW1pdCB8fCAxMDAsXG4gICAgICAgICAgICBmb3JtYXQ6ICdqc29uJyxcbiAgICAgICAgICAgIG9yZGVyaW5nOiBxdWVyeS5vcmRlciB8fCAnLWlkJyxcbiAgICAgICAgICAgIHNlYXJjaDogcXVlcnkuZmlsdGVyIHx8ICcnXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgYW5ndWxhci5jb3B5KGRhdGEucmVzdWx0cywgc2VydmljZS5sb3Rlcyk7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFJ1YnJvcyhxdWVyeSkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICRodHRwLmdldChiYXNlQXBpICsgJy9ydWJyb3MvJywge1xuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgcGFnZTogcXVlcnkucGFnZSB8fCAxLFxuICAgICAgICAgICAgcGFnZV9zaXplOiBxdWVyeS5saW1pdCB8fCAxMDAsXG4gICAgICAgICAgICBmb3JtYXQ6ICdqc29uJyxcbiAgICAgICAgICAgIG9yZGVyaW5nOiBxdWVyeS5vcmRlciB8fCAnLWlkJyxcbiAgICAgICAgICAgIHNlYXJjaDogcXVlcnkuZmlsdGVyIHx8ICcnXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldEFyZWFzU2llbWJyYShxdWVyeSkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICRodHRwLmdldChiYXNlQXBpICsgJy9ydWJyb3MvJywge1xuICAgICAgICAgIHBhcmFtczoge1xuICAgICAgICAgICAgcGFnZTogcXVlcnkucGFnZSxcbiAgICAgICAgICAgIHBhZ2Vfc2l6ZTogcXVlcnkubGltaXQsXG4gICAgICAgICAgICBmb3JtYXQ6ICdqc29uJyxcbiAgICAgICAgICAgIG9yZGVyaW5nOiBxdWVyeS5vcmRlcixcbiAgICAgICAgICAgIHNlYXJjaDogcXVlcnkuZmlsdGVyXG4gICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAuc3VjY2VzcyhmdW5jdGlvbihkYXRhKSB7XG4gICAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgICAgfSlcbiAgICAgICAgLmVycm9yKGZ1bmN0aW9uKGVycikge1xuICAgICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgICB9KTtcbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFVuaWRhZGVzKCkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICR0aW1lb3V0KGZ1bmN0aW9uKCkge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKHtcbiAgICAgICAgICByZXN1bHRzOiBbe1xuICAgICAgICAgICAgaWQ6IDEsXG4gICAgICAgICAgICBub21icmU6ICdncmFtb3MnXG4gICAgICAgICAgfSwge1xuICAgICAgICAgICAgaWQ6IDIsXG4gICAgICAgICAgICBub21icmU6ICd1bmlkYWRlcydcbiAgICAgICAgICB9XVxuICAgICAgICB9KTtcbiAgICAgIH0sIE1hdGgucmFuZG9tKCkgKiAxMDAwLCBmYWxzZSk7XG5cbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldFByb292ZWRvckNhdGVnb3JpYShxdWVyeSkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcbiAgICAgICRodHRwLmdldChiYXNlQXBpICsgJy9jYXRlZ29yaWFzLycsIHtcbiAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgIHBhZ2U6IHF1ZXJ5LnBhZ2UsXG4gICAgICAgICAgICBwYWdlX3NpemU6IHF1ZXJ5LmxpbWl0LFxuICAgICAgICAgICAgZm9ybWF0OiAnanNvbicsXG4gICAgICAgICAgICBvcmRlcmluZzogcXVlcnkub3JkZXIsXG4gICAgICAgICAgICBzZWFyY2g6IHF1ZXJ5LmZpbHRlclxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5lcnJvcihmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZXJyKTtcbiAgICAgICAgfSk7XG4gICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICB9XG5cbiAgICBmdW5jdGlvbiBnZXRQcm9vdmVkb3JlcyhxdWVyeSkge1xuXG4gICAgICB2YXIgZGVmZXJyZWQgPSAkcS5kZWZlcigpO1xuICAgICAgJGh0dHAuZ2V0KGJhc2VBcGkgKyAnL3Byb292ZWRvcmVzLycsIHtcbiAgICAgICAgICBwYXJhbXM6IHtcbiAgICAgICAgICAgIHBhZ2U6IHF1ZXJ5LnBhZ2UsXG4gICAgICAgICAgICBwYWdlX3NpemU6IHF1ZXJ5LmxpbWl0LFxuICAgICAgICAgICAgZm9ybWF0OiAnanNvbicsXG4gICAgICAgICAgICBvcmRlcmluZzogcXVlcnkub3JkZXIsXG4gICAgICAgICAgICBzZWFyY2g6IHF1ZXJ5LmZpbHRlclxuICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSkge1xuICAgICAgICAgIGRlZmVycmVkLnJlc29sdmUoZGF0YSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5lcnJvcihmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZXJyKTtcbiAgICAgICAgfSk7XG4gICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICB9XG4gIH1cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLnNlcnZpY2UoJ1VzZXJTZXJ2aWNlJywgZmFjdG9yeSk7XG5cbiAgZmFjdG9yeS4kaW5qZWN0ID0gWyckaHR0cCcsICckcScsICckbG9jYWxzdG9yYWdlJywgJyRyb290U2NvcGUnLCAnYmFzZUFwaSddO1xuXG4gIC8qIEBuZ0luamVjdCAqL1xuICBmdW5jdGlvbiBmYWN0b3J5KCRodHRwLCAkcSwgJGxvY2Fsc3RvcmFnZSwgJHJvb3RTY29wZSwgYmFzZUFwaSkge1xuICAgIHZhciBzZXJ2aWNlID0ge1xuICAgICAgZ2V0T3B0aW9uczogZ2V0T3B0aW9ucyxcbiAgICAgIGdldENsaWVudFRva2VuOiBnZXRDbGllbnRUb2tlbixcbiAgICAgIHVwZGF0ZTogdXBkYXRlXG4gICAgfVxuXG4gICAgcmV0dXJuIHNlcnZpY2U7XG5cbiAgICBmdW5jdGlvbiBnZXRPcHRpb25zKCkge1xuICAgICAgdmFyIGRlZmVycmVkID0gJHEuZGVmZXIoKTtcblxuICAgICAgJGh0dHAoe1xuICAgICAgICBtZXRob2Q6ICdHRVQnLFxuICAgICAgICB1cmw6IGJhc2VBcGkgKyAnL2NhbXBhaWduL29wdGlvbnMvJ1xuICAgICAgfSkuc3VjY2VzcyhmdW5jdGlvbihkYXRhLCBzdGF0dXMsIGhlYWRlcnMsIGNvbmZpZykge1xuICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgfSkuZXJyb3IoZnVuY3Rpb24oZXJyKSB7XG4gICAgICAgIGRlZmVycmVkLnJlamVjdChlcnIpO1xuICAgICAgfSk7XG5cbiAgICAgIHJldHVybiBkZWZlcnJlZC5wcm9taXNlO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIHVwZGF0ZSh1c2VySWQsIHBheWxvYWQpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICB2YXIgdXJsID0gYmFzZUFwaSArICcvdXNlci8nICsgdXNlcklkO1xuICAgICAgJGh0dHAucHV0KHVybCwgcGF5bG9hZClcbiAgICAgICAgLnN1Y2Nlc3MoZnVuY3Rpb24oZGF0YSwgc3RhdHVzLCBoZWFkZXJzLCBjb25maWcpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZXNvbHZlKGRhdGEpO1xuICAgICAgICAgIGFuZ3VsYXIuY29weShkYXRhLCAkcm9vdFNjb3BlLnVzZXIpO1xuICAgICAgICAgICRsb2NhbHN0b3JhZ2Uuc2V0T2JqZWN0KCd1c2VyJywgZGF0YSk7XG4gICAgICAgIH0pXG4gICAgICAgIC5lcnJvcihmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBkZWZlcnJlZC5yZWplY3QoZXJyKTtcbiAgICAgICAgfSk7XG4gICAgICByZXR1cm4gZGVmZXJyZWQucHJvbWlzZTtcbiAgICB9XG4gIH1cblxuICBmdW5jdGlvbiBnZXRDbGllbnRUb2tlbigpIHtcbiAgICByZXR1cm4ge307XG4gIH1cblxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuZmFjdG9yeSgnJHV0aWwnLCBmYWN0b3J5KTtcblxuICBmdW5jdGlvbiBmYWN0b3J5KCkge1xuICAgIHZhciBzZXJ2aWNlID0ge1xuICAgICAgZ2V0Q291bnRyaWVzOiBnZXRDb3VudHJpZXMsXG4gICAgICBnZXRBY3Rpb25zOiBnZXRBY3Rpb25zLFxuICAgICAgZ2V0TWVkaWRhczogZ2V0TWVkaWRhcyxcbiAgICAgIGl0ZW06IHt9XG4gICAgfTtcblxuICAgIHJldHVybiBzZXJ2aWNlO1xuXG4gICAgZnVuY3Rpb24gZ2V0TWVkaWRhcygpIHtcbiAgICAgIHJldHVybiBbe1xuICAgICAgICBpZDogMSxcbiAgICAgICAgbm9tYnJlOiAnTC4nXG4gICAgICB9LFxuICAgICAge1xuICAgICAgICBpZDogMixcbiAgICAgICAgbm9tYnJlOiAnbUwuJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IDMsXG4gICAgICAgIG5vbWJyZTogJ2cuJ1xuICAgICAgfSxcbiAgICAgIHtcbiAgICAgICAgaWQ6IDQsXG4gICAgICAgIG5vbWJyZTogJ0tnLidcbiAgICAgIH1dXG4gICAgfVxuICAgIGZ1bmN0aW9uIGdldEFjdGlvbnMoKSB7XG4gICAgICByZXR1cm4gW3tcbiAgICAgICAgbmFtZTogJ0Rlc21hbGV6YW1pZW50bycsXG4gICAgICAgIF9sb3dlcm5hbWU6ICdkZXNtYWxlemFtaWVudG8nLFxuICAgICAgICBpZDogMVxuICAgICAgfSwge1xuICAgICAgICB0ZW1wbGF0ZTogJ3JpZWdvLnRtcGwuaHRtbCcsXG4gICAgICAgIG5hbWU6ICdSaWVnbycsXG4gICAgICAgIF9sb3dlcm5hbWU6ICdyaWVnbycsXG4gICAgICAgIGlkOiAyXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdGZXJ0aWxpemFjaW9uJyxcbiAgICAgICAgX2xvd2VybmFtZTogJ2ZlcnRpbGl6YWNpb24nLFxuICAgICAgICBpZDogMyxcbiAgICAgICAgdGVtcGxhdGU6ICdmZXJ0aWxpemFjaW9uLnRtcGwuaHRtbCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BsYWd1aWNpZGEnLFxuICAgICAgICBfbG93ZXJuYW1lOiAncGxhZ2ljaWRhJyxcbiAgICAgICAgaWQ6IDQsXG4gICAgICAgIHRlbXBsYXRlOiAncGxhZ3VpY2lkYS50bXBsLmh0bWwnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMaW1waWV6YScsXG4gICAgICAgIF9sb3dlcm5hbWU6ICdsaW1waWV6YScsXG4gICAgICAgIGlkOiA1XG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdPYnNlcnZhY2lvbmVzJyxcbiAgICAgICAgX2xvd2VybmFtZTogJ29ic2VydmFjaW9uZXMnLFxuICAgICAgICBpZDogNixcbiAgICAgICAgdGVtcGxhdGU6ICdvYnNlcnZhY2lvbmVzLnRtcGwuaHRtbCdcbiAgICAgIH1dO1xuICAgIH1cblxuICAgIGZ1bmN0aW9uIGdldENvdW50cmllcygpIHtcbiAgICAgIHJldHVybiBbe1xuICAgICAgICBuYW1lOiAnQWZnaGFuaXN0YW4nLFxuICAgICAgICBpZDogJ0FGJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnw4VsYW5kIElzbGFuZHMnLFxuICAgICAgICBpZDogJ0FYJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQWxiYW5pYScsXG4gICAgICAgIGlkOiAnQUwnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBbGdlcmlhJyxcbiAgICAgICAgaWQ6ICdEWidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0FtZXJpY2FuIFNhbW9hJyxcbiAgICAgICAgaWQ6ICdBUydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0FuZG9yckEnLFxuICAgICAgICBpZDogJ0FEJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQW5nb2xhJyxcbiAgICAgICAgaWQ6ICdBTydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0FuZ3VpbGxhJyxcbiAgICAgICAgaWQ6ICdBSSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0FudGFyY3RpY2EnLFxuICAgICAgICBpZDogJ0FRJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQW50aWd1YSBhbmQgQmFyYnVkYScsXG4gICAgICAgIGlkOiAnQUcnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBcmdlbnRpbmEnLFxuICAgICAgICBpZDogJ0FSJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQXJtZW5pYScsXG4gICAgICAgIGlkOiAnQU0nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBcnViYScsXG4gICAgICAgIGlkOiAnQVcnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBdXN0cmFsaWEnLFxuICAgICAgICBpZDogJ0FVJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQXVzdHJpYScsXG4gICAgICAgIGlkOiAnQVQnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdBemVyYmFpamFuJyxcbiAgICAgICAgaWQ6ICdBWidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0JhaGFtYXMnLFxuICAgICAgICBpZDogJ0JTJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQmFocmFpbicsXG4gICAgICAgIGlkOiAnQkgnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCYW5nbGFkZXNoJyxcbiAgICAgICAgaWQ6ICdCRCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0JhcmJhZG9zJyxcbiAgICAgICAgaWQ6ICdCQidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0JlbGFydXMnLFxuICAgICAgICBpZDogJ0JZJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQmVsZ2l1bScsXG4gICAgICAgIGlkOiAnQkUnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCZWxpemUnLFxuICAgICAgICBpZDogJ0JaJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQmVuaW4nLFxuICAgICAgICBpZDogJ0JKJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQmVybXVkYScsXG4gICAgICAgIGlkOiAnQk0nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCaHV0YW4nLFxuICAgICAgICBpZDogJ0JUJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQm9saXZpYScsXG4gICAgICAgIGlkOiAnQk8nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCb3NuaWEgYW5kIEhlcnplZ292aW5hJyxcbiAgICAgICAgaWQ6ICdCQSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0JvdHN3YW5hJyxcbiAgICAgICAgaWQ6ICdCVydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0JvdXZldCBJc2xhbmQnLFxuICAgICAgICBpZDogJ0JWJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQnJhemlsJyxcbiAgICAgICAgaWQ6ICdCUidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0JyaXRpc2ggSW5kaWFuIE9jZWFuIFRlcnJpdG9yeScsXG4gICAgICAgIGlkOiAnSU8nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCcnVuZWkgRGFydXNzYWxhbScsXG4gICAgICAgIGlkOiAnQk4nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCdWxnYXJpYScsXG4gICAgICAgIGlkOiAnQkcnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdCdXJraW5hIEZhc28nLFxuICAgICAgICBpZDogJ0JGJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQnVydW5kaScsXG4gICAgICAgIGlkOiAnQkknXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDYW1ib2RpYScsXG4gICAgICAgIGlkOiAnS0gnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDYW1lcm9vbicsXG4gICAgICAgIGlkOiAnQ00nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDYW5hZGEnLFxuICAgICAgICBpZDogJ0NBJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQ2FwZSBWZXJkZScsXG4gICAgICAgIGlkOiAnQ1YnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDYXltYW4gSXNsYW5kcycsXG4gICAgICAgIGlkOiAnS1knXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDZW50cmFsIEFmcmljYW4gUmVwdWJsaWMnLFxuICAgICAgICBpZDogJ0NGJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQ2hhZCcsXG4gICAgICAgIGlkOiAnVEQnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDaGlsZScsXG4gICAgICAgIGlkOiAnQ0wnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDaGluYScsXG4gICAgICAgIGlkOiAnQ04nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDaHJpc3RtYXMgSXNsYW5kJyxcbiAgICAgICAgaWQ6ICdDWCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0NvY29zIChLZWVsaW5nKSBJc2xhbmRzJyxcbiAgICAgICAgaWQ6ICdDQydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0NvbG9tYmlhJyxcbiAgICAgICAgaWQ6ICdDTydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0NvbW9yb3MnLFxuICAgICAgICBpZDogJ0tNJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQ29uZ28nLFxuICAgICAgICBpZDogJ0NHJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQ29uZ28sIFRoZSBEZW1vY3JhdGljIFJlcHVibGljIG9mIHRoZScsXG4gICAgICAgIGlkOiAnQ0QnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDb29rIElzbGFuZHMnLFxuICAgICAgICBpZDogJ0NLJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQ29zdGEgUmljYScsXG4gICAgICAgIGlkOiAnQ1InXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDb3RlIERcXCdJdm9pcmUnLFxuICAgICAgICBpZDogJ0NJJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnQ3JvYXRpYScsXG4gICAgICAgIGlkOiAnSFInXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDdWJhJyxcbiAgICAgICAgaWQ6ICdDVSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0N5cHJ1cycsXG4gICAgICAgIGlkOiAnQ1knXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdDemVjaCBSZXB1YmxpYycsXG4gICAgICAgIGlkOiAnQ1onXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdEZW5tYXJrJyxcbiAgICAgICAgaWQ6ICdESydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0RqaWJvdXRpJyxcbiAgICAgICAgaWQ6ICdESidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0RvbWluaWNhJyxcbiAgICAgICAgaWQ6ICdETSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0RvbWluaWNhbiBSZXB1YmxpYycsXG4gICAgICAgIGlkOiAnRE8nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdFY3VhZG9yJyxcbiAgICAgICAgaWQ6ICdFQydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0VneXB0JyxcbiAgICAgICAgaWQ6ICdFRydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0VsIFNhbHZhZG9yJyxcbiAgICAgICAgaWQ6ICdTVidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0VxdWF0b3JpYWwgR3VpbmVhJyxcbiAgICAgICAgaWQ6ICdHUSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0VyaXRyZWEnLFxuICAgICAgICBpZDogJ0VSJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnRXN0b25pYScsXG4gICAgICAgIGlkOiAnRUUnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdFdGhpb3BpYScsXG4gICAgICAgIGlkOiAnRVQnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdGYWxrbGFuZCBJc2xhbmRzIChNYWx2aW5hcyknLFxuICAgICAgICBpZDogJ0ZLJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnRmFyb2UgSXNsYW5kcycsXG4gICAgICAgIGlkOiAnRk8nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdGaWppJyxcbiAgICAgICAgaWQ6ICdGSidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0ZpbmxhbmQnLFxuICAgICAgICBpZDogJ0ZJJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnRnJhbmNlJyxcbiAgICAgICAgaWQ6ICdGUidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0ZyZW5jaCBHdWlhbmEnLFxuICAgICAgICBpZDogJ0dGJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnRnJlbmNoIFBvbHluZXNpYScsXG4gICAgICAgIGlkOiAnUEYnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdGcmVuY2ggU291dGhlcm4gVGVycml0b3JpZXMnLFxuICAgICAgICBpZDogJ1RGJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnR2Fib24nLFxuICAgICAgICBpZDogJ0dBJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnR2FtYmlhJyxcbiAgICAgICAgaWQ6ICdHTSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0dlb3JnaWEnLFxuICAgICAgICBpZDogJ0dFJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnR2VybWFueScsXG4gICAgICAgIGlkOiAnREUnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdHaGFuYScsXG4gICAgICAgIGlkOiAnR0gnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdHaWJyYWx0YXInLFxuICAgICAgICBpZDogJ0dJJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnR3JlZWNlJyxcbiAgICAgICAgaWQ6ICdHUidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0dyZWVubGFuZCcsXG4gICAgICAgIGlkOiAnR0wnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdHcmVuYWRhJyxcbiAgICAgICAgaWQ6ICdHRCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0d1YWRlbG91cGUnLFxuICAgICAgICBpZDogJ0dQJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnR3VhbScsXG4gICAgICAgIGlkOiAnR1UnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdHdWF0ZW1hbGEnLFxuICAgICAgICBpZDogJ0dUJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnR3Vlcm5zZXknLFxuICAgICAgICBpZDogJ0dHJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnR3VpbmVhJyxcbiAgICAgICAgaWQ6ICdHTidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0d1aW5lYS1CaXNzYXUnLFxuICAgICAgICBpZDogJ0dXJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnR3V5YW5hJyxcbiAgICAgICAgaWQ6ICdHWSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0hhaXRpJyxcbiAgICAgICAgaWQ6ICdIVCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0hlYXJkIElzbGFuZCBhbmQgTWNkb25hbGQgSXNsYW5kcycsXG4gICAgICAgIGlkOiAnSE0nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdIb2x5IFNlZSAoVmF0aWNhbiBDaXR5IFN0YXRlKScsXG4gICAgICAgIGlkOiAnVkEnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdIb25kdXJhcycsXG4gICAgICAgIGlkOiAnSE4nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdIb25nIEtvbmcnLFxuICAgICAgICBpZDogJ0hLJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnSHVuZ2FyeScsXG4gICAgICAgIGlkOiAnSFUnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJY2VsYW5kJyxcbiAgICAgICAgaWQ6ICdJUydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luZGlhJyxcbiAgICAgICAgaWQ6ICdJTidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0luZG9uZXNpYScsXG4gICAgICAgIGlkOiAnSUQnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJcmFuLCBJc2xhbWljIFJlcHVibGljIE9mJyxcbiAgICAgICAgaWQ6ICdJUidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0lyYXEnLFxuICAgICAgICBpZDogJ0lRJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnSXJlbGFuZCcsXG4gICAgICAgIGlkOiAnSUUnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJc2xlIG9mIE1hbicsXG4gICAgICAgIGlkOiAnSU0nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdJc3JhZWwnLFxuICAgICAgICBpZDogJ0lMJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnSXRhbHknLFxuICAgICAgICBpZDogJ0lUJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnSmFtYWljYScsXG4gICAgICAgIGlkOiAnSk0nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdKYXBhbicsXG4gICAgICAgIGlkOiAnSlAnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdKZXJzZXknLFxuICAgICAgICBpZDogJ0pFJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnSm9yZGFuJyxcbiAgICAgICAgaWQ6ICdKTydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0themFraHN0YW4nLFxuICAgICAgICBpZDogJ0taJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnS2VueWEnLFxuICAgICAgICBpZDogJ0tFJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnS2lyaWJhdGknLFxuICAgICAgICBpZDogJ0tJJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnS29yZWEsIERlbW9jcmF0aWMgUGVvcGxlXFwnUyBSZXB1YmxpYyBvZicsXG4gICAgICAgIGlkOiAnS1AnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdLb3JlYSwgUmVwdWJsaWMgb2YnLFxuICAgICAgICBpZDogJ0tSJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnS3V3YWl0JyxcbiAgICAgICAgaWQ6ICdLVydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0t5cmd5enN0YW4nLFxuICAgICAgICBpZDogJ0tHJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTGFvIFBlb3BsZVxcJ1MgRGVtb2NyYXRpYyBSZXB1YmxpYycsXG4gICAgICAgIGlkOiAnTEEnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMYXR2aWEnLFxuICAgICAgICBpZDogJ0xWJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTGViYW5vbicsXG4gICAgICAgIGlkOiAnTEInXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMZXNvdGhvJyxcbiAgICAgICAgaWQ6ICdMUydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0xpYmVyaWEnLFxuICAgICAgICBpZDogJ0xSJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTGlieWFuIEFyYWIgSmFtYWhpcml5YScsXG4gICAgICAgIGlkOiAnTFknXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMaWVjaHRlbnN0ZWluJyxcbiAgICAgICAgaWQ6ICdMSSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ0xpdGh1YW5pYScsXG4gICAgICAgIGlkOiAnTFQnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdMdXhlbWJvdXJnJyxcbiAgICAgICAgaWQ6ICdMVSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01hY2FvJyxcbiAgICAgICAgaWQ6ICdNTydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01hY2Vkb25pYSwgVGhlIEZvcm1lciBZdWdvc2xhdiBSZXB1YmxpYyBvZicsXG4gICAgICAgIGlkOiAnTUsnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNYWRhZ2FzY2FyJyxcbiAgICAgICAgaWQ6ICdNRydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01hbGF3aScsXG4gICAgICAgIGlkOiAnTVcnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNYWxheXNpYScsXG4gICAgICAgIGlkOiAnTVknXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNYWxkaXZlcycsXG4gICAgICAgIGlkOiAnTVYnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNYWxpJyxcbiAgICAgICAgaWQ6ICdNTCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01hbHRhJyxcbiAgICAgICAgaWQ6ICdNVCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01hcnNoYWxsIElzbGFuZHMnLFxuICAgICAgICBpZDogJ01IJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTWFydGluaXF1ZScsXG4gICAgICAgIGlkOiAnTVEnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNYXVyaXRhbmlhJyxcbiAgICAgICAgaWQ6ICdNUidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01hdXJpdGl1cycsXG4gICAgICAgIGlkOiAnTVUnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNYXlvdHRlJyxcbiAgICAgICAgaWQ6ICdZVCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01leGljbycsXG4gICAgICAgIGlkOiAnTVgnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNaWNyb25lc2lhLCBGZWRlcmF0ZWQgU3RhdGVzIG9mJyxcbiAgICAgICAgaWQ6ICdGTSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01vbGRvdmEsIFJlcHVibGljIG9mJyxcbiAgICAgICAgaWQ6ICdNRCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01vbmFjbycsXG4gICAgICAgIGlkOiAnTUMnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNb25nb2xpYScsXG4gICAgICAgIGlkOiAnTU4nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNb250c2VycmF0JyxcbiAgICAgICAgaWQ6ICdNUydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ01vcm9jY28nLFxuICAgICAgICBpZDogJ01BJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTW96YW1iaXF1ZScsXG4gICAgICAgIGlkOiAnTVonXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdNeWFubWFyJyxcbiAgICAgICAgaWQ6ICdNTSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ05hbWliaWEnLFxuICAgICAgICBpZDogJ05BJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTmF1cnUnLFxuICAgICAgICBpZDogJ05SJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTmVwYWwnLFxuICAgICAgICBpZDogJ05QJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTmV0aGVybGFuZHMnLFxuICAgICAgICBpZDogJ05MJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTmV0aGVybGFuZHMgQW50aWxsZXMnLFxuICAgICAgICBpZDogJ0FOJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTmV3IENhbGVkb25pYScsXG4gICAgICAgIGlkOiAnTkMnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdOZXcgWmVhbGFuZCcsXG4gICAgICAgIGlkOiAnTlonXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdOaWNhcmFndWEnLFxuICAgICAgICBpZDogJ05JJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTmlnZXInLFxuICAgICAgICBpZDogJ05FJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnTmlnZXJpYScsXG4gICAgICAgIGlkOiAnTkcnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdOaXVlJyxcbiAgICAgICAgaWQ6ICdOVSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ05vcmZvbGsgSXNsYW5kJyxcbiAgICAgICAgaWQ6ICdORidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ05vcnRoZXJuIE1hcmlhbmEgSXNsYW5kcycsXG4gICAgICAgIGlkOiAnTVAnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdOb3J3YXknLFxuICAgICAgICBpZDogJ05PJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnT21hbicsXG4gICAgICAgIGlkOiAnT00nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdQYWtpc3RhbicsXG4gICAgICAgIGlkOiAnUEsnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdQYWxhdScsXG4gICAgICAgIGlkOiAnUFcnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdQYWxlc3RpbmlhbiBUZXJyaXRvcnksIE9jY3VwaWVkJyxcbiAgICAgICAgaWQ6ICdQUydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BhbmFtYScsXG4gICAgICAgIGlkOiAnUEEnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdQYXB1YSBOZXcgR3VpbmVhJyxcbiAgICAgICAgaWQ6ICdQRydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BhcmFndWF5JyxcbiAgICAgICAgaWQ6ICdQWSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BlcnUnLFxuICAgICAgICBpZDogJ1BFJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnUGhpbGlwcGluZXMnLFxuICAgICAgICBpZDogJ1BIJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnUGl0Y2Fpcm4nLFxuICAgICAgICBpZDogJ1BOJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnUG9sYW5kJyxcbiAgICAgICAgaWQ6ICdQTCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1BvcnR1Z2FsJyxcbiAgICAgICAgaWQ6ICdQVCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1B1ZXJ0byBSaWNvJyxcbiAgICAgICAgaWQ6ICdQUidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1FhdGFyJyxcbiAgICAgICAgaWQ6ICdRQSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1JldW5pb24nLFxuICAgICAgICBpZDogJ1JFJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnUm9tYW5pYScsXG4gICAgICAgIGlkOiAnUk8nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdSdXNzaWFuIEZlZGVyYXRpb24nLFxuICAgICAgICBpZDogJ1JVJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnUldBTkRBJyxcbiAgICAgICAgaWQ6ICdSVydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1NhaW50IEhlbGVuYScsXG4gICAgICAgIGlkOiAnU0gnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTYWludCBLaXR0cyBhbmQgTmV2aXMnLFxuICAgICAgICBpZDogJ0tOJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnU2FpbnQgTHVjaWEnLFxuICAgICAgICBpZDogJ0xDJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnU2FpbnQgUGllcnJlIGFuZCBNaXF1ZWxvbicsXG4gICAgICAgIGlkOiAnUE0nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTYWludCBWaW5jZW50IGFuZCB0aGUgR3JlbmFkaW5lcycsXG4gICAgICAgIGlkOiAnVkMnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTYW1vYScsXG4gICAgICAgIGlkOiAnV1MnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTYW4gTWFyaW5vJyxcbiAgICAgICAgaWQ6ICdTTSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1NhbyBUb21lIGFuZCBQcmluY2lwZScsXG4gICAgICAgIGlkOiAnU1QnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTYXVkaSBBcmFiaWEnLFxuICAgICAgICBpZDogJ1NBJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnU2VuZWdhbCcsXG4gICAgICAgIGlkOiAnU04nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTZXJiaWEgYW5kIE1vbnRlbmVncm8nLFxuICAgICAgICBpZDogJ0NTJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnU2V5Y2hlbGxlcycsXG4gICAgICAgIGlkOiAnU0MnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTaWVycmEgTGVvbmUnLFxuICAgICAgICBpZDogJ1NMJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnU2luZ2Fwb3JlJyxcbiAgICAgICAgaWQ6ICdTRydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1Nsb3Zha2lhJyxcbiAgICAgICAgaWQ6ICdTSydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1Nsb3ZlbmlhJyxcbiAgICAgICAgaWQ6ICdTSSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1NvbG9tb24gSXNsYW5kcycsXG4gICAgICAgIGlkOiAnU0InXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTb21hbGlhJyxcbiAgICAgICAgaWQ6ICdTTydcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1NvdXRoIEFmcmljYScsXG4gICAgICAgIGlkOiAnWkEnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTb3V0aCBHZW9yZ2lhIGFuZCB0aGUgU291dGggU2FuZHdpY2ggSXNsYW5kcycsXG4gICAgICAgIGlkOiAnR1MnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTcGFpbicsXG4gICAgICAgIGlkOiAnRVMnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTcmkgTGFua2EnLFxuICAgICAgICBpZDogJ0xLJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnU3VkYW4nLFxuICAgICAgICBpZDogJ1NEJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnU3VyaW5hbWUnLFxuICAgICAgICBpZDogJ1NSJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnU3ZhbGJhcmQgYW5kIEphbiBNYXllbicsXG4gICAgICAgIGlkOiAnU0onXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdTd2F6aWxhbmQnLFxuICAgICAgICBpZDogJ1NaJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnU3dlZGVuJyxcbiAgICAgICAgaWQ6ICdTRSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1N3aXR6ZXJsYW5kJyxcbiAgICAgICAgaWQ6ICdDSCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1N5cmlhbiBBcmFiIFJlcHVibGljJyxcbiAgICAgICAgaWQ6ICdTWSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RhaXdhbiwgUHJvdmluY2Ugb2YgQ2hpbmEnLFxuICAgICAgICBpZDogJ1RXJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnVGFqaWtpc3RhbicsXG4gICAgICAgIGlkOiAnVEonXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdUYW56YW5pYSwgVW5pdGVkIFJlcHVibGljIG9mJyxcbiAgICAgICAgaWQ6ICdUWidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RoYWlsYW5kJyxcbiAgICAgICAgaWQ6ICdUSCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RpbW9yLUxlc3RlJyxcbiAgICAgICAgaWQ6ICdUTCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1RvZ28nLFxuICAgICAgICBpZDogJ1RHJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnVG9rZWxhdScsXG4gICAgICAgIGlkOiAnVEsnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdUb25nYScsXG4gICAgICAgIGlkOiAnVE8nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdUcmluaWRhZCBhbmQgVG9iYWdvJyxcbiAgICAgICAgaWQ6ICdUVCdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1R1bmlzaWEnLFxuICAgICAgICBpZDogJ1ROJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnVHVya2V5JyxcbiAgICAgICAgaWQ6ICdUUidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1R1cmttZW5pc3RhbicsXG4gICAgICAgIGlkOiAnVE0nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdUdXJrcyBhbmQgQ2FpY29zIElzbGFuZHMnLFxuICAgICAgICBpZDogJ1RDJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnVHV2YWx1JyxcbiAgICAgICAgaWQ6ICdUVidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1VnYW5kYScsXG4gICAgICAgIGlkOiAnVUcnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdVa3JhaW5lJyxcbiAgICAgICAgaWQ6ICdVQSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1VuaXRlZCBBcmFiIEVtaXJhdGVzJyxcbiAgICAgICAgaWQ6ICdBRSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1VuaXRlZCBLaW5nZG9tJyxcbiAgICAgICAgaWQ6ICdHQidcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1VuaXRlZCBTdGF0ZXMnLFxuICAgICAgICBpZDogJ1VTJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnVW5pdGVkIFN0YXRlcyBNaW5vciBPdXRseWluZyBJc2xhbmRzJyxcbiAgICAgICAgaWQ6ICdVTSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1VydWd1YXknLFxuICAgICAgICBpZDogJ1VZJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnVXpiZWtpc3RhbicsXG4gICAgICAgIGlkOiAnVVonXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdWYW51YXR1JyxcbiAgICAgICAgaWQ6ICdWVSdcbiAgICAgIH0sIHtcbiAgICAgICAgbmFtZTogJ1ZlbmV6dWVsYScsXG4gICAgICAgIGlkOiAnVkUnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdWaWV0IE5hbScsXG4gICAgICAgIGlkOiAnVk4nXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdWaXJnaW4gSXNsYW5kcywgQnJpdGlzaCcsXG4gICAgICAgIGlkOiAnVkcnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdWaXJnaW4gSXNsYW5kcywgVS5TLicsXG4gICAgICAgIGlkOiAnVkknXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdXYWxsaXMgYW5kIEZ1dHVuYScsXG4gICAgICAgIGlkOiAnV0YnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdXZXN0ZXJuIFNhaGFyYScsXG4gICAgICAgIGlkOiAnRUgnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdZZW1lbicsXG4gICAgICAgIGlkOiAnWUUnXG4gICAgICB9LCB7XG4gICAgICAgIG5hbWU6ICdaYW1iaWEnLFxuICAgICAgICBpZDogJ1pNJ1xuICAgICAgfSwge1xuICAgICAgICBuYW1lOiAnWmltYmFid2UnLFxuICAgICAgICBpZDogJ1pXJ1xuICAgICAgfV07XG4gICAgfVxuICB9XG5cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmRpcmVjdGl2ZSgnZHJvcHpvbmUnLCBkcm9wem9uZSk7XG5cbiAgZHJvcHpvbmUuJGluamVjdCA9IFsnRHJvcHpvbmUnXTtcblxuICBmdW5jdGlvbiBkcm9wem9uZShEcm9wem9uZSkge1xuICAgIHZhciBkaXJlY3RpdmUgPSB7XG4gICAgICBsaW5rOiBsaW5rLFxuICAgICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgICBzY29wZToge1xuICAgICAgICBkcm9wem9uZTogJz1kcm9wem9uZScsXG4gICAgICAgIHJlc2V0OiAnQHJlc2V0J1xuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGRpcmVjdGl2ZTtcblxuICAgIGZ1bmN0aW9uIGxpbmsoc2NvcGUsIGVsZW1lbnQsIGF0dHJzKSB7XG4gICAgICB2YXIgY29uZmlnLCB6b25lO1xuXG4gICAgICBjb25maWcgPSBzY29wZS5kcm9wem9uZTtcbiAgICAgIHpvbmUgPSBuZXcgRHJvcHpvbmUoZWxlbWVudFswXSwgY29uZmlnLm9wdGlvbnMpO1xuXG4gICAgICBpZiAoc2NvcGUucmVzZXQpIHtcbiAgICAgICAgem9uZS5vbignY29tcGxldGUnLCBmdW5jdGlvbihmaWxlKSB7XG4gICAgICAgICAgem9uZS5yZW1vdmVGaWxlKGZpbGUpO1xuICAgICAgICB9KTtcbiAgICAgIH1cblxuICAgICAgYW5ndWxhci5mb3JFYWNoKGNvbmZpZy5ldmVudEhhbmRsZXJzLCBmdW5jdGlvbihoYW5kbGVyLCBldmVudCkge1xuICAgICAgICB6b25lLm9uKGV2ZW50LCBoYW5kbGVyKTtcbiAgICAgIH0pO1xuICAgIH1cbiAgfVxuXG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAndXNlIHN0cmljdCc7XG5cbiAgYW5ndWxhclxuICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgIC5kaXJlY3RpdmUoJ2F1dG9Db21wbGV0ZScsIGRpcmVjdGl2ZSk7XG5cbiAgLyogQG5nSW5qZWN0ICovXG4gIGZ1bmN0aW9uIGRpcmVjdGl2ZSgpIHtcbiAgICB2YXIgZGlyZWN0aXZlID0ge1xuICAgICAgcmVzdHJpY3Q6ICdFQScsXG4gICAgICB0ZW1wbGF0ZVVybDogJ2Fzc2V0cy92aWV3cy9hdXRvY29tcGxldGUvYXV0b2NvbXBsZXRlLmh0bWwnLFxuICAgICAgc2NvcGU6IHtcbiAgICAgICAgbWV0YTogJz0nLFxuICAgICAgICBpdGVtOiAnPT9uZ01vZGVsJ1xuICAgICAgfSxcbiAgICAgIGxpbms6IGxpbmtGdW5jLFxuICAgICAgY29udHJvbGxlcjogQ29udHJvbGxlcixcbiAgICAgIGNvbnRyb2xsZXJBczogJ3ZtJyxcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXG4gICAgfTtcblxuICAgIHJldHVybiBkaXJlY3RpdmU7XG5cbiAgICBmdW5jdGlvbiBsaW5rRnVuYyhzY29wZSwgZWwsIGF0dHIsIGN0cmwpIHtcblxuICAgIH1cbiAgfVxuXG4gIENvbnRyb2xsZXIuJGluamVjdCA9IFsnXycsICckc2NvcGUnLCAnJGxvZycsICckc2llbWJyYXMnXTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gQ29udHJvbGxlcihfLCAkc2NvcGUsICRsb2csICRzaWVtYnJhcykge1xuICAgIHZhciB2bSA9IHRoaXM7XG5cbiAgICB2bS5zaW11bGF0ZVF1ZXJ5ID0gZmFsc2U7XG4gICAgdm0uaXNEaXNhYmxlZCA9IGZhbHNlO1xuXG4gICAgLy8gbGlzdCBvZiBgc3RhdGVgIHZhbHVlL2Rpc3BsYXkgb2JqZWN0c1xuICAgIHZtLnF1ZXJ5U2VhcmNoID0gcXVlcnlTZWFyY2g7XG4gICAgdm0uc2VsZWN0ZWRJdGVtQ2hhbmdlID0gc2VsZWN0ZWRJdGVtQ2hhbmdlO1xuICAgIHZtLnNlYXJjaFRleHRDaGFuZ2UgPSBzZWFyY2hUZXh0Q2hhbmdlO1xuXG4gICAgdm0ubmV3U3RhdGUgPSBuZXdTdGF0ZTtcblxuICAgIGFjdGl2YXRlKCk7XG5cbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdhdXRvY29tcGxldGUgZGlyZWN0aXZlJyk7XG4gICAgICBjb25zb2xlLmxvZyh2bS5tZXRhKTtcbiAgICAgIGNvbnNvbGUubG9nKHZtLml0ZW0pO1xuICAgIH1cblxuXG5cbiAgICBmdW5jdGlvbiBuZXdTdGF0ZShzdGF0ZSkge1xuICAgICAgYWxlcnQoXCJTb3JyeSEgWW91J2xsIG5lZWQgdG8gY3JlYXRlIGEgQ29uc3RpdHV0aW9uIGZvciBcIiArIHN0YXRlICsgXCIgZmlyc3QhXCIpO1xuICAgIH1cblxuICAgIC8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKlxuICAgIC8vIEludGVybmFsIG1ldGhvZHNcbiAgICAvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKipcbiAgICAvKipcbiAgICAgKiBTZWFyY2ggZm9yIHN0YXRlcy4uLiB1c2UgJHRpbWVvdXQgdG8gc2ltdWxhdGVcbiAgICAgKiByZW1vdGUgZGF0YXNlcnZpY2UgY2FsbC5cbiAgICAgKi9cbiAgICBmdW5jdGlvbiBxdWVyeVNlYXJjaChxKSB7XG5cbiAgICAgIHZhciBxdWVyeSA9IHtcbiAgICAgICAgcGFnZTogMSxcbiAgICAgICAgbGltaXQ6IDEwMCxcbiAgICAgICAgZmlsdGVyOiAnJyxcbiAgICAgICAgb3JkZXI6ICctaWQnLFxuICAgICAgICBmaWx0ZXI6IHFcbiAgICAgIH1cblxuICAgICAgdmFyIGhhbmRsZXJzID0ge1xuICAgICAgICBnZXRSdWJyb3M6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiAkc2llbWJyYXMuZ2V0UnVicm9zKHF1ZXJ5KTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0Q3VsdGl2b3M6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiAkc2llbWJyYXMuZ2V0Q3VsdGl2b3MocXVlcnkpO1xuICAgICAgICB9LFxuICAgICAgICBnZXRQcm9vdmVkb3JlczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuICRzaWVtYnJhcy5nZXRQcm9vdmVkb3JlcyhxdWVyeSk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldFVuaWRhZGVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gJHNpZW1icmFzLmdldFVuaWRhZGVzKHF1ZXJ5KTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0UHJvb3ZlZG9yQ2F0ZWdvcmlhOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gJHNpZW1icmFzLmdldFByb292ZWRvckNhdGVnb3JpYShxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgcmV0dXJuIGhhbmRsZXJzW3ZtLm1ldGEuaGFuZGxlcl0oKS50aGVuKGZ1bmN0aW9uKHJlc3ApIHtcbiAgICAgICAgcmV0dXJuIF8ubWFwKHJlc3AucmVzdWx0cywgZnVuY3Rpb24oaXRlbSkge1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZDogaXRlbS5pZCxcbiAgICAgICAgICAgIG5vbWJyZTogaXRlbS5ub21icmVcbiAgICAgICAgICB9XG4gICAgICAgIH0pXG4gICAgICB9KTtcblxuICAgIH1cblxuXG4gICAgZnVuY3Rpb24gc2VhcmNoVGV4dENoYW5nZSh0ZXh0KSB7XG4gICAgICAkbG9nLmluZm8oJ1RleHQgY2hhbmdlZCB0byAnICsgdGV4dCk7XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gc2VsZWN0ZWRJdGVtQ2hhbmdlKGl0ZW0pIHtcbiAgICAgICRsb2cuaW5mbygnSXRlbSBjaGFuZ2VkIHRvICcgKyBKU09OLnN0cmluZ2lmeShpdGVtKSk7XG4gICAgfVxuXG5cbiAgICAvKipcbiAgICAgKiBDcmVhdGUgZmlsdGVyIGZ1bmN0aW9uIGZvciBhIHF1ZXJ5IHN0cmluZ1xuICAgICAqL1xuICAgIGZ1bmN0aW9uIGNyZWF0ZUZpbHRlckZvcihxdWVyeSkge1xuICAgICAgdmFyIGxvd2VyY2FzZVF1ZXJ5ID0gYW5ndWxhci5sb3dlcmNhc2UocXVlcnkpO1xuXG4gICAgICByZXR1cm4gZnVuY3Rpb24gZmlsdGVyRm4oc3RhdGUpIHtcbiAgICAgICAgcmV0dXJuIChzdGF0ZS52YWx1ZS5pbmRleE9mKGxvd2VyY2FzZVF1ZXJ5KSA9PT0gMCk7XG4gICAgICB9O1xuXG4gICAgfVxuXG4gIH1cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmRpcmVjdGl2ZSgnYWRiQ2hpcHMnLCBhZGJDaGlwcyk7XG5cbiAgZnVuY3Rpb24gYWRiQ2hpcHMoKSB7XG4gICAgdmFyIGRpcmVjdGl2ZSA9IHtcbiAgICAgIHJlc3RyaWN0OiAnRUEnLFxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgY29udHJvbGxlcjogQ29udHJvbGxlcixcbiAgICAgIGJpbmRUb0NvbnRyb2xsZXI6IHRydWUsXG4gICAgICB0ZW1wbGF0ZVVybDogJ2Fzc2V0cy92aWV3cy9jaGlwcy9hZGJDaGlwcy5odG1sJyxcbiAgICAgIHNjb3BlOiB7XG4gICAgICAgICdtYXAnOiAnPT8nLFxuICAgICAgICAnbWF4JzogJ0A/JyxcbiAgICAgICAgJ2xpc3QnOiAnPScsXG4gICAgICAgICdsYWJlbCc6ICdAPycsXG4gICAgICAgICdjbGljayc6ICc9PycsXG4gICAgICAgICdjcmVhdGUnOiAnPT8nLFxuICAgICAgICAnZmlsdGVyJzogJz0/JyxcbiAgICAgICAgJ2lkJzogJ0A/YWRiSWQnLFxuICAgICAgICAnZGlzYWJsZWQnOiAnPScsXG4gICAgICAgICdlZGl0YWJsZSc6ICc9JyxcbiAgICAgICAgJ2hpZGVMaXN0JzogJz0/JyxcbiAgICAgICAgJ2xpc3RDbGFzcyc6ICdAPycsXG4gICAgICAgICdzaG93Q291bnQnOiAnPT8nLFxuICAgICAgICAncGxhY2Vob2xkZXInOiAnQD8nLFxuICAgICAgICAnbW9kZWwnOiAnPT9uZ01vZGVsJ1xuICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIGRpcmVjdGl2ZTtcbiAgfVxuXG4gIENvbnRyb2xsZXIuJGluamVjdCA9IFsnXycsICdqUXVlcnknLCAnJHNjb3BlJywgJyR0aW1lb3V0JywgJyRtZENvbnN0YW50JywgJyRtZERpYWxvZyddO1xuXG4gIGZ1bmN0aW9uIENvbnRyb2xsZXIoXywgalF1ZXJ5LCAkc2NvcGUsICR0aW1lb3V0LCAkbWRDb25zdGFudCwgJG1kRGlhbG9nKSB7XG4gICAgdmFyIHZtID0gdGhpcztcbiAgICB2bS5xdWVyeUdpdmVuID0gJyc7XG4gICAgdm0uaW5wdXQgPSAnI2NoaXBzLScgKyAodm0uaWQgfHwgRGF0ZS5ub3coKSkgKyAnIG1kLWF1dG9jb21wbGV0ZS13cmFwIGlucHV0JztcbiAgICBhY3RpdmF0ZSgpO1xuXG4gICAgLy8vLy8vLy8vLy8vLy8vL1xuXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICBpZiAoIXZtLm1hcCkgdm0ubWFwID0geyBuYW1lOiAnbmFtZScsIGltYWdlOiAnaW1hZ2UnLCB0eXBlOiAnY2hpcCcgfTtcbiAgICAgIGlmICghdm0ucGxhY2Vob2xkZXIpIHZtLnBsYWNlaG9sZGVyID0gJ1R5cGUgaGVyZSB0byBmaWx0ZXInO1xuICAgICAgaWYgKHZtLmxpc3RDbGFzcyA9PT0gdW5kZWZpbmVkKSB2bS5saXN0Q2xhc3MgPSAnZml4ZWQtcm93cyc7XG4gICAgICBpZiAodm0uc2hvd0NvdW50ID09PSB1bmRlZmluZWQpIHZtLnNob3dDb3VudCA9IHRydWU7XG4gICAgICBpZiAodm0uY3JlYXRlKSBqUXVlcnkoZG9jdW1lbnQpLmtleWRvd24oZGV0ZWN0S2V5KTtcbiAgICAgIGlmICh2bS5maWx0ZXIgPT09IHVuZGVmaW5lZCkgdm0uZmlsdGVyID0ge307XG4gICAgICBpZiAoXy5pc1VuZGVmaW5lZCh2bS5tb2RlbCkpIHZtLm1vZGVsID0gW107XG4gICAgfVxuXG4gICAgdm0ucXVlcnlTZWFyY2ggPSBmdW5jdGlvbihxdWVyeSkge1xuICAgICAgdm0ucXVlcnlHaXZlbiA9IHF1ZXJ5O1xuICAgICAgdmFyIHJlc3VsdHMgPSBxdWVyeSAmJiB2bS5saXN0Lmxlbmd0aCA/IHZtLmxpc3QuZmlsdGVyKGNyZWF0ZUZpbHRlckZvcihxdWVyeSkpIDogW107XG5cbiAgICAgIGlmICh2bS5jcmVhdGUpIGNyZWF0ZShyZXN1bHRzLCBxdWVyeSk7XG5cbiAgICAgIHJldHVybiByZXN1bHRzO1xuICAgIH07XG5cbiAgICB2bS5zZWxlY3RJdGVtID0gZnVuY3Rpb24oaXRlbSkge1xuICAgICAgY29uc29sZS5sb2codm0ubW9kZWwpO1xuICAgICAgaWYgKHZtLmVkaXRhYmxlKSB2bS5tb2RlbC5wdXNoKGl0ZW0pO1xuICAgICAgaWYgKF8uaXNGdW5jdGlvbih2bS5jbGljaykpIHZtLmNsaWNrKGl0ZW0pO1xuICAgIH07XG5cbiAgICB2bS5leGlzdHMgPSBmdW5jdGlvbihpdGVtKSB7XG4gICAgICByZXR1cm4gXy5maW5kSW5kZXgodm0ubW9kZWwsIGZ1bmN0aW9uKG8pIHtcbiAgICAgICAgcmV0dXJuIG9bdm0ubWFwLm5hbWVdID09IGl0ZW1bdm0ubWFwLm5hbWVdO1xuICAgICAgfSkgPj0gMDtcbiAgICB9O1xuXG4gICAgdm0uc3RvcFByb3BhZ2F0aW9uID0gZnVuY3Rpb24oZSkge1xuICAgICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcbiAgICB9O1xuXG4gICAgZnVuY3Rpb24gY3JlYXRlRmlsdGVyRm9yKHF1ZXJ5KSB7XG4gICAgICByZXR1cm4gZnVuY3Rpb24gZmlsdGVyRm4oaXRlbSkge1xuICAgICAgICBpZiAodm0uZXhpc3RzKGl0ZW0pKSByZXR1cm4gZmFsc2U7XG4gICAgICAgIHJldHVybiAoaXRlbVt2bS5tYXAubmFtZV0udG9Mb3dlckNhc2UoKS5pbmRleE9mKHF1ZXJ5LnRvTG93ZXJDYXNlKCkpICE9IC0xKTtcbiAgICAgIH07XG4gICAgfVxuXG4gICAgZnVuY3Rpb24gY3JlYXRlKHJlc3VsdHMsIHF1ZXJ5KSB7XG4gICAgICBpZiAoIXJlc3VsdHMubGVuZ3RoICYmIHF1ZXJ5LmluZGV4T2YoJywnKSAhPSAtMSkge1xuICAgICAgICB2YXIgb2JqZWN0cyA9IHZtLmNyZWF0ZShxdWVyeS5zcGxpdCgnLCcpLmZpbHRlcihmdW5jdGlvbihlKSB7XG4gICAgICAgICAgcmV0dXJuIGUgJiYgZS5sZW5ndGg7XG4gICAgICAgIH0pKTtcbiAgICAgICAgY29uc29sZS5sb2cob2JqZWN0cyk7XG4gICAgICAgIGFuZ3VsYXIuZm9yRWFjaChvYmplY3RzLCBmdW5jdGlvbihvKSB7XG4gICAgICAgICAgdm0uc2VsZWN0SXRlbShvKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgalF1ZXJ5KHZtLmlucHV0KS52YWwoJycpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGZ1bmN0aW9uIGRldGVjdEtleShlKSB7XG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xuXG4gICAgICBpZiAoalF1ZXJ5KHZtLmlucHV0KS5pcygnOmZvY3VzJykgJiYgZS53aGljaCA9PSAxMykge1xuICAgICAgICAkc2NvcGUuJGFwcGx5KGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZhciByZXN1bHRzID0gKHZtLnF1ZXJ5R2l2ZW4gJiYgdm0ubGlzdC5sZW5ndGgpPyB2bS5saXN0LmZpbHRlcihjcmVhdGVGaWx0ZXJGb3Iodm0ucXVlcnlHaXZlbikpIDogW107XG4gICAgICAgICAgY3JlYXRlKHJlc3VsdHMsIHZtLnF1ZXJ5R2l2ZW4gKyAnLCcpO1xuICAgICAgICB9KTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICAkc2NvcGUuJHdhdGNoKCd2bS5saXN0JywgZnVuY3Rpb24oYywgbykge1xuICAgICAgY29uc29sZS5sb2coYyk7XG5cbiAgICB9KVxuICB9XG59KSgpO1xuIiwiKGZ1bmN0aW9uKCkge1xuICAgICd1c2Ugc3RyaWN0JztcblxuICAgIGFuZ3VsYXJcbiAgICAgICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgICAgIC5kaXJlY3RpdmUoJ2Zvb3RlckRpcmVjdGl2ZScsIGZvb3RlckRpcmVjdGl2ZSk7XG5cbiAgICAvKiBAbmdJbmplY3QgKi9cbiAgICBmdW5jdGlvbiBmb290ZXJEaXJlY3RpdmUoKSB7XG4gICAgICAgIHZhciBkaXJlY3RpdmUgPSB7XG4gICAgICAgICAgICByZXN0cmljdDogJ0VBJyxcbiAgICAgICAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL2Zvb3Rlci9mb290ZXIuaHRtbCcsXG4gICAgICAgICAgICBjb250cm9sbGVyOiBmb290ZXJDb250cm9sbGVyLFxuICAgICAgICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZVxuICAgICAgICB9O1xuXG4gICAgICAgIHJldHVybiBkaXJlY3RpdmU7XG4gICAgfVxuXG4gICAgZm9vdGVyQ29udHJvbGxlci4kaW5qZWN0ID0gW107XG5cbiAgICAvKiBAbmdJbmplY3QgKi9cbiAgICBmdW5jdGlvbiBmb290ZXJDb250cm9sbGVyKCkge1xuICAgICAgICB2YXIgdm0gPSB0aGlzO1xuXG4gICAgICAgIGFjdGl2YXRlKCk7XG5cbiAgICAgICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICAgICAgY29uc29sZS5sb2coJ2Zvb3RlciBBY3RpdmF0ZWQnKTtcbiAgICAgICAgfVxuICAgIH1cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICd1c2Ugc3RyaWN0JztcblxuICBhbmd1bGFyXG4gICAgLm1vZHVsZSgnRWxDaW5hcm9BZG1pbicpXG4gICAgLmRpcmVjdGl2ZSgnaGVhZGVyRGlyZWN0aXZlJywgaGVhZGVyRGlyZWN0aXZlKTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gaGVhZGVyRGlyZWN0aXZlKCkge1xuICAgIHZhciBkaXJlY3RpdmUgPSB7XG4gICAgICByZXN0cmljdDogJ0VBJyxcbiAgICAgIHRlbXBsYXRlVXJsOiAnYXNzZXRzL3ZpZXdzL2hlYWRlci9oZWFkZXIuaHRtbCcsXG4gICAgICBjb250cm9sbGVyOiBoZWFkZXJDb250cm9sbGVyLFxuICAgICAgY29udHJvbGxlckFzOiAndm0nLFxuICAgICAgYmluZFRvQ29udHJvbGxlcjogdHJ1ZSxcbiAgICAgIHNjb3BlOiB7fVxuICAgIH07XG5cbiAgICByZXR1cm4gZGlyZWN0aXZlO1xuICB9XG5cbiAgaGVhZGVyQ29udHJvbGxlci4kaW5qZWN0ID0gWydBdXRoJywgJyRzY29wZScsJyRyb290U2NvcGUnXTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gaGVhZGVyQ29udHJvbGxlcihBdXRoLCAkc2NvcGUsICRyb290U2NvcGUpIHtcbiAgICB2YXIgdm0gPSB0aGlzO1xuXG4gICAgLy8vLy8vLy8vLy8vLy8vL1xuXG4gICAgZnVuY3Rpb24gYWN0aXZhdGUoKSB7XG4gICAgICBjb25zb2xlLmxvZygnaGVhZGVyIGRpcmVjdGl2ZScpO1xuICAgIH1cblxuICAgIHZtLmxvZ291dCA9IGZ1bmN0aW9uKCkge1xuICAgICAgY29uc29sZS5sb2coJ0xPR09VVCcpO1xuICAgICAgQXV0aC5sb2dvdXQoKTtcbiAgICB9O1xuXG5cbiAgICAkcm9vdFNjb3BlLiRvbignbG9naW4nLCBmdW5jdGlvbihldmVudCwgdXNlcikge1xuICAgICAgaWYoISRyb290U2NvcGUudXNlcikge1xuICAgICAgICBhbmd1bGFyLmNvcHkodXNlciwgJHJvb3RTY29wZS51c2VyKVxuICAgICAgfVxuICAgICAgY29uc29sZS5sb2coJ2xvZ2luJywgJHJvb3RTY29wZS51c2VyKTtcbiAgICB9KTtcbiAgfVxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgJ3VzZSBzdHJpY3QnO1xuXG4gIGFuZ3VsYXJcbiAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAuY29udHJvbGxlcignTW9kYWxDb250cm9sbGVyJywgQ29udHJvbGxlcik7XG5cbiAgQ29udHJvbGxlci4kaW5qZWN0ID0gWyckc2NvcGUnLCAnJHEnLCAnJGh0dHAnLCAnJHRpbWVvdXQnLCAnJG1kRGlhbG9nJywgJyRwZWRpZG9zJywgJyRzaWVtYnJhcycsICAnJHByb292ZWRvcmVzJywgJ3BheWxvYWQnXTtcblxuICAvKiBAbmdJbmplY3QgKi9cbiAgZnVuY3Rpb24gQ29udHJvbGxlcigkc2NvcGUsICRxLCAkaHR0cCwgJHRpbWVvdXQsICRtZERpYWxvZywgJHBlZGlkb3MsICRzaWVtYnJhcywgJHByb292ZWRvcmVzLCBwYXlsb2FkKSB7XG4gICAgdmFyIHZtID0gdGhpcztcblxuXG4gICAgJHNjb3BlLm1ldGEgPSB7XG4gICAgICBvcHRpb25zOiB7fVxuICAgIH07XG5cblxuICAgIGFjdGl2YXRlKCk7XG5cbiAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgIGNvbnNvbGUubG9nKCdtb2RhbCBjb250cm9sbGVyJyk7XG4gICAgICBjb25zb2xlLmxvZyhwYXlsb2FkKTtcbiAgICAgICRzY29wZS5tZXRhID0gYW5ndWxhci5jb3B5KHBheWxvYWQpO1xuICAgIH1cblxuICAgICRzY29wZS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgJG1kRGlhbG9nLmhpZGUoKTtcbiAgICB9XG5cbiAgICAkc2NvcGUuaGFuZGxlID0gZnVuY3Rpb24oY2FuY2VsKSB7XG4gICAgICBjb25zb2xlLmxvZyhjYW5jZWwpO1xuXG4gICAgICBpZiAoY2FuY2VsKSB7XG4gICAgICAgICRtZERpYWxvZy5jYW5jZWwoKTtcbiAgICAgIH1cblxuICAgICAgaGFuZGxlKHBheWxvYWQudHlwZSwgcGF5bG9hZC5oYW5kbGVyLCAkc2NvcGUubWV0YS5kYXRhKVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwKSB7XG4gICAgICAgICAgJG1kRGlhbG9nLmhpZGUocmVzcCk7XG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KTtcbiAgICB9XG5cblxuICAgICRzY29wZS5zZWxlY3RIYW5kbGVyID0gZnVuY3Rpb24obmFtZSwgdHlwZSwgbWFwKSB7XG4gICAgICBjb25zb2xlLmxvZyhuYW1lLCB0eXBlKTtcblxuICAgICAgdmFyIHF1ZXJ5ID0ge1xuICAgICAgICBwYWdlOiAxLFxuICAgICAgICBsaW1pdDogMTAwLFxuICAgICAgICBmaWx0ZXI6ICcnLFxuICAgICAgICBvcmRlcjogJy1pZCdcbiAgICAgIH1cblxuICAgICAgaWYgKCRzY29wZS5tZXRhWydvcHRpb25zJ11bbmFtZV0pIHJldHVybjtcblxuICAgICAgdmFyIGhhbmRsZXJzID0ge1xuICAgICAgICBnZXRSdWJyb3M6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiAkc2llbWJyYXMuZ2V0UnVicm9zKHF1ZXJ5KTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0Q3VsdGl2b3M6IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiAkc2llbWJyYXMuZ2V0Q3VsdGl2b3MocXVlcnkpO1xuICAgICAgICB9LFxuICAgICAgICBnZXRQcm9vdmVkb3JlczogZnVuY3Rpb24oKSB7XG4gICAgICAgICAgcmV0dXJuICRzaWVtYnJhcy5nZXRQcm9vdmVkb3JlcyhxdWVyeSk7XG4gICAgICAgIH0sXG4gICAgICAgIGdldFVuaWRhZGVzOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gJHNpZW1icmFzLmdldFVuaWRhZGVzKHF1ZXJ5KTtcbiAgICAgICAgfSxcbiAgICAgICAgZ2V0UHJvb3ZlZG9yQ2F0ZWdvcmlhOiBmdW5jdGlvbigpIHtcbiAgICAgICAgICByZXR1cm4gJHNpZW1icmFzLmdldFByb292ZWRvckNhdGVnb3JpYShxdWVyeSk7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKCFoYW5kbGVycy5oYXNPd25Qcm9wZXJ0eSh0eXBlKSkgcmV0dXJuO1xuXG4gICAgICByZXR1cm4gaGFuZGxlcnNbdHlwZV0oKVxuICAgICAgICAudGhlbihmdW5jdGlvbihyZXNwKSB7XG5cbiAgICAgICAgICAkc2NvcGUubWV0YVsnb3B0aW9ucyddW25hbWVdID0gXy5tYXAocmVzcC5yZXN1bHRzLCBmdW5jdGlvbihpKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICBpZDogaS5pZCxcbiAgICAgICAgICAgICAgbmFtZTogaS5ub21icmVcbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9KTtcblxuXG4gICAgICAgICAgLy8gdmFyIHNlbGVjdGVkID0gXy5maWx0ZXIocmVzcC5yZXN1bHRzLCBmdW5jdGlvbihpKSB7XG4gICAgICAgICAgLy8gICByZXR1cm4gaS5pZCA9PT0gJHNjb3BlLm1ldGFbJ2RhdGEnXVtuYW1lXTtcbiAgICAgICAgICAvLyB9KTtcbiAgICAgICAgICAvL1xuICAgICAgICAgIC8vIGNvbnNvbGUubG9nKHNlbGVjdGVkKTtcbiAgICAgICAgICAvL1xuICAgICAgICAgIC8vICRzY29wZS5tZXRhWydkYXRhJ11bbmFtZV0gPSBfLmhlYWQoc2VsZWN0ZWQpO1xuXG4gICAgICAgIH0pXG4gICAgICAgIC5jYXRjaChmdW5jdGlvbihlcnIpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xuICAgICAgICB9KVxuICAgIH1cblxuXG4gICAgJHNjb3BlLiR3YXRjaCgnbWV0YScsIGZ1bmN0aW9uKG8sIGMpIHtcbiAgICAgIGNvbnNvbGUubG9nKG8sIGMpO1xuICAgIH0pO1xuXG5cbiAgICBmdW5jdGlvbiBoYW5kbGUodHlwZSwgaGFuZGxlciwgZGF0YSkge1xuICAgICAgc3dpdGNoICh0eXBlKSB7XG4gICAgICAgIGNhc2UgJ2NsaWVudGVzJzpcbiAgICAgICAgICByZXR1cm4gJHBlZGlkb3NbaGFuZGxlcl0oZGF0YSk7XG4gICAgICAgICAgYnJlYWs7XG4gICAgICAgIGNhc2UgJ3NlbWlsbGFzJzpcbiAgICAgICAgICByZXR1cm4gJHNpZW1icmFzW2hhbmRsZXJdKGRhdGEpO1xuICAgICAgICAgIGJyZWFrO1xuICAgICAgICBjYXNlICdwcm9vdmVkb3Jlcyc6XG4gICAgICAgICAgcmV0dXJuICRwcm9vdmVkb3Jlc1toYW5kbGVyXShkYXRhKTtcbiAgICAgICAgICBicmVhaztcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICByZXR1cm4gZmFrZShkYXRhKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBmdW5jdGlvbiBmYWtlKGRhdGEpIHtcbiAgICAgIHZhciBkZWZlcnJlZCA9ICRxLmRlZmVyKCk7XG4gICAgICAkdGltZW91dChmdW5jdGlvbigpIHtcbiAgICAgICAgZGVmZXJyZWQucmVzb2x2ZShkYXRhKTtcbiAgICAgIH0sIE1hdGgucmFuZG9tKCkgKiAxMDAwLCBmYWxzZSk7XG5cbiAgICAgIHJldHVybiBkZWZlcnJlZC5yZXN1bHRzO1xuICAgIH1cbiAgfVxufSkoKTtcbiIsIihmdW5jdGlvbigpIHtcbiAgICAndXNlIHN0cmljdCc7XG5cbiAgICBhbmd1bGFyXG4gICAgICAgIC5tb2R1bGUoJ0VsQ2luYXJvQWRtaW4nKVxuICAgICAgICAuY29udHJvbGxlcignQWN0aW9uQ29udHJvbGxlcicsIENvbnRyb2xsZXIpO1xuXG4gICAgQ29udHJvbGxlci4kaW5qZWN0ID0gWydfJywgJyRzY29wZScsICckaHR0cCcsICckcScsICckbWREaWFsb2cnLCAgJyR1dGlsJywgJyRpbnN1bW9zJ107XG5cbiAgICAvKiBAbmdJbmplY3QgKi9cbiAgICBmdW5jdGlvbiBDb250cm9sbGVyKF8sICRzY29wZSwgJGh0dHAsICRxLCAkbWREaWFsb2csICR1dGlsLCAkaW5zdW1vcykge1xuICAgICAgICB2YXIgdm0gPSB0aGlzO1xuXG4gICAgICAgIHZtLml0ZW0gPSB7fTtcbiAgICAgICAgdm0uZGF0YSA9IHt9O1xuICAgICAgICB2bS5pbnN1bW9zID0gJGluc3Vtb3MuaW5zdW1vcztcbiAgICAgICAgdm0ubWVkaWRhcyA9ICR1dGlsLmdldE1lZGlkYXMoKTtcbiAgICAgICAgYWN0aXZhdGUoKTtcblxuICAgICAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcbiAgICAgICAgICBjb25zb2xlLmxvZygnYWN0aW9uIGNvbnRyb2xsZXInKTtcbiAgICAgICAgICBhbmd1bGFyLmNvcHkoJHV0aWwuaXRlbSwgdm0uaXRlbSk7XG4gICAgICAgIH1cblxuICAgICAgICB2bS5jbG9zZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZtLml0ZW0udG91Y2hlZCA9IHRydWU7XG4gICAgICAgICAgJG1kRGlhbG9nLmhpZGUodm0uZGF0YSk7XG4gICAgICAgIH1cblxuICAgICAgICB2bS5yZXNwb25zZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHZtLml0ZW0udG91Y2hlZCA9IHRydWU7XG4gICAgICAgICAgJG1kRGlhbG9nLmhpZGUodm0uZGF0YSk7XG4gICAgICAgIH1cblxuICAgICAgICB2bS50aXRsZSA9IGZ1bmN0aW9uKCkge1xuICAgICAgICAgIHJldHVybiBfLmpvaW4oW18uY2FwaXRhbGl6ZSh2bS5pdGVtLnNlbGVjdG9yKSwgdm0uaXRlbS5jdWx0aXZvLmRlc2NyaXB0aW9uXSwnOiAnKTtcbiAgICAgICAgfVxuICAgIH1cbn0pKCk7XG4iLCIoZnVuY3Rpb24oKSB7XG4gICAgJ3VzZSBzdHJpY3QnO1xuXG4gICAgYW5ndWxhclxuICAgICAgICAubW9kdWxlKCdFbENpbmFyb0FkbWluJylcbiAgICAgICAgLmNvbnRyb2xsZXIoJ0FjdGl2aWRhZENvbnRyb2xsZXInLCBDb250cm9sbGVyKTtcblxuICAgIENvbnRyb2xsZXIuJGluamVjdCA9IFsnJGh0dHAnLCAnJHEnXTtcblxuICAgIC8qIEBuZ0luamVjdCAqL1xuICAgIGZ1bmN0aW9uIENvbnRyb2xsZXIoJGh0dHAsICRxKSB7XG4gICAgICAgIHZhciB2bSA9IHRoaXM7XG5cbiAgICAgICAgYWN0aXZhdGUoKTtcblxuICAgICAgICBmdW5jdGlvbiBhY3RpdmF0ZSgpIHtcblxuICAgICAgICB9XG4gICAgfVxufSkoKTtcbiJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
