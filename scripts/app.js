!function(){"use strict";angular.module("AnyDayBuddyAds",["ui.router","ngMaterial","uiGmapgoogle-maps"])}(),function(){"use strict";angular.module("AnyDayBuddyAds").constant("_",window._).constant("jQuery",window.jQuery).constant("Dropzone",window.Dropzone).constant("braintree",window.braintree).constant("baseApi","https://api.anydaybuddy.com")}(),function(){"use strict";function e(e){e.configure({key:"AIzaSyAonFuCDb7HjXUz0uocKbEGUJz91IL9EVs",libraries:"places"})}function o(e,o){e.definePalette("primary",{50:"#9dceda",100:"#65b2c5",200:"#429ab0",300:"#2f6d7c",400:"#265966",500:"#1e4650",600:"#16323a",700:"#0d1f23",800:"#050c0d",900:"#000000",A100:"#9dceda",A200:"#65b2c5",A400:"#265966",A700:"#0d1f23",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 A100 A200"}),e.definePalette("accent",{50:"#d0ebed",100:"#99d4d8",200:"#70c3c8",300:"#43a7ae",400:"#3a9298",500:"#327d82",600:"#29686c",700:"#215256",800:"#183d40",900:"#10282a",A100:"#d0ebed",A200:"#99d4d8",A400:"#3a9298",A700:"#215256",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.definePalette("warn",{50:"#faeee6",100:"#ecc3a7",200:"#e2a379",300:"#d57b3e",400:"#c96b2b",500:"#b05e26",600:"#975121",700:"#7e431b",800:"#643616",900:"#4b2810",A100:"#faeee6",A200:"#ecc3a7",A400:"#c96b2b",A700:"#7e431b",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.theme("default").primaryPalette("primary").accentPalette("accent").warnPalette("warn")}angular.module("AnyDayBuddyAds").config(o).config(e),e.$inject=["uiGmapGoogleMapApiProvider"],o.$inject=["$mdThemingProvider","$locationProvider"]}(),function(){"use strict";function e(e,o,t){e.$state=o,e.user=t.getUser(),e.$on("$stateChangeStart",function(n,r){e.fill=["login","dashboard","dashboard.campaigns"].indexOf(r.name)!==-1,r.authenticate&&!t.isAuthenticated()&&(n.preventDefault(),o.transitionTo("login"))})}angular.module("AnyDayBuddyAds").run(e),e.$inject=["$rootScope","$state","Auth"]}(),function(){"use strict";function e(e,o,t){e.state("home",{url:"/",views:{main:{controller:"HomeController",controllerAs:"vm",templateUrl:"assets/views/home.html"}},authenticate:!1}).state("dashboard",{url:"/dashboard",views:{main:{controller:"DashboardController",controllerAs:"vm",templateUrl:"assets/views/dashboard/index.html"}},authenticate:!0}).state("dashboard.campaigns",{url:"/campaigns",views:{dashboard:{controller:"DashboardController",controllerAs:"vm",templateUrl:"assets/views/dashboard/campaigns.html"}},authenticate:!0}).state("orders",{url:"/orders",views:{main:{controller:"OrdersController",controllerAs:"vm",templateUrl:"assets/views/orders.html"}},authenticate:!1}).state("login",{url:"/login",views:{main:{controller:"LoginController",controllerAs:"vm",templateUrl:"assets/views/login.html"}},authenticate:!1}),o.otherwise("/")}angular.module("AnyDayBuddyAds").config(e),e.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"]}(),function(){"use strict";function e(e,o){}e.$inject=["$http","$q"],angular.module("AnyDayBuddyAds").controller("DashboardController",e)}(),function(){"use strict";function e(e,o){function t(){}function n(e){o("html, body").animate({scrollTop:o(e).offset().top},1e3)}var r=this;r.title="Home Controller",r.scrollTo=n,t()}angular.module("AnyDayBuddyAds").controller("HomeController",e),e.$inject=["$rootScope","jQuery"]}(),function(){"use strict";function e(e,o){var t=this;t.loading=!1,t.auth=function(){console.log("LOGIN",t.user),t.loading=!0,o.login(t.user).then(function(o){console.log(o),e.go("dashboard.campaigns")}).catch(function(e){console.log(e)}).finally(function(){t.loading=!1})}}angular.module("AnyDayBuddyAds").controller("LoginController",e),e.$inject=["$state","Auth"]}(),function(){"use strict";function e(e,o,t){var n=this;n.data={},n.loading=!1,n.isConfirm=!0,n.availability=!0,n.signupAttempt=function(){n.loading=!0,t.register(n.data).then(function(e){t.setCredentials(e),o.hide()},function(e){console.log(e),n.error=!0}).finally(function(){n.loading=!1})},n.checkCredentailsAvailability=function(e){var o={};n.availability=!0,n.data[e]&&(n.loading=!0,o[e]=n.data[e],t.credentialAvaliability(o).then(function(e){n.availability=e.availability,n.loading=!1},function(e){n.loading=!1}))},n.compare=function(){n.isConfirm=n.data.confirmPassword==n.data.password},n.close=function(){o.cancel()}}angular.module("AnyDayBuddyAds").controller("SignupController",e),e.$inject=["$rootScope","$mdDialog","Auth"]}(),function(){"use strict";function e(e,o,t,n,r,i,a){function s(){return a.getObject("user",null)}function c(o){var r=n.defer();return t.post(e+"/auth/validate/"+o).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}function l(o){var r=n.defer();return t.post(e+"/auth/login",o).success(function(e,o,t,n){r.resolve(e),e.hasOwnProperty("token")&&(i.user=angular.copy(e.user),i.$emit("login",e.user),a.set("access_token",e.token),a.setObject("user",e.user))}).error(function(e){r.reject(e)}),r.promise}function u(o){var r=n.defer();return t.post(e+"/auth/register",o).success(function(e,o,t,n){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}function d(o,r){var i=n.defer();return t.post(e+"/auth/resetpassword/"+o,r).success(function(e,o,t,n){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function p(o){var r=n.defer();return t.post(e+"/auth/resetPasswordRequest",o).success(function(e,o,t,n){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}function f(){a.remove("user"),a.remove("access_token"),a.remove("original_user"),i.isAuthenticated=!1,i.user=null,i.view="auth",i.currentState="login",o.location.reload()}function m(e,o){e.hasOwnProperty("token")?(!o&&a.get("access_token")||a.set("access_token",e.token),i.user=e.user,a.setObject("user",e.user)):console.log("Bad Date",e)}function g(){return a.get("access_token")}function h(o){var r=n.defer();return t.get(e+"/user/availability/",{params:o}).success(function(e,o,t,n){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}var v={getUser:s,validate:c,isAuthenticated:g,login:l,logout:f,register:u,forgot:p,reset:d,setCredentials:m,credentialAvaliability:h};return v}function o(e,o,t){function n(e){var t;return o.get("access_token")&&(t=o.get("access_token")),t&&(e.headers.Authorization="Bearer "+t),e}function r(n){return 401!==n.status&&403!==n.status||(o.remove("access_token"),t.get("$state").go("login")),e.reject(n)}var i={request:n,responseError:r};return i}o.$inject=["$q","$localstorage","$injector"],angular.module("AnyDayBuddyAds").factory("Auth",e).factory("AuthInterceptor",o).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor"),e.defaults.withCredentials=!0}]),e.$inject=["baseApi","$window","$http","$q","$state","$rootScope","$localstorage"]}(),function(){"use strict";function e(e,o,t){function n(){var n=o.defer();return e({method:"GET",url:t+"/campaign/options/"}).success(function(e,o,t,r){n.resolve(e)}).error(function(e){n.reject(e)}),n.promise}function r(){var n=o.defer();return e({method:"GET",url:t+"/commerce/clientToken/"}).success(function(e,o,t,r){n.resolve(e)}).error(function(e){n.reject(e)}),n.promise}function i(n){var r=o.defer();return e.post(t+"/campaign/create/",n).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}var a={getOptions:n,getClientToken:r,createCampaign:i};return a}angular.module("AnyDayBuddyAds").service("DataService",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(){function e(e,t,n,r){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",uploadMultiple:!1,maxFiles:1,acceptedFiles:"image/*",dictDefaultMessage:"Drop file or click here to upload",addRemoveLinks:!0,init:function(){this.on("thumbnail",function(t){t.width!==o[e].width||t.height!==o[e].height?t.rejectDimensions():t.acceptDimensions()})},accept:function(e,o){e.acceptDimensions=o,e.rejectDimensions=function(){o("Invalid dimension.")}}},eventHandlers:{sending:function(e,o,t){t.append("api_key",839988333153567),t.append("timestamp",Date.now()/1e3|0),t.append("upload_preset","sm2ev4nu"),n&&n()},success:t,removedfile:r}}}function t(e,o,t){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",maxFiles:e,acceptedFiles:"image/*",dictDefaultMessage:"Drop files or click here to upload"},eventHandlers:{sending:function(e,o,n){n.append("api_key",839988333153567),n.append("timestamp",Date.now()/1e3|0),n.append("upload_preset","sm2ev4nu"),t&&t()},success:o}}}var n={create:e,createMultiple:t};return n}angular.module("AnyDayBuddyAds").service("DropzoneService",e);var o={mobile:{width:750,height:100},desktop:{width:880,height:1156}}}(),function(){"use strict";function e(e){function o(o,t){e.localStorage[o]=t}function t(o,t){return e.localStorage[o]||t}function n(o,t){e.localStorage[o]=JSON.stringify(t)}function r(o,t){return JSON.parse(e.localStorage[o]||(void 0!==t?t:"{}"))}function i(o){return e.localStorage.removeItem(o)}var a={set:o,get:t,setObject:n,getObject:r,remove:i};return a}angular.module("AnyDayBuddyAds").factory("$localstorage",e),e.$inject=["$window"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.campaign.html",scope:{options:"=",form:"=",total:"="},controller:o,controllerAs:"vm",bindToController:!0};return e}function o(e,o){function t(){}t()}angular.module("AnyDayBuddyAds").directive("adbOrdersCampaign",e),o.$inject=["$http","$q"]}(),function(){"use strict";function e(){function e(e,o,t,n){}var t={restrict:"EA",templateUrl:"assets/views/orders/orders.checkout.html",scope:{options:"=",form:"=",total:"="},link:e,controller:o,controllerAs:"vm",bindToController:!0};return t}function o(e,o,t,n,r,i){function a(){i.getClientToken().then(function(e){console.log(e),s(e.clientToken)}).catch(function(e){console.log(e)})}function s(e){o.setup(e,"custom",{paypal:{container:"paypal-container",singleUse:!0,amount:"0",currency:"USD",locale:"en_us",enableShippingAddress:!1},onPaymentMethodReceived:function(e){c(e.nonce)},onReady:function(e){l.checkout=e}})}function c(e){console.log(e),t.$apply(function(){l.form.nonce=e,l.authorization=!0})}var l=this;l.checkout={},l.loading=!1,l.authorization=!1,a(),l.launch=function(){l.loading=!0,l.form.amount=l.total,i.createCampaign(l.form).then(function(e){console.log(e)}).catch(function(e){console.log(e)}).finally(function(){l.loading=!1})},t.$watch("vm.form",function(e,o){e&&console.log(e)}),t.$watch("vm.checkout",function(e,o){e&&console.log(e)})}angular.module("AnyDayBuddyAds").directive("adbOrdersCheckout",e),o.$inject=["_","braintree","$scope","$http","$q","DataService"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.customer.html",scope:{options:"=",form:"=",total:"=",control:"="},controller:o,controllerAs:"vm",bindToController:!0};return e}function o(e,o,t,n,r){function i(){a.control.tabs[3].valid=!0,a.control.selectedTab+=1}var a=this;a.nextTab=i,a.auth=function(){a.loading=!0,r.login(a.form.auth).then(function(e){console.log(e),i()}).catch(function(e){console.log(e)}).finally(function(){a.loading=!1})},a.signup=function(){n.show({fullscreen:!0,controllerAs:"vm",controller:"SignupController",templateUrl:"assets/views/modal/signup.html"}).then(function(){i()})}}angular.module("AnyDayBuddyAds").directive("adbOrdersCustomer",e),o.$inject=["$http","$q","$rootScope","$mdDialog","Auth"]}(),function(){"use strict";function e(e,o,t,n,r,i){function a(){i.getOptions().then(function(e){console.log(e),g.options.target=s(e),console.log(g.form)}).catch(function(e){console.log(e)})}function s(o){var t=function(o,n){return e.isObject(o)?e.merge({},o,n,t):o||n},n=e.flatten([{},o,t]);return e.merge.apply(e,n)}function c(e,o){n.show({fullscreen:!0,targetEvent:e,clickOutsideToClose:!0,templateUrl:"app/shared/layout/imageModal.html",locals:{image:o},controller:["$scope","image",function(e,o){e.image=o}]})}function l(){n.show({templateUrl:"app/components/ad/advertisementModal.html",clickOutsideToClose:!0,fullscreen:!0})}function u(){r.show(r.simple().textContent("Awesome, you can now go to next step!").position("bottom right").hideDelay(3e3))}function d(o){var t=!1;return t="both"===o?!!e.isEmpty(e.pickBy(g.form.banner,e.isNull)):!!(g.form.banner.description&&g.form.banner.url&&g.form.banner[o])}function p(){return!e.isEmpty(g.form.marker)}function f(){var e=g.form.media.display,o=g.form.options.display.display;switch(o){case"banner":return d(e);case"map":return p()}return!1}function m(){switch(g.control.selectedTab){case 0:g.form.media.hasOwnProperty("id")&&g.form.options.display.hasOwnProperty("id")&&f()?(g.control.tabs[1].valid=!0,u()):g.control.tabs[1].valid=!1;break;case 1:g.form.options.impressions.hasOwnProperty("id")?(g.control.tabs[2].valid=!0,t.user&&(g.control.tabs[3].valid=!0),u()):g.control.tabs[2].valid=!1;break;default:console.log(g.control.selectedTab)}}var g=this;g.openImage=c,g.add=l,g.total=0,g.control={selectedTab:0,tabs:[{valid:!0,show:!0},{valid:!1,show:!0},{valid:!1,show:!0},{valid:!1,show:!0}]},g.options={target:{display:[],media:[],impressionsUnits:[],impressionsTime:[],distance:[],age:[],gender:[]}},g.form={media:{},banner:{description:null,url:null,website:null,app:null},marker:{},options:{display:{},impressions:{},distance:{},age:{},gender:{},interests:{}},customer:{},auth:{}},a(),o.$watch("vm.form",function(o,t){console.log(o),m(),g.total=o.media.hasOwnProperty("fee")?o.media.fee:0,e.map(o.options,function(e){e.hasOwnProperty("fee")&&(g.total+=g.total*e.fee),e.hasOwnProperty("discount")&&(g.total-=g.total*e.discount)})},!0)}angular.module("AnyDayBuddyAds").controller("OrdersController",e),e.$inject=["_","$scope","$rootScope","$mdDialog","$mdToast","DataService"]}(),function(){"use strict";function e(){function e(e,o,t,n){}var t={restrict:"EA",templateUrl:"assets/views/orders/orders.resume.html",scope:{options:"=",form:"=",total:"="},link:e,controller:o,controllerAs:"vm",bindToController:!0};return t}function o(e,o,t){function n(){}var r=this;n(),r.formatImpressions=function(){if(r.form.impressionType&&r.form.options.impressions.hasOwnProperty("id")){var o={impressionsUnits:e.join([r.form.options.impressions.quantity,r.form.options.impressions.type]," "),impressionsTime:e.join([r.form.options.impressions.time,r.form.options.impressions.period]," ")};return o[r.form.impressionType]}},r.formatTarget=function(){var o={distance:{value:r.form.options.distance,render:e.join(["Distance:",r.form.options.distance.distance||"","Km"]," ")},age:{value:r.form.options.age,render:e.join(["Age between:",e.join(r.form.options.age.range,"-")]," ")},gender:{value:r.form.options.gender,render:e.join(["Gender:",r.form.options.gender.gender]," ")},interests:{value:r.form.options.interests,render:e.join(["Interests:",r.form.options.interests.quantity]," ")}},t=e.pickBy(o,function(e){return e.value.hasOwnProperty("id")});return e.isEmpty(t)?"":e.join(["Target: ",e.map(Object.keys(t),function(e){return o[e].render})],"")},r.formatResume=function(){return resume}}angular.module("AnyDayBuddyAds").directive("adbOrdersResume",e),o.$inject=["_","$http","$q"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.display.html",scope:{options:"=",form:"=",total:"="},controller:o,controllerAs:"vm",bindToController:!0};return e}function o(e,o,t,n,r,i){function a(){console.log("activate"),u()}function s(e,o,t,n){console.log(o),r(function(){e.panTo(new google.maps.LatLng(o.latitude,o.longitude)),t&&e.panBy(0,-200)},100)}function c(e,o,t){var r=t[0],i=r.latLng.lat(),a=r.latLng.lng();d.marker={id:Date.now(),location:{latitude:i,longitude:a},show:!1},n.$apply()}function l(){console.log("bounds changed"),console.log(d.placesReady),d.map.instance||u()}function u(){t.all([e,o.promise(1)]).then(function(e){var o=e[0],t=e[1][0].map;d.window={pixelOffset:new o.Size(0,(-40)),closeClick:function(){d.marker.show=!1}},g=new o.places.AutocompleteService,m=new o.DirectionsService,f=new o.DirectionsRenderer,d.map.instance=t,f.setMap(d.map.instance),p=new o.places.PlacesService(d.map.instance),d.placesReady=!0,console.log("ready")})}var d=this,p=null,f=null,m=null,g=null;d.markerConfirmed=!1,d.placesReady=!1,d.control={uploading:!1},d.map={center:{latitude:45.50174502816667,longitude:-73.5703881829977},zoom:14,options:{scrollwheel:!0},mapMarker:!0,disableDefaultUI:!0,control:{},events:{click:c,idle:l}},d.info={name:"",address:"",icon:""},d.marker={id:0,location:{latitude:45.50174502816667,longitude:-73.5703881829977},show:!1},d.desktopDropzone=i.create("desktop",function(e,o){n.$apply(function(){console.log(o.secure_url),d.form.banner.website=o.secure_url,d.control.uploading=!1})},function(){n.$apply(function(){d.control.uploading=!0})}),d.mobileDropzone=i.create("mobile",function(e,o){n.$apply(function(){console.log(o.secure_url),d.form.banner.app=o.secure_url,d.control.uploading=!1})},function(){n.$apply(function(){d.control.uploading=!0})}),a(),d.clickMarker=function(){console.log("click"),d.marker.show=!d.marker.show,n.$apply()},d.autocompleteAddress=function(e){d.markerConfirmed=!1;var o=t.defer();return g.getQueryPredictions({input:e},function(e){o.resolve(e?_.filter(e,"place_id"):[])}),o.promise},d.getPlace=function(){console.log(d.info.place),d.info.place&&p.getDetails({placeId:d.info.place.place_id},function(e,o){console.log(e,o),d.marker={id:Date.now(),name:e.name,address:e.formatted_address,location:{latitude:parseFloat(e.geometry.location.lat()),longitude:parseFloat(e.geometry.location.lng())},show:!0},s(d.map.instance,d.marker.location,null,!0),n.$apply()})},d.confirmMarker=function(){angular.copy(d.marker,d.form.marker),d.markerConfirmed=!0}}angular.module("AnyDayBuddyAds").directive("adbDisplayChooser",e),o.$inject=["uiGmapGoogleMapApi","uiGmapIsReady","$q","$scope","$timeout","DropzoneService"]}(),function(){"use strict";function e(e){function o(o,t,n){var r,i;r=o.dropzone,i=new e(t[0],r.options),o.reset&&i.on("complete",function(e){i.removeFile(e)}),angular.forEach(r.eventHandlers,function(e,o){i.on(o,e)})}var t={link:o,restrict:"EA",scope:{dropzone:"=dropzone",reset:"@reset"}};return t}angular.module("AnyDayBuddyAds").directive("dropzone",e),e.$inject=["Dropzone"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/footer/footer.html",controller:o,controllerAs:"vm",bindToController:!0};return e}function o(){function e(){console.log("footer Activated")}e()}angular.module("AnyDayBuddyAds").directive("footerDirective",e),o.$inject=[]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/header/header.html",controller:o,controllerAs:"vm",bindToController:!0,scope:{}};return e}function o(e,o,t){var n=this;n.logout=function(){console.log("LOGOUT"),e.logout()},t.$on("login",function(e,o){t.user||angular.copy(o,t.user),console.log("login",t.user)})}angular.module("AnyDayBuddyAds").directive("headerDirective",e),o.$inject=["Auth","$scope","$rootScope"]}();
//# sourceMappingURL=data:application/json;base64,
