!function(){"use strict";angular.module("ElCinaroAdmin",["ui.router","ngMaterial","uiGmapgoogle-maps","md.data.table","angularMoment","moment-picker"])}(),function(){"use strict";angular.module("ElCinaroAdmin").constant("_",window._).constant("jQuery",window.jQuery).constant("Dropzone",window.Dropzone).constant("braintree",window.braintree).constant("moment",window.moment).constant("baseApi","http://localhost:8000")}(),function(){"use strict";function e(e){e.defaults.xsrfCookieName="csrftoken",e.defaults.xsrfHeaderName="X-CSRFToken",e.defaults.headers.post["Content-Type"]="application/json"}function t(e){e.configure({key:"AIzaSyAonFuCDb7HjXUz0uocKbEGUJz91IL9EVs",libraries:"places"})}function n(e){e.fontSet("farm","farm-icons").icon("compost","assets/images/icons/icon-compost.svg").icon("spade","assets/images/icons/icon-spade.svg")}function o(e){e.formatDate=function(e){return console.log(e),moment(e).format("YYYY-MM-DD")},e.parseDate=function(e){var t=moment(e,"DD-MM-YYYY",!0);return console.log(t),t.isValid()?t.toDate():new Date(NaN)}}function i(e,t){e.definePalette("primary",{50:"#3ea34c",100:"#379143",200:"#307e3b",300:"#296c32",400:"#22592a",500:"1B4721",600:"#143518",700:"#0d2210",800:"#061007",900:"#000000",A100:"#45b655",A200:"#56bf64",A400:"#68c675",A700:"#000000",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 A100 A200"}),e.definePalette("accent",{50:"#1c3216",100:"#25441d",200:"#2f5625",300:"#39682d",400:"#427935",500:"#4c8b3c",600:"#60af4c",700:"#6eb85c",800:"#7ec06d",900:"#8ec87f",A100:"#60af4c",A200:"569D44",A400:"#4c8b3c",A700:"#9ecf91",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.definePalette("warn",{50:"#fbcba3",100:"#fabd8b",200:"#f9af72",300:"#f8a15a",400:"#f79341",500:"F68529",600:"#f57711",700:"#e26b0a",800:"#ca5f09",900:"#b25407",A100:"#fcd9bc",A200:"#fde7d4",A400:"#fef5ed",A700:"#994806",contrastDefaultColor:"light",contrastDarkColors:"50 100 200 300 A100 A200"}),e.theme("default").primaryPalette("primary").accentPalette("accent").warnPalette("warn")}i.$inject=["$mdThemingProvider","$locationProvider"],angular.module("ElCinaroAdmin").config(i).config(e).config(n).config(t).config(o),e.$inject=["$httpProvider"],t.$inject=["uiGmapGoogleMapApiProvider"],n.$inject=["$mdIconProvider"],o.$inject=["$mdDateLocaleProvider"]}(),function(){"use strict";function e(e,t,n){e.$state=t,console.log("is authenticated",n.isAuthenticated()),n.isAuthenticated()&&(e.user=n.getUser()),e.$on("$stateChangeStart",function(o,i){e.fill=["login"].indexOf(i.name)!==-1,e.fixed=["dashboard","dashboard.profile"].indexOf(i.name)!==-1,i.authenticate&&!n.isAuthenticated()&&(o.preventDefault(),t.transitionTo("login")),!i.authenticate&&n.isAuthenticated()&&(o.preventDefault(),t.transitionTo("dashboard"))})}angular.module("ElCinaroAdmin").run(e),e.$inject=["$rootScope","$state","Auth"]}(),function(){"use strict";function e(e,t,n){e.state("home",{url:"/",views:{main:{controller:"HomeController",controllerAs:"vm",templateUrl:"assets/views/home.html"}},authenticate:!1}).state("dashboard",{url:"/dashboard",views:{main:{controller:"DashboardController",controllerAs:"vm",templateUrl:"assets/views/dashboard/index.html"}},authenticate:!0}).state("dashboard.profile",{url:"/profile",views:{dashboard:{controller:"ProfileController",controllerAs:"vm",templateUrl:"assets/views/dashboard/profile.html"}},authenticate:!1}).state("dashboard.home",{url:"/home/",views:{dashboard:{controller:"HomeDashboardController",controllerAs:"vm",templateUrl:"assets/views/dashboard/home.html"}},authenticate:!0}).state("dashboard.actividades",{url:"/actividades/",views:{dashboard:{controller:"ActividadController",controllerAs:"vm",templateUrl:"assets/views/seguimiento/actividad.tmpl.html"}},authenticate:!0}).state("dashboard.cultivos",{url:"/cultivos/:id",views:{dashboard:{controller:"CultivosController",controllerAs:"vm",templateUrl:"assets/views/dashboard/cultivos.html"}},authenticate:!0}).state("dashboard.semillas",{url:"/semillas/:id",views:{dashboard:{controller:"SemillasController",controllerAs:"vm",templateUrl:"assets/views/dashboard/semillas.html"}},authenticate:!0}).state("dashboard.lotes",{url:"/lotes/:id",views:{dashboard:{controller:"LotesController",controllerAs:"vm",templateUrl:"assets/views/dashboard/lotes.html"}},authenticate:!0}).state("dashboard.suelos",{url:"/suelos/:id",views:{dashboard:{controller:"SuelosController",controllerAs:"vm",templateUrl:"assets/views/dashboard/suelos.html"}},authenticate:!0}).state("dashboard.clientes",{url:"/clientes/:id",views:{dashboard:{controller:"ClientesController",controllerAs:"vm",templateUrl:"assets/views/dashboard/clientes.html"}},authenticate:!0}).state("dashboard.users",{url:"/users/:id",views:{dashboard:{controller:"AdminController",controllerAs:"vm",templateUrl:"assets/views/dashboard/admin.html"}},authenticate:!0}).state("dashboard.proovedores",{url:"/proovedores/:id",views:{dashboard:{controller:"ProovedoresController",controllerAs:"vm",templateUrl:"assets/views/dashboard/proovedores.html"}},authenticate:!0}).state("dashboard.insumos",{url:"/insumos/:id",views:{dashboard:{controller:"InsumosController",controllerAs:"vm",templateUrl:"assets/views/dashboard/insumos.html"}},authenticate:!0}).state("dashboard.rubros",{url:"/rubros/:id",views:{dashboard:{controller:"RubrosController",controllerAs:"vm",templateUrl:"assets/views/dashboard/rubros.html"}},authenticate:!0}).state("login",{url:"/login",views:{main:{controller:"LoginController",controllerAs:"vm",templateUrl:"assets/views/login.html"}},authenticate:!1}),t.otherwise("/login")}angular.module("ElCinaroAdmin").config(e),e.$inject=["$stateProvider","$urlRouterProvider","$locationProvider"]}(),function(){"use strict";function e(e,t,n,o){function i(){console.log("Actividad Controller"),r()}function r(){o.getRubros(a.query).then(function(e){a.categories=e.results}).catch(function(e){console.log(e)}).finally(function(){a.listReady=!0,console.log(a.categories)})}var a=this;a.listReady=!1,a.list=[],a.categories=[],a.query={page:1,limit:100,order:"",filter:""},a.data={cultivos:{},rubros:[]},a.map={name:"nombre",image:""},i(),a.cancel=function(){$mdDialog.$hide()},n.$watch("vm.categories",function(e,t){console.log(e)})}angular.module("ElCinaroAdmin").controller("ActividadController",e),e.$inject=["$http","$q","$scope","$siembras"]}(),function(){"use strict";function e(e,t,n,o,i,r,a,l){function s(){console.log("Admin  Controller"),u()}function c(e){console.log(e),d.data=e}function u(){d.item=[],d.promise=a.getUsers(d.query).then(c)}var d=this;d.getData=u,d.toggleSearch=!1,d.timeout=!1,d.item=[],d.table={title:"Usuarios",search:{placeholder:"nombre, apellido"},detail:{title:function(e){return"Usuario: "+e.join(" ")}}},d.query={order:"id",limit:10,page:1,filter:""};var m=[{name:"first_name",type:"text",icon:"info"},{name:"last_name",type:"text",icon:"info"},{name:"username",type:"text",icon:"info"},{name:"email",type:"email",icon:"email"},{name:"password",type:"password",icon:"info"},{name:"confirm_password",type:"password",icon:"info"}],f={username:"",first_name:"",last_name:"",password:"",is_staff:!0,email:""};s(),d.resetTable=function(){d.toggleSearch=!1,d.query.filter="",u()},d.spawnModal=function(e,t){r.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"admin",handler:t?"createUser":"updateUser",title:t?"Registrar Usuario":"Actualizar Datos Usuario",data:_.isEmpty(d.item)?f:_.mapValues(_.head(d.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:m,options:{}}}}).then(function(e){e&&(d.query.order=t?"-created":"-updated",u())},function(){console.log("cancelled")})},d.spawnDeleteModal=function(e,t){var n=r.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");r.show(n).then(function(){return a.deleteUsers(t).then(function(e){u()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},t.$watch("vm.query.filter",function(e,t){e&&(d.timeout&&i.cancel(d.timeout),d.timeout=i(function(){u()},500))}),t.$watchCollection("vm.item",function(e,t){_.isEmpty(e)})}angular.module("ElCinaroAdmin").controller("AdminController",e),e.$inject=["moment","$scope","$http","$q","$timeout","$mdDialog","$admin","$pedidos"]}(),function(){"use strict";function e(e,t,n){function o(){console.log("ClientesController"),i()}function i(){r.item=[],r.promise=t.getClientes(r.query).then(function(e){r.data=e})}var r=this;r.getData=i,r.toggleSearch=!1,r.timeout=!1,r.selected=[],r.item=[],r.table={title:"Listado de Clientes",search:{placeholder:"Nombre, Apellido, etc.."}},r.query={order:"",limit:10,page:1,filter:""};var a=[{name:"nombre",type:"text",icon:"perm_identity"},{name:"apellido",type:"text",icon:"perm_identity"},{name:"email",type:"text",icon:"email"},{name:"identification",type:"text",icon:"perm_identity"},{name:"telefono",type:"text",icon:"phone"},{name:"direccion",type:"text",icon:"place"}],l={nombre:"",apellido:"",email:"",identification:"",direccion:"",telefono:""};o(),r.logItem=function(){console.log(r.item)},r.spawnModal=function(t,o){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"clientes",handler:o?"createCliente":"updateCliente",title:o?"Registrar Cliente":"Actualizar Datos Cliente",data:e.isEmpty(r.item)?l:e.head(r.item),fields:a}}}).then(function(e){console.log(e),e&&(r.query.order=o?"-created":"-updated",i())},function(){console.log("cancelled")})},r.spawnDeleteModal=function(e,o){var r=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");n.show(r).then(function(){return t.deleteCliente(o).then(function(e){i()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})}}angular.module("ElCinaroAdmin").controller("ClientesController",e),e.$inject=["_","$pedidos","$mdDialog"]}(),function(){"use strict";function e(e,t,n,o,i,r,a){function l(){console.log("Cultivos Controller"),f.detail?s():u()}function s(){return f.item?void(f.item=e.filter(r.cultivos,function(e){return e.id===parseInt(a.id)})):void console.log("have to get item")}function c(e){console.log(e),f.data=e}function u(){f.promise=r.getCultivos(f.query).then(c)}function d(e,t){var n=t?e.filter(m(t)):[];return n}function m(e){var t=angular.lowercase(e);return function(e){return 0===e._lowername.indexOf(t)}}var f=this;f.detail=!!a.id,f.querySearch=d,f.selectedItem=null,f.searchText=null,f.getData=u,f.toggleSearch=!1,f.timeout=!1,f.selected=[],f.item=[],f.table={title:"Listado de Cultivos",search:{placeholder:"Rubro, Semilla"}},f.query={order:"lote__id",limit:10,page:1,filter:""},f.form={lotes:[],selectedLotes:[],areasSiembra:[]},l(),f.resetTable=function(){f.detail=!1,f.toggleSearch=!1,f.query.filter="",u()},f.logItem=function(){console.log(f.item)},t.$watch("vm.query.filter",function(e,t){e&&(f.timeout&&i.cancel(f.timeout),f.timeout=i(function(){u()},500))}),t.$watchCollection("vm.item",function(e,t){e&&console.log(e)})}angular.module("ElCinaroAdmin").controller("CultivosController",e),e.$inject=["_","$scope","$http","$q","$timeout","$siembras","$stateParams"]}(),function(){"use strict";function e(e,t,n){function o(){console.log("DashboardController")}function i(){return e.orderBy([{link:"dashboard.home",icon:"grade",title:"Home"},{link:"dashboard.cultivos",icon:"grade",title:"Cultivos"},{link:"dashboard.semillas",title:"Semillas",icon:"grade"},{link:"dashboard.lotes",title:"Lotes de Siembra",icon:"grade"},{link:"dashboard.plagas",title:"Plagas",icon:"grade"},{link:"dashboard.clientes",title:"Clientes",icon:"person_pin"},{link:"dashboard.insumos",title:"Insumos",icon:"grade"},{link:"dashboard.proovedores",title:"Proovedores",icon:"grade"},{link:"dashboard.users",title:"Usuarios",icon:"grade"},{link:"dashboard.suelos",title:"Areas de Siembra",icon:"grade"},{link:"dashboard.rubros",title:"Rubros",icon:"grade"}],["title"],["asc"])}var r=this;r.routes=i(),o()}e.$inject=["_","$http","$q"],angular.module("ElCinaroAdmin").controller("DashboardController",e)}(),function(){"use strict";function e(e,t,n,o,i,r,a,l,s){function c(){console.log("HomeController"),d(),f(),m()}function u(){var t=e.map(w.observations,function(e){var t=e;return t.cultivo=e.cultivo.id,t.hasOwnProperty("fecha_aplicacion")&&(t.fecha_aplicacion=moment(e.fecha_aplicacion,"DD-MM-YYYY HH:mm A",!0)),t});l.createActividades(e.groupBy(t,"selector")).then(function(e){console.log(e)}).catch(function(e){console.log(e)})}function d(){l.getActividades(w.query).then(function(e){console.log(e),w.data=e}).catch(function(e){console.log(e)})}function m(){a.getInsumos({}).then(function(t){w.insumos=e.map(t.results,function(t){return{name:t.nombre,id:t.id,_lowername:e.lowerCase(t.nombre)}})}).catch(function(e){console.log(e)}).finally(function(){})}function f(){r.getRubros({page:1,limit:10,order:"-nombre",filter:""}).then(function(t){w.rubros=e.map(t.results,function(t){return{name:t.nombre,id:t.id,_lowername:e.lowerCase(t.nombre)}})}).catch(function(e){}).finally(function(){})}function p(t){r.getCultivos(t).then(function(t){w.cultivos=e.map(t.results,function(t){return{name:t.codigo,description:t.lote.semilla_utilizada.descripcion,id:t.id,_lowername:e.lowerCase(t.nombre),selected:!1,plaguicida:{},fertilizacion:{},riego:{},observaciones:{text:"Observaciones"}}})}).catch(function(e){}).finally(function(){})}function g(t,n){w.cultivos[t].selected=!n.selected;var t=e.findIndex(w.selectedCultivos,function(e){return e.id===n.id});!n.selected&&w.selectedCultivos[t]?w.selectedCultivos=w.selectedCultivos.splice(t,1):w.selectedCultivos.push(n)}function h(t,n){e.includes([3,4,6],n.type)&&(angular.copy(n,s.item),o.show({controller:"ActionController",controllerAs:"vm",templateUrl:"assets/views/seguimiento/"+n.template,clickOutsideToClose:!0,fullscreen:!0}).then(function(t){console.log(t),e.merge(n,t),console.log(n)},function(){console.log("cancelled")}))}function v(e,t){return console.log(t),t--,t===-1?w.observations.shift():w.observations.splice(t,1)}function b(t){return t?void e.map(w.cultivos,function(e,t){g(t,e)}):(e.map(w.cultivos,function(e,t){e.selected=!1}),void(w.selectedCultivos=[]))}function y(e,t){var n=t?e.filter(C(t)):[];return n}function C(e){var t=angular.lowercase(e);return function(e){return 0===e._lowername.indexOf(t)}}function $(){var t={riego:"Se aplico riego rutinario",desmalezamiento:"se aplicado desmalezamiento en el area",fertilizacion:"Se aplico fertilizacion en el cultivo",plaguicida:"Se aplico plaguicida en el cultivo",limpieza:"Se aplico limpieza en el area"},n=e.map(w.selectedActions,function(n){return e.map(w.selectedCultivos,function(e,o){return{id:new Date,text:e.description,content:t[angular.lowercase(n.name)],type:n.id,template:n.template,selector:angular.lowercase(n.name),cultivo:e}})});w.observations=[].concat.apply([],n)}var w=this;w.actions=s.getActions(),w.title="HomeDashboardController",w.data=[],w.all=!1,w.addActivity=!0,w.querySearch=y,w.selectedItem=null,w.searchText=null,w.selectedRubros=[],w.selectedActions=[],w.selectedCultivos=[],w.rubros=[],w.cultivos=[],w.insumos=[],w.observations=[],w.toggle=b,w.selectCultivo=g,w.detailItem=h,w.removeItem=v,w.submit=u,w.query={page:1,limit:5,order:"-fecha_realizacion",filter:""},c(),t.$watch("vm.data",function(t,n){if(t){var o=e.groupBy(w.data.results,function(e){return moment(moment(e.fecha_realizacion).startOf("day")).format()});w.formattedData=o}}),t.$watchCollection("vm.selectedRubros",function(t,n){if(t.length){var o=e.map(t,function(e){return e.name}).join(",");p({page:1,limit:10,order:"fecha_siembra",filter:o})}}),t.$watchCollection("vm.selectedActions",function(e,t){$()}),t.$watchCollection("vm.selectedCultivos",function(e,t){e.length&&e.length!==t.length&&$()}),t.$watchCollection("vm.observations",function(e,t){console.log(e)},!0)}angular.module("ElCinaroAdmin").controller("HomeDashboardController",e),e.$inject=["_","$scope","$rootScope","$mdDialog","jQuery","$siembras","$insumos","$seguimiento","$util"]}(),function(){"use strict";function e(e,t,n,o){function i(){console.log("InsumosController"),a()}function r(e){console.log(e),l.data=e}function a(){l.item=[],l.promise=o.getInsumos(l.query).then(r)}var l=this;l.title="Insumos",l.getData=a,l.toggleSearch=!1,l.timeout=!1,l.item=[],l.table={title:"Inventario de Insumos",search:{placeholder:"Nombre"},detail:{title:function(e){return"Insumo: "+e.join(" ")}}},l.query={order:"-updated",limit:10,page:1,filter:""};var s={nombre:"",codigo:"",cantidad:"",proovedor:"",medida:""},c=[{name:"nombre",type:"text",icon:"perm_identity"},{name:"codigo",type:"text",icon:"perm_identity"},{name:"cantidad",type:"number",icon:"perm_identity"},{name:"medida",type:"select",icon:"perm_identity",placeholder:"Medida",handler:"getMedidas"},{name:"proovedor",type:"select",icon:"perm_identity",handler:"getProovedores",placeholder:"Proovedor"}];i(),l.resetTable=function(){l.toggleSearch=!1,l.query.filter="",a()},l.spawnModal=function(e,t){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"insumos",handler:t?"createInsumos":"updateInsumos",title:t?"Registrar Insumo":"Actualizar Datos Insumo",data:_.isEmpty(l.item)?s:_.mapValues(_.head(l.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:c,options:{}}}}).then(function(e){e&&(l.query.order=t?"-created":"-updated",a())},function(){console.log("cancelled")})},l.spawnDeleteModal=function(e,t){var i=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");n.show(i).then(function(){return o.deleteInsumos(t).then(function(e){a()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},e.$watch("vm.query.filter",function(e,t){e&&(l.timeout&&$timeout.cancel(l.timeout),l.timeout=$timeout(function(){a()},500))}),e.$watchCollection("vm.item",function(e,t){_.isEmpty(e)})}angular.module("ElCinaroAdmin").controller("InsumosController",e),e.$inject=["$scope","$http","$mdDialog","$insumos"]}(),function(){"use strict";function e(e,t,n,o,i,r,a){function l(){console.log("Cultivos Controller"),d.detail?s():u()}function s(){return d.item?void(d.item=e.filter(r.cultivos,function(e){return e.id===parseInt(a.id)})):void console.log("have to get item")}function c(e){console.log(e),d.data=e}function u(){d.promise=r.getLotes(d.query).then(c)}var d=this;d.detail=!!a.id,d.getData=u,d.toggleSearch=!1,d.timeout=!1,d.selected=[],d.item=[],d.table={title:"Listado",search:{placeholder:"Rubro, Semilla"}},d.query={order:"lote__id",limit:10,page:1,filter:""},l(),d.resetTable=function(){d.detail=!1,d.toggleSearch=!1,d.query.filter="",u()},d.logItem=function(){console.log(d.item)},t.$watch("vm.query.filter",function(e,t){e&&(d.timeout&&i.cancel(d.timeout),d.timeout=i(function(){u()},500))}),t.$watchCollection("vm.item",function(e,t){e&&console.log(e)})}angular.module("ElCinaroAdmin").controller("LotesController",e),e.$inject=["_","$scope","$http","$q","$timeout","$siembras","$stateParams"]}(),function(){"use strict";function e(e,t,n,o,i,r,a){function l(){console.log("Profile Controller")}function s(e){var t=e?u.countries.filter(c(e)):u.countries;return t}function c(t){var n=e.capitalize(t);return function(e){return 0===e.name.indexOf(n)}}var u=this,d=null;u.countries=a.getCountries(),u.data={country:"CA",username:"",birth:new Date},u.placesReady=!1,l(),u.autocompleteCountry=function(e){return s(e)},u.autocompleteAddress=function(t){var o=n.defer();return d.getQueryPredictions({input:t},function(t){o.resolve(t?e.filter(e.filter(t,"place_id"),function(t){return!e.includes(t.types,"establishment")&&!e.includes(t.types,"country")}):[])}),o.promise},u.updateProfile=function(){u.loading=!0,u.data.country=angular.isObject(u.data.country)?u.data.country.id:u.data.country,r.update(t.user.id,u.data).then(function(e){u.data=e,u.error=!1,u.data.birth=moment(u.data.birth).toDate()},function(e){u.error=!0}).finally(function(){u.loading=!1})}}angular.module("ElCinaroAdmin").controller("ProfileController",e),e.$inject=["_","$rootScope","$q","uiGmapGoogleMapApi","uiGmapIsReady","UserService","$util"]}(),function(){"use strict";function e(e,t,n,o,i){function r(){console.log("ProovedoresController"),l()}function a(e){console.log(e),s.data=e}function l(){s.item=[],s.promise=o.getProovedores(s.query).then(a)}var s=this;s.title="Proovedores",s.getData=l,s.toggleSearch=!1,s.timeout=!1,s.item=[],s.table={title:"Inventario de Proovedores",search:{placeholder:"Nombre"},detail:{title:function(e){return"Proovedor: "+e.join(" ")}}},s.query={order:"-updated",limit:10,page:1,filter:""};var c={nombre:"",descripcion:"",categoria:"",direccion:"",telefono:""},u=[{name:"nombre",type:"text",icon:"perm_identity"},{name:"descripcion",type:"text",icon:"perm_identity"},{name:"categoria",type:"select",icon:"perm_identity",handler:"getProovedorCategoria",placeholder:"Categoria"},{name:"telefono",type:"text",icon:"phone"},{name:"direccion",type:"text",icon:"place"}];r(),s.resetTable=function(){s.toggleSearch=!1,s.query.filter="",l()},s.spawnModal=function(e,t){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"proovedores",handler:t?"createProovedor":"updateProovedor",title:t?"Registrar Proovedor":"Actualizar Datos Proovedor",data:_.isEmpty(s.item)?c:_.mapValues(_.head(s.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:u,options:{}}}}).then(function(e){e&&(s.query.order=t?"-created":"-updated",l())},function(){console.log("cancelled")})},s.spawnDeleteModal=function(e,t){var o=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");n.show(o).then(function(){return i.deleteProovedor(t).then(function(e){l()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},e.$watch("vm.query.filter",function(e,t){e&&(s.timeout&&$timeout.cancel(s.timeout),s.timeout=$timeout(function(){l()},500))}),e.$watchCollection("vm.item",function(e,t){_.isEmpty(e)})}angular.module("ElCinaroAdmin").controller("ProovedoresController",e),e.$inject=["$scope","$http","$mdDialog","$siembras","$proovedores"]}(),function(){"use strict";function e(e,t,n,o){function i(){console.log("RubrosController"),a()}function r(e){console.log(e),l.data=e}function a(){l.item=[],l.promise=o.getRubros(l.query).then(r)}var l=this;l.title="Rubros",l.getData=a,l.toggleSearch=!1,l.timeout=!1,l.item=[],l.table={title:"Rubros",search:{placeholder:"Nombre"},detail:{title:function(e){return"Rubros: "+e.join(" ")}}},l.query={order:"-updated",limit:10,page:1,filter:""};var s={nombre:""},c=[{name:"nombre",type:"text",icon:"perm_identity"}];i(),l.resetTable=function(){l.toggleSearch=!1,l.query.filter="",a()},l.spawnModal=function(e,t){n.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"rubros",handler:t?"createRubro":"updateRubro",title:t?"Registrar Rubro":"Actualizar Datos Rubro",data:_.isEmpty(l.item)?s:_.mapValues(_.head(l.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:c,options:{}}}}).then(function(e){e&&(l.query.order=t?"-created":"-updated",a())},function(){console.log("cancelled")})},l.spawnDeleteModal=function(e,t){function i(e,t){var i=n.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");n.show(i).then(function(){return o.deleteRubro(l.item[0]).then(function(e){a()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})}function r(e){n.show(n.alert().clickOutsideToClose(!0).title("Este elemento no puede ser eliminado").textContent("Esta area de siembra posee "+l.item[0].cultivos_count+" cultivos asociados.").ariaLabel("Alert Dialog").ok("Ok").targetEvent(e))}_.isEmpty(l.item)||(l.item[0].cultivos_count?r(e,t):i(e))}}angular.module("ElCinaroAdmin").controller("RubrosController",e),e.$inject=["$scope","$http","$mdDialog","$siembras"]}(),function(){"use strict";function e(e,t,n,o,i,r,a){function l(){console.log("Semillas Controller"),c()}function s(e){console.log(e),u.data=e}function c(){u.promise=a.getSemillas(u.query).then(s)}var u=this;u.getData=c,u.toggleSearch=!1,u.timeout=!1,u.item=[],u.table={title:"Inventario de Semillas",search:{placeholder:"Rubro, proovedor, descripcion"},detail:{title:function(e){return"Semilla: "+e.join(" ")}}},u.query={order:"nivel_germinacion",limit:10,page:1,filter:""};var d=[{name:"descripcion",type:"text",icon:"description"},{name:"fecha_compra",type:"date",icon:"today",placeholder:"Fecha Compra"},{name:"precio_compra",type:"number",icon:"attach_money"},{name:"cantidad",type:"number",icon:"info"},{name:"unidad",type:"select",icon:"info",handler:"getUnidades",placeholder:"Unidad"},{name:"familia",type:"select",icon:"text_fields",handler:"getRubros",placeholder:"Rubro",map:{id:"id",name:"nombre"}},{name:"proovedor",type:"select",icon:"perm_identity",handler:"getProovedores",placeholder:"Proovedor"},{name:"nivel_germinacion",type:"text",icon:"info"}],m={proovedor:"",nivel_germinacion:"",familia:"",unidad:"",cantidad:"",precio_compra:"",fecha_compra:new Date};l(),u.resetTable=function(){u.toggleSearch=!1,u.query.filter="",c()},u.spawnModal=function(e,t){r.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:e,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"semillas",handler:t?"createSemilla":"updateSemilla",title:t?"Registrar Semilla":"Actualizar Datos Semilla",data:_.isEmpty(u.item)?m:_.mapValues(_.head(u.item),function(e){return e.hasOwnProperty("id")?e.id:e}),fields:d,options:{}}}}).then(function(e){e&&(u.query.order=t?"-created":"-updated",c())},function(){console.log("cancelled")})},u.spawnDeleteModal=function(e,t){var n=r.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar");r.show(n).then(function(){return $pedidos.deleteCliente(t).then(function(e){c()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})},t.$watch("vm.query.filter",function(e,t){e&&(u.timeout&&i.cancel(u.timeout),u.timeout=i(function(){c()},500))}),t.$watchCollection("vm.item",function(e,t){_.isEmpty(e)||(u.item[0].fecha_compra=new Date(u.item[0].fecha_compra))})}angular.module("ElCinaroAdmin").controller("SemillasController",e),e.$inject=["moment","$scope","$http","$q","$timeout","$mdDialog","$siembras"]}(),function(){"use strict";function e(e,t,n,o,i){function r(){console.log("Suelos Controller"),a()}function a(){l.item=null,n.all([i.getParcelas(l.query),i.getInvernaderos(l.query)]).then(function(e){l.data.suelos=e[0],l.data.invernaderos=e[1]})}var l=this;l.query={order:"-id",limit:10,page:1,filter:""},l.item=null,l.data={suelos:[],invernaderos:[]},l.toolbar={title:function(t){return e.join(t," ")}};var s=[{name:"codigo",type:"text",icon:"description"},{name:"Ubicacion",type:"text",icon:"info"},{name:"ancho_medida",type:"number",icon:"info"},{name:"largo_medida",type:"number",icon:"info"},{name:"tipo",type:"select",icon:"info",handler:"getTipoParcela",placeholder:"Tipo"}],c={codigo:"",tipo:0,ubicacion:"",largo_medida:1,ancho_medida:2};r(),l.detail=function(e,t){l.item=e,l.item.handler=t},l.spawnModal=function(t,n){o.show({controller:"ModalController",templateUrl:"assets/views/modals/updateClientModal.html",parent:angular.element(document.body),targetEvent:t,clickOutsideToClose:!1,fullscreen:!0,locals:{payload:{type:"parcelas",handler:n?"createParcela":"updateParcela",title:n?"Registrar Parcela":"Actualizar Datos Parcela",data:e.isEmpty(l.item)?c:e.mapValues(l.item,function(e){return e.hasOwnProperty("id")?e.id:e}),fields:s,options:{}}}}).then(function(e){e&&(l.query.order=n?"-created":"-updated",a())},function(){console.log("cancelled")})},l.spawnDeleteModal=function(e){function t(e){var t=o.confirm().title("Esta seguro de eliminar esta informacion?").textContent("La informacion sera eliminada de la base de datos y no podra ser recuperada").ariaLabel("Confirm Dialog").targetEvent(e).ok("Eliminar").cancel("Cancelar"),n="parcelas"===l.item.handler?"deleteParcela":"deleteInvernadero";o.show(t).then(function(){return i[n](l.item.id).then(function(e){a()}).catch(function(e){console.log(e)})},function(){console.log("cancel")})}function n(e){o.show(o.alert().clickOutsideToClose(!0).title("Este elemento no puede ser eliminado").textContent("Esta area de siembra posee "+l.item.cultivos_count+" cultivos asociados.").ariaLabel("Alert Dialog").ok("Ok").targetEvent(e))}l.item&&(l.item.cultivos_count?n(e):t(e))}}angular.module("ElCinaroAdmin").controller("SuelosController",e),e.$inject=["_","$http","$q","$mdDialog","$suelos"]}(),function(){"use strict";function e(){function e(e){var t={1:"Desmalezamiento",2:"Riego",3:"Fertilizacion",4:"Plaguicida",5:"Limpieza"};return t[e]}return e}angular.module("ElCinaroAdmin").filter("formatter",e)}(),function(){"use strict";function e(e,t){function n(){console.log("HomeController")}function o(e){t("html, body").animate({scrollTop:t(e).offset().top},1e3)}var i=this;i.title="Home Controller",i.scrollTo=o,i.actividades=[],n()}angular.module("ElCinaroAdmin").controller("HomeController",e),e.$inject=["$rootScope","jQuery"]}(),function(){"use strict";function e(e,t){var n=this;n.loading=!1,n.auth=function(){console.log("LOGIN",n.user),n.loading=!0,t.login(n.user).then(function(t){console.log(t),e.go("dashboard")}).catch(function(e){console.log(e)}).finally(function(){n.loading=!1})}}angular.module("ElCinaroAdmin").controller("LoginController",e),e.$inject=["$state","Auth"]}(),function(){"use strict";function e(e,t,n,o,i){function r(){console.log("signup controller")}function a(e){var t=e?s.countries.filter(l(e)):s.countries;return t}function l(e){var t=_.capitalize(e);return function(e){return 0===e.name.indexOf(t)}}var s=this;s.data={country:null},s.loading=!1,s.isConfirm=!0,s.availability=!0,s.countries=i.getCountries(),r(),s.autocompleteCountry=function(e){return a(e)},s.signupAttempt=function(){s.loading=!0;var e=s.data.country;s.data.country=e.id,o.register(s.data).then(function(e){o.setCredentials(e),t.hide()},function(e){console.log(e),s.error=!0}).finally(function(){s.loading=!1})},s.checkCredentailsAvailability=function(e){var t={};s.availability=!0,s.data[e]&&(s.loading=!0,t[e]=s.data[e],o.credentialAvaliability(t).then(function(e){s.availability=e.availability,s.loading=!1},function(e){s.error=!0,s.loading=!1}))},s.compare=function(){s.isConfirm=s.data.confirmPassword==s.data.password},s.close=function(){t.cancel()},n.$watch("vm.data",function(e,t){console.log(e)},!0)}angular.module("ElCinaroAdmin").controller("SignupController",e),e.$inject=["$rootScope","$mdDialog","$scope","Auth","$util"]}(),function(){
"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.campaign.html",scope:{options:"=",form:"=",total:"=",control:"="},controller:t,controllerAs:"vm",bindToController:!0};return e}function t(e,t,n,o){function i(){console.log("campaign directive"),o.then(function(e){console.log(e),l=new e.places.AutocompleteService,a.placesReady=!0})}function r(){a.loading=!0,n.getCategories("all",{all:!0,official:!0,country:a.form.country}).then(function(e){a.categories=e}).finally(function(){a.loading=!1})}var a=this,l=null;a.interests=[],a.categories=[],a.categoriesReady=!1,i(),a.autocompleteCities=function(e){var n=t.defer();return l.getQueryPredictions({input:e},function(e){n.resolve(e?_.filter(_.filter(e,"place_id"),function(e){return _.includes(e.types,"locality")||_.includes(e.types,"administrative_area_level_3")}):[])}),n.promise},a.autocompleteStates=function(e){var n=t.defer();return l.getQueryPredictions({input:e},function(e){n.resolve(e?_.filter(_.filter(e,"place_id"),function(e){return _.includes(e.types,"administrative_area_level_1")||_.includes(e.types,"administrative_area_level_2")}):[])}),n.promise},a.autocompleteCountries=function(e){var n=t.defer();return l.getQueryPredictions({input:e},function(e){n.resolve(e?_.filter(_.filter(e,"place_id"),function(e){return _.includes(e.types,"country")}):[])}),n.promise},e.$watch("vm.control.selectedTab",function(e,t){a.categoriesReady||2!==e||r()},!0)}angular.module("ElCinaroAdmin").directive("adbOrdersCampaign",e),t.$inject=["$scope","$q","CategoryService","uiGmapGoogleMapApi"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.checkout.html",scope:{options:"=",form:"=",total:"=",success:"=",control:"="},controller:t,controllerAs:"vm",bindToController:!0};return e}function t(e,t,n,o,i,r,a){function l(){a.getClientToken().then(function(e){console.log(e),s(e.clientToken)}).catch(function(e){console.log(e)})}function s(e){t.setup(e,"custom",{paypal:{container:"paypal-container",singleUse:!0,amount:"0",currency:"USD",locale:"en_us",enableShippingAddress:!1},onPaymentMethodReceived:function(e){c(e.nonce)},onReady:function(e){u.checkout=e}})}function c(e){console.log(e),n.$apply(function(){u.form.nonce=e,u.authorization=!0})}var u=this;u.checkout={},u.loading=!1,u.authorization=!1,u.launch=function(){u.loading=!0,u.form.amount=parseFloat(u.total).toFixed(2),a.createCampaign(u.form).then(function(e){console.log(e),u.success=!0,o.fill=!0}).catch(function(e){console.log(e),u.success=!1}).finally(function(){u.loading=!1})},n.$watch("vm.form",function(e,t){e&&console.log(e)}),n.$watch("vm.control.selectedTab",function(e,t){console.log("current tab ",e),3==e&&l()},!0),n.$watch("vm.checkout",function(e,t){e&&console.log(e)})}angular.module("ElCinaroAdmin").directive("adbOrdersCheckout",e),t.$inject=["_","braintree","$scope","$rootScope","$http","$q","DataService"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.customer.html",scope:{form:"=",control:"="},controller:t,controllerAs:"vm",bindToController:!0};return e}function t(e,t,n,o,i){function r(){a.control.tabs[0].valid=!1,a.control.tabs[1].valid=!0,a.control.selectedTab+=1}var a=this;a.nextTab=r,a.auth=function(){a.loading=!0,i.login(a.form.auth).then(function(e){console.log(e),r()}).catch(function(e){console.log(e)}).finally(function(){a.loading=!1})},a.signup=function(){o.show({fullscreen:!0,controllerAs:"vm",controller:"SignupController",templateUrl:"assets/views/modal/signup.html"}).then(function(){r()})}}angular.module("ElCinaroAdmin").directive("adbOrdersCustomer",e),t.$inject=["$http","$q","$rootScope","$mdDialog","Auth"]}(),function(){"use strict";function e(e,t,n,o,i,r,a){function l(){r.getOptions().then(function(e){console.log(e),h.options.target=s(e),console.log(h.form)}).catch(function(e){console.log(e)})}function s(t){var n=function(t,o){return e.isObject(t)?e.merge({},t,o,n):t||o},o=e.flatten([{},t,n]);return e.merge.apply(e,o)}function c(e,t){o.show({fullscreen:!0,targetEvent:e,clickOutsideToClose:!0,templateUrl:"app/shared/layout/imageModal.html",locals:{image:t},controller:["$scope","image",function(e,t){e.image=t}]})}function u(){o.show({templateUrl:"app/components/ad/advertisementModal.html",clickOutsideToClose:!0,fullscreen:!0})}function d(){i.show(i.simple().textContent("Awesome, you can now go to next step!").position("bottom right").hideDelay(3e3))}function m(t){var n=!1;return n="both"===t?!!e.isEmpty(e.pickBy(h.form.banner,e.isNull)):!!(h.form.banner.description&&h.form.banner.url&&h.form.banner[t])}function f(){return!e.isEmpty(h.form.marker)}function p(){var e=h.form.media.display,t=h.form.options.display.display;switch(t){case"banner":return m(e);case"map":return f()}return!1}function g(){switch(h.control.selectedTab){case 1:h.form.media.hasOwnProperty("id")&&h.form.options.display.hasOwnProperty("id")&&p()?(h.control.tabs[2].valid=!0,d()):h.control.tabs[2].valid=!1;break;case 2:h.form.options.impressions.hasOwnProperty("id")?(h.control.tabs[3].valid=!0,d()):h.control.tabs[3].valid=!1;break;default:console.log(h.control.selectedTab)}}var h=this;h.openImage=c,h.add=u,h.total=0,h.success=!1,h.control={selectedTab:n.user?1:0,tabs:[{valid:!n.user,show:!0},{valid:!1,show:!0},{valid:!1,show:!0},{valid:!1,show:!0}]},h.options={target:{display:[],media:[],impressionsUnits:[],impressionsTime:[],distance:[],age:[],gender:[]}},h.form={media:{},banner:{},marker:{},options:{display:{},impressions:{},distance:{},age:{},gender:{},interests:{},activities:[]},customer:{},country:n.user?e.find(a.getCountries(),function(e){return e.name===n.user.country||e.id===n.user.country})||"CA":"CA",state:null,city:null,categories:[]},l(),h.selectedTab=function(){return n.user?h.control.selectedTab:0},t.$watch(function(){return n.user},function(){n.user&&(h.form.country=e.find(a.getCountries(),function(e){return e.name===n.user.country||e.id===n.user.country}).id)},!0),t.$watch("vm.form",function(t,n){console.log(t),g(),h.total=t.media.hasOwnProperty("fee")?t.media.fee:0,e.map(t.options,function(e){e.hasOwnProperty("fee")&&(h.total+=h.total*e.fee),e.hasOwnProperty("discount")&&(h.total-=h.total*e.discount)})},!0)}angular.module("ElCinaroAdmin").controller("OrdersController",e),e.$inject=["_","$scope","$rootScope","$mdDialog","$mdToast","DataService","$util"]}(),function(){"use strict";function e(){function e(e,t,n,o){}var n={restrict:"EA",templateUrl:"assets/views/orders/orders.resume.html",scope:{options:"=",form:"=",total:"="},link:e,controller:t,controllerAs:"vm",bindToController:!0};return n}function t(e,t,n){function o(){}var i=this;o(),i.formatImpressions=function(){if(i.form.impressionType&&i.form.options.impressions.hasOwnProperty("id")){var t={impressionsUnits:e.join([i.form.options.impressions.quantity,i.form.options.impressions.type]," "),impressionsTime:e.join([i.form.options.impressions.time,i.form.options.impressions.period]," ")};return t[i.form.impressionType]}},i.formatTarget=function(){var t={distance:{value:i.form.options.distance,render:e.join(["Distance:",i.form.options.distance.distance||"","Km"]," ")},age:{value:i.form.options.age,render:e.join(["Age between:",e.join(i.form.options.age.range,"-")]," ")},gender:{value:i.form.options.gender,render:e.join(["Gender:",i.form.options.gender.gender]," ")},interests:{value:i.form.options.interests,render:e.join(["Interests:",i.form.options.interests.quantity]," ")}},n=e.pickBy(t,function(e){return e.value.hasOwnProperty("id")});return e.isEmpty(n)?"":e.join(["Target: ",e.map(Object.keys(n),function(e){return t[e].render})],"")},i.formatResume=function(){return resume}}angular.module("ElCinaroAdmin").directive("adbOrdersResume",e),t.$inject=["_","$http","$q"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/orders/orders.display.html",scope:{options:"=",form:"=",total:"="},controller:t,controllerAs:"vm",bindToController:!0};return e}function t(e,t,n,o,i,r){function a(){console.log("activate"),u()}function l(e,t,n,o){console.log(t),i(function(){e.panTo(new google.maps.LatLng(t.latitude,t.longitude)),n&&e.panBy(0,-200)},100)}function s(e,t,n){var i=n[0],r=i.latLng.lat(),a=i.latLng.lng();d.marker={id:Date.now(),location:{latitude:r,longitude:a},show:!1},o.$apply()}function c(){console.log("bounds changed"),console.log(d.placesReady),d.map.instance||u()}function u(){n.all([e,t.promise(1)]).then(function(e){var t=e[0],n=e[1][0].map;d.window={pixelOffset:new t.Size(0,(-40)),closeClick:function(){d.marker.show=!1}},g=new t.places.AutocompleteService,p=new t.DirectionsService,f=new t.DirectionsRenderer,d.map.instance=n,f.setMap(d.map.instance),m=new t.places.PlacesService(d.map.instance),d.placesReady=!0,console.log("ready")})}var d=this,m=null,f=null,p=null,g=null;d.markerConfirmed=!1,d.placesReady=!1,d.control={uploading:!1},d.map={center:{latitude:45.50174502816667,longitude:-73.5703881829977},zoom:14,options:{scrollwheel:!0},mapMarker:!0,disableDefaultUI:!0,control:{},events:{click:s,idle:c}},d.info={name:"",address:"",icon:""},d.marker={id:0,location:{latitude:45.50174502816667,longitude:-73.5703881829977},show:!1},d.desktopDropzone=r.create("desktop",function(e,t){o.$apply(function(){console.log(t.secure_url),d.form.banner.website=t.secure_url,d.control.uploading=!1})},function(){o.$apply(function(){d.control.uploading=!0})}),d.mobileDropzone=r.create("mobile",function(e,t){o.$apply(function(){console.log(t.secure_url),d.form.banner.app=t.secure_url,d.control.uploading=!1})},function(){o.$apply(function(){d.control.uploading=!0})}),a(),d.clickMarker=function(){console.log("click"),d.marker.show=!d.marker.show,o.$apply()},d.autocompleteAddress=function(e){d.markerConfirmed=!1;var t=n.defer();return g.getQueryPredictions({input:e},function(e){t.resolve(e?_.filter(e,"place_id"):[])}),t.promise},d.getPlace=function(){return console.log(d.info.place),d.info.place?void m.getDetails({placeId:d.info.place.place_id},function(e,t){console.log(e,t),d.marker={id:Date.now(),address:e.formatted_address,name:d.info.name,location:{latitude:parseFloat(e.geometry.location.lat()),longitude:parseFloat(e.geometry.location.lng())},show:!0,country:_.filter(e.address_components,function(e){return _.includes(e.types,"country")})[0].long_name,address_components:e.address_components},l(d.map.instance,d.marker.location,null,!0),o.$apply()}):void(d.markerConfirmed=!1)},d.confirmMarker=function(){d.info.name&&(d.form.marker={id:d.marker.id,address:d.marker.address,name:d.info.name,location:d.marker.location,show:!0,country:d.marker.country,address_components:d.marker.address_components},d.markerConfirmed=!0,console.log(d.form.marker))}}angular.module("ElCinaroAdmin").directive("adbDisplayChooser",e),t.$inject=["uiGmapGoogleMapApi","uiGmapIsReady","$q","$scope","$timeout","DropzoneService"]}(),function(){"use strict";function e(e,t,n){function o(o,r){var a=t.defer();return e.get(n+"/campaign/categories/",{params:{country:r.country}}).success(function(e){a.resolve(e),console.log(e.length),angular.copy(e,i.categories)}).error(function(e){a.reject(e)}),a.promise}var i={categories:[],getCategories:o};return i}angular.module("ElCinaroAdmin").service("CategoryService",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=n.defer();return t.get(e+"/users/",{params:{page:o.page||1,page_size:o.limit||100,format:"json",ordering:o.order||"-id",search:o.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return t.put(e+"/users/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=n.defer();return t.post(e+"/users/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=n.defer();return t.delete(e+"/users/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getUsers:o,createUser:r,updateUser:i,deleteUsers:a};return l}angular.module("ElCinaroAdmin").factory("$admin",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e,t,n,o,i,r,a){function l(){return a.getObject("user",null)||a.get("access_token",null)}function s(t){var i=o.defer();return n.post(e+"/auth/validate/"+t).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function c(t){var i=o.defer();return n.post(e+"/rest-auth/login/",t).success(function(e,t,n,o){i.resolve(e),e.hasOwnProperty("token")&&(r.user=angular.copy(e.user),r.$emit("login",e.user),a.set("access_token",e.token),a.setObject("user",e.user)),e.hasOwnProperty("key")&&a.set("access_token",e.key)}).error(function(e){i.reject(e)}),i.promise}function u(t){var i=o.defer();return n.post(e+"/auth/register",t).success(function(e,t,n,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function d(t,i){var r=o.defer();return n.post(e+"/auth/resetpassword/"+t,i).success(function(e,t,n,o){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}function m(t){var i=o.defer();return n.post(e+"/auth/resetPasswordRequest",t).success(function(e,t,n,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function f(){a.remove("user"),a.remove("access_token"),a.remove("original_user"),r.isAuthenticated=!1,r.user=null,r.view="auth",r.currentState="login",t.location.reload()}function p(e,t){e.hasOwnProperty("token")?(!t&&a.get("access_token")||a.set("access_token",e.token),r.user=e.user,a.setObject("user",e.user)):console.log("Bad Date",e)}function g(){return a.get("access_token")}function h(t){var i=o.defer();return n.get(e+"/user/availability/",{params:t}).success(function(e,t,n,o){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var v={getUser:l,validate:s,isAuthenticated:g,login:c,logout:f,register:u,forgot:m,reset:d,setCredentials:p,credentialAvaliability:h};return v}function t(e,t,n){function o(e){var n;return t.get("access_token")&&(n=t.get("access_token")),n&&(e.headers.Authorization="Bearer "+n),e}function i(o){return 401!==o.status&&403!==o.status||(t.remove("access_token"),n.get("$state").go("login")),e.reject(o)}var r={request:o,responseError:i};return r}t.$inject=["$q","$localstorage","$injector"],angular.module("ElCinaroAdmin").factory("Auth",e).factory("AuthInterceptor",t).config(["$httpProvider",function(e){e.interceptors.push("AuthInterceptor"),e.defaults.withCredentials=!1}]),e.$inject=["baseApi","$window","$http","$q","$state","$rootScope","$localstorage"]}(),function(){"use strict";function e(e,t,n){function o(){var o=t.defer();return e({method:"GET",url:n+"/campaign/options/"}).success(function(e,t,n,i){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}function i(){var o=t.defer();return e({method:"GET",url:n+"/commerce/clientToken/"}).success(function(e,t,n,i){o.resolve(e)}).error(function(e){o.reject(e)}),o.promise}function r(o){var i=t.defer();return e.post(n+"/campaign/create/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=t.defer();return e.get(n+"/campaign/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getOptions:o,getClientToken:i,createCampaign:r,getCampaigns:a};return l}angular.module("ElCinaroAdmin").service("DataService",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(){function e(e,n,o,i){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",uploadMultiple:!1,maxFiles:1,acceptedFiles:"image/*",dictDefaultMessage:"Drop file or click here to upload",addRemoveLinks:!0,init:function(){this.on("thumbnail",function(n){n.width!==t[e].width||n.height!==t[e].height?n.rejectDimensions():n.acceptDimensions()})},accept:function(e,t){e.acceptDimensions=t,e.rejectDimensions=function(){t("Invalid dimension.")}}},eventHandlers:{sending:function(e,t,n){n.append("api_key",839988333153567),n.append("timestamp",Date.now()/1e3|0),n.append("upload_preset","sm2ev4nu"),o&&o()},success:n,removedfile:i}}}function n(e,t,n){return{options:{url:"https://api.cloudinary.com/v1_1/cloud9/image/upload",maxFiles:e,acceptedFiles:"image/*",dictDefaultMessage:"Drop files or click here to upload"},eventHandlers:{sending:function(e,t,o){o.append("api_key",839988333153567),o.append("timestamp",Date.now()/1e3|0),o.append("upload_preset","sm2ev4nu"),n&&n()},success:t}}}var o={create:e,createMultiple:n};return o}angular.module("ElCinaroAdmin").service("DropzoneService",e);var t={mobile:{width:750,height:100},desktop:{width:880,height:1156}}}(),function(){"use strict";function e(e,t,n){function o(o){var i=n.defer();return t.get(e+"/insumos/",{params:{page:o.page||1,page_size:o.limit||50,format:"json",ordering:o.order||"id",search:o.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return t.put(e+"/insumos/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=n.defer(),r=_.mapValues(o,function(e){return _.isObject(e)?e.id:e});return t.post(e+"/insumos/",r).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=n.defer();return t.delete(e+"/insumos/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getInsumos:o,deleteInsumos:a,updateInsumos:i,createInsumos:r,insumos:[]};return l}angular.module("ElCinaroAdmin").factory("$insumos",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e){function t(t,n){e.localStorage[t]=n}function n(t,n){return e.localStorage[t]||n}function o(t,n){e.localStorage[t]=JSON.stringify(n)}function i(t,n){return JSON.parse(e.localStorage[t]||(void 0!==n?n:"{}"))}function r(t){return e.localStorage.removeItem(t)}var a={set:t,get:n,setObject:o,getObject:i,remove:r};return a}angular.module("ElCinaroAdmin").factory("$localstorage",e),e.$inject=["$window"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=n.defer();return t.get(e+"/clientes/",{params:{page:o.page||1,page_size:o.limit||10,format:"json",ordering:o.order||"",search:o.filter||""}}).success(function(e){angular.copy(e.results,l.clientes),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return t.put(e+"/clientes/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=n.defer();return t.post(e+"/clientes/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=n.defer();return t.delete(e+"/clientes/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var l={getClientes:o,deleteCliente:a,updateCliente:i,createCliente:r,deleteCliente:a,clientes:[]};return l}angular.module("ElCinaroAdmin").factory("$pedidos",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=t.defer();return e.put(n+"/proovedores/"+o.id+"/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=t.defer();return e.post(n+"/proovedores/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=t.defer();return e.delete(n+"/proovedores/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var a={createProovedor:i,updateProovedor:o,deleteProovedor:r};return a}angular.module("ElCinaroAdmin").factory("$proovedores",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=n.defer();return t.get(e+"/actividades/",{params:{page:o.page,page_size:o.limit,format:"json",ordering:o.order,search:o.filter}}).success(function(e){angular.copy(e.results,r.semillas),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=n.defer();return t.post(e+"/actividades/",o).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var r={getActividades:o,createActividades:i,actividades:[]};return r}angular.module("ElCinaroAdmin").factory("$seguimiento",e),e.$inject=["baseApi","$http","$q"]}(),function(){"use strict";function e(e,t,n,o,i){function r(n){var i=t.defer();return e.get(o+"/semillas/",{params:{page:n.page||1,page_size:n.limit||100,format:"json",ordering:n.order||"-id",search:n.filter||""}}).success(function(e){angular.copy(e.results,b.semillas),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(n){var r=t.defer();n.fecha_compra=i(n.fecha_compra).format("YYYY-MM-DD");var a=_.mapValues(n,function(e){return _.isObject(e)?e.id:e});return console.log(a),e.post(o+"/semillas/",a).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}function l(n){var r=t.defer();return n.fecha_compra=i(n.fecha_compra).format("YYYY-MM-DD"),e.put(o+"/semillas/"+n.id+"/",n).success(function(e){r.resolve(e)}).error(function(e){r.reject(e)}),r.promise}function s(n){var i=t.defer();return e.get(o+"/cultivos/",{params:{page:n.page,page_size:n.limit,format:"json",ordering:n.order,search:n.filter}}).success(function(e){angular.copy(e.results,b.cultivos),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function c(n){var i=t.defer();return e.get(o+"/lotes/",{params:{page:n.page||1,page_size:n.limit||100,format:"json",ordering:n.order||"-id",search:n.filter||""}}).success(function(e){angular.copy(e.results,b.lotes),i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function u(n){var i=t.defer();return e.get(o+"/rubros/",{params:{page:n.page||1,page_size:n.limit||100,format:"json",ordering:n.order||"-id",search:n.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function d(){var e=t.defer();return n(function(){e.resolve({results:[{id:1,nombre:"gramos"},{id:2,nombre:"unidades"}]})},1e3*Math.random(),!1),e.promise}function m(){var e=t.defer();return n(function(){e.resolve({results:[{id:1,nombre:"Centimetros(cm)"},{id:2,nombre:"Milimetros (mm)"},{id:3,nombre:"Mililitros(cm)"},{id:4,nombre:"Litro (l)"},{id:5,nombre:"Kilogramo(kg)"},{id:6,nombre:"Miligramos (mg)"}]})},1e3*Math.random(),!1),e.promise}function f(n){var i=t.defer();return e.get(o+"/categorias/",{params:{page:n.page,page_size:n.limit,format:"json",ordering:n.order,search:n.filter}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function p(n){var i=t.defer();return e.get(o+"/proovedores/",{params:{page:n.page,page_size:n.limit,format:"json",ordering:n.order,search:n.filter}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function g(n){var i=t.defer();return e.post(o+"/rubros/",n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function h(n){var i=t.defer();return e.put(o+"/rubros/"+n.id+"/",n).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function v(n){var i=t.defer();return e.delete(o+"/rubros/"+n.id+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var b={getSemillas:r,getCultivos:s,getRubros:u,getLotes:c,getProovedores:p,getProovedorCategoria:f,getUnidades:d,getMedidas:m,createSemilla:a,updateSemilla:l,createRubro:g,updateRubro:h,deleteRubro:v,cultivos:[],semillas:[],lotes:[]};return b}angular.module("ElCinaroAdmin").factory("$siembras",e),e.$inject=["$http","$q","$timeout","baseApi","moment"]}(),function(){"use strict";function e(e,t,n){function o(o){var i=t.defer();return e.get(n+"/invernaderos/",{params:{page:o.page||1,page_size:o.limit||100,format:"json",ordering:o.order||"-id",search:o.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function i(o){var i=t.defer();return e.get(n+"/parcelas/",{params:{page:o.page||1,page_size:o.limit||100,format:"json",ordering:o.order||"-id",search:o.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function r(o){var i=t.defer();return e.get(n+"/tipo-parcelas/",{params:{page:o.page||1,page_size:o.limit||100,format:"json",ordering:o.order||"-id",search:o.filter||""}}).success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function a(o){var i=t.defer();return e.delete(n+"/parcelas/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}function l(o){var i=t.defer();return e.delete(n+"/invernaderos/"+o+"/").success(function(e){i.resolve(e)}).error(function(e){i.reject(e)}),i.promise}var s={getInvernaderos:o,getParcelas:i,getTipoParcela:r,deleteParcela:a,deleteInvernadero:l};return s}angular.module("ElCinaroAdmin").factory("$suelos",e),e.$inject=["$http","$q","baseApi"]}(),function(){"use strict";function e(e,n,o,i,r){function a(){var t=n.defer();return e({method:"GET",url:r+"/campaign/options/"}).success(function(e,n,o,i){t.resolve(e)}).error(function(e){t.reject(e)}),t.promise}function l(t,a){var l=n.defer(),s=r+"/user/"+t;return e.put(s,a).success(function(e,t,n,r){l.resolve(e),angular.copy(e,i.user),o.setObject("user",e)}).error(function(e){l.reject(e)}),l.promise}var s={getOptions:a,getClientToken:t,update:l};return s}function t(){return{}}angular.module("ElCinaroAdmin").service("UserService",e),e.$inject=["$http","$q","$localstorage","$rootScope","baseApi"]}(),function(){"use strict";function e(){function e(){return[{id:1,nombre:"L."},{id:2,nombre:"mL."},{id:3,nombre:"g."},{id:4,nombre:"Kg."}]}function t(){return[{name:"Desmalezamiento",_lowername:"desmalezamiento",id:1},{template:"riego.tmpl.html",name:"Riego",_lowername:"riego",id:2},{name:"Fertilizacion",_lowername:"fertilizacion",id:3,template:"fertilizacion.tmpl.html"},{name:"Plaguicida",_lowername:"plagicida",id:4,template:"plaguicida.tmpl.html"},{name:"Limpieza",_lowername:"limpieza",id:5},{name:"Observaciones",_lowername:"observaciones",id:6,template:"observaciones.tmpl.html"}]}function n(){return[{name:"Afghanistan",id:"AF"},{name:"Åland Islands",id:"AX"},{name:"Albania",id:"AL"},{name:"Algeria",id:"DZ"},{name:"American Samoa",id:"AS"},{name:"AndorrA",id:"AD"},{name:"Angola",id:"AO"},{name:"Anguilla",id:"AI"},{name:"Antarctica",id:"AQ"},{name:"Antigua and Barbuda",id:"AG"},{name:"Argentina",id:"AR"},{name:"Armenia",id:"AM"},{name:"Aruba",id:"AW"},{name:"Australia",id:"AU"},{name:"Austria",id:"AT"},{name:"Azerbaijan",id:"AZ"},{name:"Bahamas",id:"BS"},{name:"Bahrain",id:"BH"},{name:"Bangladesh",id:"BD"},{name:"Barbados",id:"BB"},{name:"Belarus",id:"BY"},{name:"Belgium",id:"BE"},{name:"Belize",id:"BZ"},{name:"Benin",id:"BJ"},{name:"Bermuda",id:"BM"},{name:"Bhutan",id:"BT"},{name:"Bolivia",id:"BO"},{name:"Bosnia and Herzegovina",id:"BA"},{name:"Botswana",id:"BW"},{name:"Bouvet Island",id:"BV"},{name:"Brazil",id:"BR"},{name:"British Indian Ocean Territory",id:"IO"},{name:"Brunei Darussalam",id:"BN"},{name:"Bulgaria",id:"BG"},{name:"Burkina Faso",id:"BF"},{name:"Burundi",id:"BI"},{name:"Cambodia",id:"KH"},{name:"Cameroon",id:"CM"},{name:"Canada",id:"CA"},{name:"Cape Verde",id:"CV"},{name:"Cayman Islands",id:"KY"},{name:"Central African Republic",id:"CF"},{name:"Chad",id:"TD"},{name:"Chile",id:"CL"},{name:"China",id:"CN"},{name:"Christmas Island",id:"CX"},{name:"Cocos (Keeling) Islands",id:"CC"},{name:"Colombia",id:"CO"},{name:"Comoros",id:"KM"},{name:"Congo",id:"CG"},{name:"Congo, The Democratic Republic of the",id:"CD"},{name:"Cook Islands",id:"CK"},{name:"Costa Rica",id:"CR"},{name:"Cote D'Ivoire",id:"CI"},{name:"Croatia",id:"HR"},{name:"Cuba",id:"CU"},{name:"Cyprus",id:"CY"},{name:"Czech Republic",id:"CZ"},{name:"Denmark",id:"DK"},{name:"Djibouti",id:"DJ"},{name:"Dominica",id:"DM"},{name:"Dominican Republic",id:"DO"},{name:"Ecuador",id:"EC"},{name:"Egypt",id:"EG"},{name:"El Salvador",id:"SV"},{name:"Equatorial Guinea",id:"GQ"},{name:"Eritrea",id:"ER"},{name:"Estonia",id:"EE"},{name:"Ethiopia",id:"ET"},{name:"Falkland Islands (Malvinas)",id:"FK"},{name:"Faroe Islands",id:"FO"},{name:"Fiji",id:"FJ"},{name:"Finland",id:"FI"},{name:"France",id:"FR"},{name:"French Guiana",id:"GF"},{name:"French Polynesia",id:"PF"},{name:"French Southern Territories",id:"TF"},{name:"Gabon",id:"GA"},{name:"Gambia",id:"GM"},{name:"Georgia",id:"GE"},{name:"Germany",id:"DE"},{name:"Ghana",id:"GH"},{name:"Gibraltar",id:"GI"},{name:"Greece",id:"GR"},{name:"Greenland",id:"GL"},{name:"Grenada",id:"GD"},{name:"Guadeloupe",id:"GP"},{name:"Guam",id:"GU"},{name:"Guatemala",id:"GT"},{name:"Guernsey",id:"GG"},{name:"Guinea",id:"GN"},{name:"Guinea-Bissau",id:"GW"},{name:"Guyana",id:"GY"},{name:"Haiti",id:"HT"},{name:"Heard Island and Mcdonald Islands",id:"HM"},{name:"Holy See (Vatican City State)",id:"VA"},{name:"Honduras",id:"HN"},{name:"Hong Kong",id:"HK"},{name:"Hungary",id:"HU"},{name:"Iceland",id:"IS"},{name:"India",id:"IN"},{name:"Indonesia",id:"ID"},{name:"Iran, Islamic Republic Of",id:"IR"},{name:"Iraq",id:"IQ"},{name:"Ireland",id:"IE"},{name:"Isle of Man",id:"IM"},{name:"Israel",id:"IL"},{name:"Italy",id:"IT"},{name:"Jamaica",id:"JM"},{name:"Japan",id:"JP"},{name:"Jersey",id:"JE"},{name:"Jordan",id:"JO"},{name:"Kazakhstan",id:"KZ"},{name:"Kenya",id:"KE"},{name:"Kiribati",id:"KI"},{name:"Korea, Democratic People'S Republic of",id:"KP"},{name:"Korea, Republic of",id:"KR"},{name:"Kuwait",id:"KW"},{name:"Kyrgyzstan",id:"KG"},{name:"Lao People'S Democratic Republic",id:"LA"},{name:"Latvia",id:"LV"},{name:"Lebanon",id:"LB"},{name:"Lesotho",id:"LS"},{name:"Liberia",id:"LR"},{name:"Libyan Arab Jamahiriya",id:"LY"},{name:"Liechtenstein",id:"LI"},{name:"Lithuania",id:"LT"},{name:"Luxembourg",id:"LU"},{name:"Macao",id:"MO"},{name:"Macedonia, The Former Yugoslav Republic of",id:"MK"},{name:"Madagascar",id:"MG"},{name:"Malawi",id:"MW"},{name:"Malaysia",id:"MY"},{name:"Maldives",id:"MV"},{name:"Mali",id:"ML"},{name:"Malta",id:"MT"},{name:"Marshall Islands",id:"MH"},{name:"Martinique",id:"MQ"},{name:"Mauritania",id:"MR"},{name:"Mauritius",id:"MU"},{name:"Mayotte",id:"YT"},{name:"Mexico",id:"MX"},{name:"Micronesia, Federated States of",id:"FM"},{name:"Moldova, Republic of",id:"MD"},{name:"Monaco",id:"MC"},{name:"Mongolia",id:"MN"},{name:"Montserrat",id:"MS"},{name:"Morocco",id:"MA"},{name:"Mozambique",id:"MZ"},{name:"Myanmar",id:"MM"},{name:"Namibia",id:"NA"},{name:"Nauru",id:"NR"},{name:"Nepal",id:"NP"},{name:"Netherlands",id:"NL"},{name:"Netherlands Antilles",id:"AN"},{name:"New Caledonia",id:"NC"},{name:"New Zealand",id:"NZ"},{name:"Nicaragua",id:"NI"},{name:"Niger",id:"NE"},{name:"Nigeria",id:"NG"},{name:"Niue",id:"NU"},{name:"Norfolk Island",id:"NF"},{name:"Northern Mariana Islands",id:"MP"},{name:"Norway",id:"NO"},{name:"Oman",id:"OM"},{name:"Pakistan",id:"PK"},{name:"Palau",id:"PW"},{name:"Palestinian Territory, Occupied",id:"PS"},{name:"Panama",id:"PA"},{name:"Papua New Guinea",id:"PG"},{name:"Paraguay",id:"PY"},{name:"Peru",id:"PE"},{name:"Philippines",id:"PH"},{name:"Pitcairn",id:"PN"},{name:"Poland",id:"PL"},{name:"Portugal",id:"PT"},{name:"Puerto Rico",id:"PR"},{name:"Qatar",id:"QA"},{name:"Reunion",id:"RE"},{name:"Romania",id:"RO"},{name:"Russian Federation",id:"RU"},{name:"RWANDA",id:"RW"},{name:"Saint Helena",id:"SH"},{name:"Saint Kitts and Nevis",id:"KN"},{name:"Saint Lucia",id:"LC"},{name:"Saint Pierre and Miquelon",id:"PM"},{name:"Saint Vincent and the Grenadines",id:"VC"},{name:"Samoa",id:"WS"},{name:"San Marino",id:"SM"},{name:"Sao Tome and Principe",id:"ST"},{name:"Saudi Arabia",id:"SA"},{name:"Senegal",id:"SN"},{name:"Serbia and Montenegro",id:"CS"},{name:"Seychelles",id:"SC"},{name:"Sierra Leone",id:"SL"},{name:"Singapore",id:"SG"},{name:"Slovakia",id:"SK"},{name:"Slovenia",id:"SI"},{name:"Solomon Islands",id:"SB"},{name:"Somalia",id:"SO"},{name:"South Africa",id:"ZA"},{name:"South Georgia and the South Sandwich Islands",id:"GS"},{name:"Spain",id:"ES"},{name:"Sri Lanka",id:"LK"},{name:"Sudan",id:"SD"},{name:"Suriname",id:"SR"},{name:"Svalbard and Jan Mayen",id:"SJ"},{name:"Swaziland",id:"SZ"},{name:"Sweden",id:"SE"},{name:"Switzerland",id:"CH"},{name:"Syrian Arab Republic",id:"SY"},{name:"Taiwan, Province of China",
id:"TW"},{name:"Tajikistan",id:"TJ"},{name:"Tanzania, United Republic of",id:"TZ"},{name:"Thailand",id:"TH"},{name:"Timor-Leste",id:"TL"},{name:"Togo",id:"TG"},{name:"Tokelau",id:"TK"},{name:"Tonga",id:"TO"},{name:"Trinidad and Tobago",id:"TT"},{name:"Tunisia",id:"TN"},{name:"Turkey",id:"TR"},{name:"Turkmenistan",id:"TM"},{name:"Turks and Caicos Islands",id:"TC"},{name:"Tuvalu",id:"TV"},{name:"Uganda",id:"UG"},{name:"Ukraine",id:"UA"},{name:"United Arab Emirates",id:"AE"},{name:"United Kingdom",id:"GB"},{name:"United States",id:"US"},{name:"United States Minor Outlying Islands",id:"UM"},{name:"Uruguay",id:"UY"},{name:"Uzbekistan",id:"UZ"},{name:"Vanuatu",id:"VU"},{name:"Venezuela",id:"VE"},{name:"Viet Nam",id:"VN"},{name:"Virgin Islands, British",id:"VG"},{name:"Virgin Islands, U.S.",id:"VI"},{name:"Wallis and Futuna",id:"WF"},{name:"Western Sahara",id:"EH"},{name:"Yemen",id:"YE"},{name:"Zambia",id:"ZM"},{name:"Zimbabwe",id:"ZW"}]}var o={getCountries:n,getActions:t,getMedidas:e,item:{}};return o}angular.module("ElCinaroAdmin").factory("$util",e)}(),function(){"use strict";function e(e){function t(t,n,o){var i,r;i=t.dropzone,r=new e(n[0],i.options),t.reset&&r.on("complete",function(e){r.removeFile(e)}),angular.forEach(i.eventHandlers,function(e,t){r.on(t,e)})}var n={link:t,restrict:"EA",scope:{dropzone:"=dropzone",reset:"@reset"}};return n}angular.module("ElCinaroAdmin").directive("dropzone",e),e.$inject=["Dropzone"]}(),function(){"use strict";function e(){function e(e,t,n,o){}var n={restrict:"EA",templateUrl:"assets/views/autocomplete/autocomplete.html",scope:{meta:"=",item:"=?ngModel"},link:e,controller:t,controllerAs:"vm",bindToController:!0};return n}function t(e,t,n,o,i){function r(){console.log("autocomplete directive"),console.log(u.meta),console.log(u.item)}function a(e){alert("Sorry! You'll need to create a Constitution for "+e+" first!")}function l(t){var n={page:1,limit:100,filter:"",order:"-id",filter:t},r={getRubros:function(){return o.getRubros(n)},getCultivos:function(){return o.getCultivos(n)},getProovedores:function(){return o.getProovedores(n)},getUnidades:function(){return o.getUnidades(n)},getMedidas:function(){return o.getMedidas(n)},getProovedorCategoria:function(){return o.getProovedorCategoria(n)},getTipoParcela:function(){return i.getTipoParcela(n)}};return r[u.meta.handler]().then(function(t){return e.map(t.results,function(e){return{id:e.id,nombre:e.nombre}})})}function s(e){n.info("Text changed to "+e)}function c(e){n.info("Item changed to "+JSON.stringify(e))}var u=this;u.simulateQuery=!1,u.isDisabled=!1,u.querySearch=l,u.selectedItemChange=c,u.searchTextChange=s,u.newState=a,r()}angular.module("ElCinaroAdmin").directive("autoComplete",e),t.$inject=["_","$scope","$log","$siembras","$suelos"]}(),function(){"use strict";function e(){var e={restrict:"EA",controllerAs:"vm",controller:t,bindToController:!0,templateUrl:"assets/views/chips/adbChips.html",scope:{map:"=?",max:"@?",list:"=",label:"@?",click:"=?",create:"=?",filter:"=?",id:"@?adbId",disabled:"=",editable:"=",hideList:"=?",listClass:"@?",showCount:"=?",placeholder:"@?",model:"=?ngModel"}};return e}function t(e,t,n,o,i,r){function a(){u.map||(u.map={name:"name",image:"image",type:"chip"}),u.placeholder||(u.placeholder="Type here to filter"),void 0===u.listClass&&(u.listClass="fixed-rows"),void 0===u.showCount&&(u.showCount=!0),u.create&&t(document).keydown(c),void 0===u.filter&&(u.filter={}),e.isUndefined(u.model)&&(u.model=[])}function l(e){return function(t){return!u.exists(t)&&t[u.map.name].toLowerCase().indexOf(e.toLowerCase())!=-1}}function s(e,n){if(!e.length&&n.indexOf(",")!=-1){var o=u.create(n.split(",").filter(function(e){return e&&e.length}));console.log(o),angular.forEach(o,function(e){u.selectItem(e)}),t(u.input).val("")}}function c(e){e.stopPropagation(),t(u.input).is(":focus")&&13==e.which&&n.$apply(function(){var e=u.queryGiven&&u.list.length?u.list.filter(l(u.queryGiven)):[];s(e,u.queryGiven+",")})}var u=this;u.queryGiven="",u.input="#chips-"+(u.id||Date.now())+" md-autocomplete-wrap input",a(),u.querySearch=function(e){u.queryGiven=e;var t=e&&u.list.length?u.list.filter(l(e)):[];return u.create&&s(t,e),t},u.selectItem=function(t){console.log(u.model),u.editable&&u.model.push(t),e.isFunction(u.click)&&u.click(t)},u.exists=function(t){return e.findIndex(u.model,function(e){return e[u.map.name]==t[u.map.name]})>=0},u.stopPropagation=function(e){e.stopPropagation()},n.$watch("vm.list",function(e,t){console.log(e)})}angular.module("ElCinaroAdmin").directive("adbChips",e),t.$inject=["_","jQuery","$scope","$timeout","$mdConstant","$mdDialog"]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/footer/footer.html",controller:t,controllerAs:"vm",bindToController:!0};return e}function t(){function e(){console.log("footer Activated")}e()}angular.module("ElCinaroAdmin").directive("footerDirective",e),t.$inject=[]}(),function(){"use strict";function e(){var e={restrict:"EA",templateUrl:"assets/views/header/header.html",controller:t,controllerAs:"vm",bindToController:!0,scope:{}};return e}function t(e,t,n){var o=this;o.logout=function(){console.log("LOGOUT"),e.logout()},n.$on("login",function(e,t){n.user||angular.copy(t,n.user),console.log("login",n.user)})}angular.module("ElCinaroAdmin").directive("headerDirective",e),t.$inject=["Auth","$scope","$rootScope"]}(),function(){"use strict";function e(e,t,n,o,i,r,a,l,s,c,u,d,m){function f(){console.log("modal controller"),console.log(m),t.meta=angular.copy(m)}function p(e,t,n){switch(e){case"clientes":return s[t](n);case"semillas":return c[t](n);case"proovedores":return u[t](n);case"admin":return a[t](n);case"insumos":return l[t](n);case"rubros":return c[t](n);default:return g(n)}}function g(e){var t=n.defer();return i(function(){t.resolve(e)},1e3*Math.random(),!1),t.results}t.meta={options:{}},f(),t.close=function(){r.hide()},t.handle=function(e){console.log(e),e&&r.cancel(),p(m.type,m.handler,t.meta.data).then(function(e){r.hide(e)}).catch(function(e){console.log(e)})},t.selectHandler=function(n,o,i){console.log(n,o);var r={page:1,limit:100,filter:"",order:"-id"};if(!t.meta.options[n]){var a={getRubros:function(){return c.getRubros(r)},getCultivos:function(){return c.getCultivos(r)},getProovedores:function(){return c.getProovedores(r)},getUnidades:function(){return c.getUnidades(r)},getProovedorCategoria:function(){return c.getProovedorCategoria(r)},getTipoParcela:function(){return d.getTipoParcela(r)}};if(a.hasOwnProperty(o))return a[o]().then(function(o){t.meta.options[n]=e.map(o.results,function(e){return{id:e.id,name:e.nombre}})}).catch(function(e){console.log(e)})}},t.isInput=function(t){return e.includes(["email","text","password"],t.type)},t.$watch("meta",function(e,t){console.log(e,t)})}angular.module("ElCinaroAdmin").controller("ModalController",e),e.$inject=["_","$scope","$q","$http","$timeout","$mdDialog","$admin","$insumos","$pedidos","$siembras","$proovedores","$suelos","payload"]}(),function(){"use strict";function e(e,t,n,o,i,r,a){function l(){console.log("action controller"),angular.copy(r.item,s.item)}var s=this;s.item={},s.data={},s.insumos=a.insumos,s.medidas=r.getMedidas(),l(),s.close=function(){s.item.touched=!0,i.hide(s.data)},s.response=function(){s.item.touched=!0,i.hide(s.data)},s.title=function(){return e.join([e.capitalize(s.item.selector),s.item.cultivo.description],": ")}}angular.module("ElCinaroAdmin").controller("ActionController",e),e.$inject=["_","$scope","$http","$q","$mdDialog","$util","$insumos"]}(),function(){"use strict";function e(e,t){function n(){}n()}angular.module("ElCinaroAdmin").controller("ActividadController",e),e.$inject=["$http","$q"]}();
//# sourceMappingURL=data:application/json;base64,
